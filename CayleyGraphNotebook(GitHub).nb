(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   2109248,      48408]
NotebookOptionsPosition[   2095013,      48176]
NotebookOutlinePosition[   2095405,      48192]
CellTagsIndexPosition[   2095362,      48189]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Function Definitions (Run this Chapter)", "Chapter",
 CellChangeTimes->{{3.8335563609990263`*^9, 3.833556416045306*^9}, {
  3.844254229633263*^9, 3.844254233906394*^9}, {3.844256221137884*^9, 
  3.844256224895748*^9}},ExpressionUUID->"c606f1d7-66fb-41cf-a8db-\
e253a7820f75"],

Cell[CellGroupData[{

Cell["Defining Functions (Run this Section)", "Section",
 CellChangeTimes->{{3.833557413046177*^9, 3.833557417343505*^9}, {
  3.8358749590844917`*^9, 3.835874960333374*^9}, {3.83701557760645*^9, 
  3.837015578523328*^9}, {3.837098602969105*^9, 3.837098603377014*^9}, {
  3.840909921307395*^9, 3.840909926731324*^9}, {3.8442542272415667`*^9, 
  3.84425422788897*^9}},ExpressionUUID->"d82ff012-e3c2-4816-9bdf-\
8ea12890d4e1"],

Cell[CellGroupData[{

Cell["General Functions", "Subsection",
 CellChangeTimes->{{3.83657728343615*^9, 
  3.836577290994911*^9}},ExpressionUUID->"0f925df7-6361-4c89-a796-\
65d28d95043f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "function", " ", "below", " ", "is", " ", "used", " ", "to", 
    " ", "swap", " ", "the", " ", "position", " ", "of", " ", "two", " ", 
    "elements", " ", "in", " ", "a", " ", 
    RowBox[{"list", ".", " ", "The"}], " ", "user", " ", "inputs", " ", "a", 
    " ", "list", " ", "and", " ", "the", " ", "two", " ", "indices", " ", 
    "of", " ", "elements", " ", "to", " ", "be", " ", 
    RowBox[{"swapped", ".", " ", "The"}], " ", "function", " ", "returns", 
    " ", "the", " ", "inputted", " ", "list", " ", "with", " ", "requested", 
    " ", "elements", " ", 
    RowBox[{"swapped", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Swap", "[", 
      RowBox[{"list_", ",", "element1_", ",", "element2_"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "newlist", "}"}], ",", 
       RowBox[{
        RowBox[{"newlist", " ", "=", " ", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"list", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"element1", "\[Rule]", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "element2", "]"}], "]"}]}], ",", 
             RowBox[{"element2", "\[Rule]", " ", 
              RowBox[{"list", "[", 
               RowBox[{"[", "element1", "]"}], "]"}]}]}], "}"}]}], "]"}]}], 
        ";", "newlist"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NormKet", "[", "TestState_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"TestState", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"FirstPosition", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{"Transpose", "[", "TestState", "]"}], "]"}], ",", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"##", "\[NotEqual]", " ", "0"}], "&"}], ")"}]}]}], 
              "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}], ")"}], "*", "TestState"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NormBra", "[", "TestState_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"TestState", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"FirstPosition", "[", 
             RowBox[{"TestState", ",", 
              RowBox[{"_", "?", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"##", "\[NotEqual]", " ", "0"}], "&"}], ")"}]}]}], 
             "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}], ")"}], "*", "TestState"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NormMatrix", "[", "matrix_", "]"}], ":=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Numerator", "[", 
          RowBox[{"matrix", "[", 
           RowBox[{"[", 
            RowBox[{"Sequence", "@@", 
             RowBox[{"FirstPosition", "[", 
              RowBox[{"matrix", ",", 
               RowBox[{"_", "?", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"##", "\[NotEqual]", " ", "0"}], "&"}], ")"}]}]}], 
              "]"}]}], "]"}], "]"}], "]"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}]}], ")"}], "*", "matrix"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "function", " ", "below", " ", "is", " ", "used", " ", "to", 
     " ", "construct", " ", "a", " ", "modified", " ", "density", " ", 
     "matrix", " ", "corresponding", " ", "to", " ", "a", " ", "permutation", 
     " ", "of", " ", 
     RowBox[{"qubits", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
     "the", " ", "dimension", " ", "of", " ", "the", " ", "system", " ", 
     "along", " ", "with", " ", "an", " ", "indexed", " ", "list", " ", 
     "displaying", " ", "the", " ", "desired", " ", "new", " ", "ordering", 
     " ", "of", " ", 
     RowBox[{"qubits", ".", " ", "The"}], " ", "function", " ", "will", " ", 
     "generate", " ", "and", " ", "return", " ", "the", " ", "desired", " ", 
     "change", " ", "of", " ", "basis", " ", 
     RowBox[{"matrix", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PermutedIdentity", "[", 
      RowBox[{"dim_", ",", "NewOrderList_"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"OriginalList", " ", "=", " ", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"0", ",", "1"}], "}"}], ",", "dim"}], "]"}]}], ",", 
         "PermutedPiece", ",", 
         RowBox[{"PermutedList", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"NewIdentity", " ", "=", " ", 
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"2", "^", "dim"}], "]"}]}], ",", "i", ",", "j", ",", "k"}],
         "}"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "^", "dim"}], ")"}], " ", "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{
           RowBox[{"PermutedPiece", " ", "=", " ", 
            RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"k", "=", "1"}], ",", 
             RowBox[{"k", "<", 
              RowBox[{
               RowBox[{"Length", "[", "NewOrderList", "]"}], "+", "1"}]}], 
             ",", 
             RowBox[{"k", "++"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"PermutedPiece", ",", 
               RowBox[{
                RowBox[{"OriginalList", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"-", 
                  RowBox[{"NewOrderList", "[", 
                   RowBox[{"[", 
                    RowBox[{"-", "k"}], "]"}], "]"}]}], "]"}], "]"}]}], 
              "]"}]}], "]"}], ";", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"PermutedList", ",", "PermutedPiece"}], "]"}]}]}], "]"}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", "NewOrderList", "]"}], " ", "\[LessEqual]", 
           " ", "dim"}], ",", 
          RowBox[{"For", "[", 
           RowBox[{
            RowBox[{"j", "=", "1"}], " ", ",", 
            RowBox[{"j", "<", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"2", "^", "dim"}], ")"}], " ", "+", "1"}]}], ",", 
            RowBox[{"j", "++"}], ",", 
            RowBox[{
             RowBox[{"NewIdentity", " ", "=", " ", 
              RowBox[{"Swap", "[", 
               RowBox[{"NewIdentity", ",", "j", ",", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"PermutedList", ",", 
                   RowBox[{"OriginalList", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}], ";", 
             RowBox[{"PermutedList", " ", "=", " ", 
              RowBox[{"Swap", "[", 
               RowBox[{"PermutedList", ",", "j", ",", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"PermutedList", ",", 
                   RowBox[{"OriginalList", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}]}]}], "]"}],
           ",", 
          RowBox[{"Print", "[", "\"\<Invalid qubit number.\>\"", "]"}], ",", 
          RowBox[{
          "Print", "[", "\"\<Unable to interpret qubit number.\>\"", "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "NewIdentity"}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"The", " ", 
     RowBox[{"GroupGenerate", "[", "]"}], " ", "function", " ", "generates", 
     " ", "a", " ", "finite", " ", "group", " ", "of", " ", "operators", " ", 
     "given", " ", "a", " ", "set", " ", "of", " ", "generators", " ", "in", 
     " ", "a", " ", "matrix", " ", 
     RowBox[{"representation", ".", " ", "The"}], " ", "option", " ", "of", 
     " ", "parallel", " ", "computation", " ", "is", " ", "offered", " ", 
     "by", " ", "the", " ", "second", " ", 
     RowBox[{"argument", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GroupGenerate", "[", 
     RowBox[{"generators_", ",", "parallelQ_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"First", "[", 
              RowBox[{"Dimensions", "[", 
               RowBox[{"First", "[", "generators", "]"}], "]"}], "]"}], "]"}],
             "}"}], ",", "generators"}], "]"}]}], ",", 
        RowBox[{"count", "=", "0"}], ",", 
        RowBox[{"newElements", "=", "1"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"count", "=", 
        RowBox[{"Length", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"parallelQ", "==", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"newElements", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"g", " ", "=", " ", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"ParallelTable", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"g", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ".", 
                   RowBox[{"g", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
                "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"newElements", " ", "=", " ", 
             RowBox[{
              RowBox[{"Length", "[", "g", "]"}], "-", "count"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"count", " ", "=", " ", 
             RowBox[{"Length", "[", "g", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"newElements", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"g", " ", "=", " ", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"g", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ".", 
                   RowBox[{"g", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
                "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"newElements", " ", "=", " ", 
             RowBox[{
              RowBox[{"Length", "[", "g", "]"}], "-", "count"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"count", " ", "=", " ", 
             RowBox[{"Length", "[", "g", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "g"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"The", " ", 
     RowBox[{"NormedGroupGenerate", "[", "]"}], " ", "function", " ", 
     "generates", " ", "a", " ", "version", " ", "of", " ", "the", " ", 
     "group", " ", "with", " ", "overall", " ", "phase", " ", "element", " ", 
     
     RowBox[{"removed", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NormedGroupGenerate", "[", 
     RowBox[{"generators_", ",", "parallelQ_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"First", "[", 
              RowBox[{"Dimensions", "[", 
               RowBox[{"First", "[", "generators", "]"}], "]"}], "]"}], "]"}],
             "}"}], ",", "generators"}], "]"}]}], ",", 
        RowBox[{"count", "=", "0"}], ",", 
        RowBox[{"newElements", "=", "1"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"count", "=", 
        RowBox[{"Length", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"parallelQ", "==", "True"}], ",", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"newElements", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"g", " ", "=", " ", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"ParallelTable", "[", 
                 RowBox[{
                  RowBox[{"NormKet", "[", 
                   RowBox[{
                    RowBox[{"g", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ".", 
                    RowBox[{"g", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
                "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"newElements", " ", "=", " ", 
             RowBox[{
              RowBox[{"Length", "[", "g", "]"}], "-", "count"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"count", " ", "=", " ", 
             RowBox[{"Length", "[", "g", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"While", "[", 
          RowBox[{
           RowBox[{"newElements", ">", "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"g", " ", "=", " ", 
             RowBox[{"DeleteDuplicates", "[", 
              RowBox[{"Flatten", "[", 
               RowBox[{
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"NormKet", "[", 
                   RowBox[{
                    RowBox[{"g", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ".", 
                    RowBox[{"g", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"i", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"j", ",", 
                    RowBox[{"Length", "[", "g", "]"}]}], "}"}]}], "]"}], ",", 
                "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"newElements", " ", "=", " ", 
             RowBox[{
              RowBox[{"Length", "[", "g", "]"}], "-", "count"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"count", " ", "=", " ", 
             RowBox[{"Length", "[", "g", "]"}]}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "g"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.836577710786366*^9, 3.836577898673732*^9}, {
   3.836577955191225*^9, 3.836578005570623*^9}, {3.836855266298991*^9, 
   3.83685532091973*^9}, {3.836855368110304*^9, 3.8368554775687933`*^9}, {
   3.8368555789346523`*^9, 3.836855581429804*^9}, {3.8369216270055304`*^9, 
   3.836921666414604*^9}, {3.836922010066065*^9, 3.836922019705035*^9}, {
   3.836924488155023*^9, 3.8369245069556417`*^9}, {3.8369245877602367`*^9, 
   3.836924702749289*^9}, {3.836925543945272*^9, 3.8369255471604433`*^9}, {
   3.836926301922594*^9, 3.836926308385477*^9}, {3.836926692217814*^9, 
   3.836926693498872*^9}, {3.836926745000717*^9, 3.836926747255982*^9}, {
   3.836927008967647*^9, 3.836927068892474*^9}, {3.836927596921927*^9, 
   3.8369276266326027`*^9}, {3.8369276791907253`*^9, 
   3.8369276907436123`*^9}, {3.836927735628323*^9, 3.836927749523782*^9}, {
   3.836927780747271*^9, 3.836927831786356*^9}, {3.836936216717718*^9, 
   3.836936224035181*^9}, {3.836937689457457*^9, 3.8369376906965933`*^9}, {
   3.83693772396148*^9, 3.836937728992882*^9}, {3.836938072411071*^9, 
   3.8369380959459343`*^9}, {3.836938135896551*^9, 3.836938211680917*^9}, {
   3.836938259866068*^9, 3.8369384115341263`*^9}, {3.836996608380209*^9, 
   3.8369966140381317`*^9}, {3.837003806184808*^9, 3.83700384673798*^9}, {
   3.837003922114161*^9, 3.83700396387922*^9}, {3.837004004846011*^9, 
   3.837004068035302*^9}, {3.837004187744019*^9, 3.8370042400855207`*^9}, 
   3.852290379449201*^9, {3.864690140191039*^9, 3.864690224427328*^9}, {
   3.864690296138479*^9, 3.864690348232957*^9}, {3.8734025496114388`*^9, 
   3.8734025671797247`*^9}, {3.874843106057453*^9, 3.874843109514159*^9}, {
   3.877019677221484*^9, 3.8770197297807007`*^9}, {3.889018588635509*^9, 
   3.8890186392681293`*^9}, 3.8921604266860123`*^9, {3.89448051087891*^9, 
   3.8944805612579536`*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"15a8188b-56a5-4f84-898a-e70ce06faed0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Quantum Entropy Functions", "Subsection",
 CellChangeTimes->{{3.836577316018289*^9, 3.836577319586328*^9}, {
  3.8409098956003923`*^9, 
  3.840909932362864*^9}},ExpressionUUID->"a00750ed-b1f2-45d6-be67-\
e18d000e5624"],

Cell[CellGroupData[{

Cell["Density Matrix and Projection", "Subsubsection",
 CellChangeTimes->{{3.852742445891605*^9, 
  3.8527424515384817`*^9}},ExpressionUUID->"436dbfe6-b5dd-46d9-ab33-\
143d534aaa46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "we", " ", "define", " ", "functions", " ", "related", " ", 
    "to", " ", "calculating", " ", "entanglement", " ", "entropy", " ", "for",
     " ", "quantum", " ", 
    RowBox[{"systems", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "function", " ", "below", " ", "builds", " ", "the", " ", 
    "density", " ", "matrix", " ", "for", " ", "a", " ", "given", " ", 
    "quantum", " ", "state", " ", "by", " ", "taking", " ", "the", " ", 
    "outer", " ", "product", " ", "of", " ", "the", " ", "state", " ", "ket", 
    " ", "with", " ", "its", " ", "corresponding", " ", 
    RowBox[{"bra", ".", " ", "The"}], " ", "user", " ", "inputs", " ", "the", 
    " ", "ket", " ", "representing", " ", "the", " ", "chosen", " ", "system",
     " ", "and", " ", "the", " ", "function", " ", "will", " ", "return", " ",
     "the", " ", "corresponding", " ", "density", " ", 
    RowBox[{"matrix", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"DensityMatrix", "[", "state_", "]"}], ":=", " ", 
     RowBox[{"state", ".", 
      RowBox[{"ConjugateTranspose", "[", "state", "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "The", " ", "following", " ", "function", " ", "builds", " ", "the", " ",
       "state", " ", "ket", " ", "from", " ", "a", " ", "density", " ", 
      RowBox[{"matrix", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
      "a", " ", "density", " ", "matrix", " ", "describing", " ", "a", " ", 
      "quantum", " ", "state"}], ",", " ", 
     RowBox[{
     "and", " ", "the", " ", "function", " ", "returns", " ", "the", " ", 
      "ket", " ", "representation", " ", "of", " ", "that", " ", 
      RowBox[{"state", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"KetProjector", "[", "\[Rho]_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"stateket", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"basisbra", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"ConstantArray", "[", 
            RowBox[{"0", ",", 
             RowBox[{
              RowBox[{"Dimensions", "[", "\[Rho]", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "}"}]}], ",", 
         RowBox[{"indexlist", " ", "=", " ", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"Dimensions", "[", "\[Rho]", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ",", "i", ",", "j"}], 
        "}"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{
            RowBox[{"Length", "[", "indexlist", "]"}], "+", "1"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"stateket", ",", 
            RowBox[{"{", 
             RowBox[{"Sqrt", "[", 
              RowBox[{
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"ReplacePart", "[", 
                  RowBox[{"basisbra", ",", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "i"}], "}"}], "\[Rule]", " ", "1"}]}], 
                  "]"}], ".", "\[Rho]", ".", 
                 RowBox[{"Transpose", "[", 
                  RowBox[{"ReplacePart", "[", 
                   RowBox[{"basisbra", ",", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "i"}], "}"}], "\[Rule]", " ", "1"}]}], 
                   "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "]"}], "}"}]}], "]"}]}], "]"}],
         ";", "stateket"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        StyleBox[
         RowBox[{
          RowBox[{
          "Here", " ", "we", " ", "use", " ", "the", " ", "code", " ", "for", 
           " ", "computing", " ", "partial", " ", "trace", " ", "from", " ", 
           "Mark", " ", 
           RowBox[{"S", ".", "Tame", ".", "The"}], " ", "program", " ", "is", 
           " ", "run", " ", "by", " ", "calling"}], "\[LineSeparator]", 
          RowBox[{
           RowBox[{
            StyleBox[
             RowBox[{"TraceSystem", "[", 
              RowBox[{"DensityMatrix", ",", 
               RowBox[{"{", 
                RowBox[{
                "SubsystemIndex1", ",", "SubsystemIndex2", ",", "..."}], 
                "}"}]}], "]"}], "Input"], ".", "The"}], " ", "first", " ", 
           "argument", " ", "of", " ", "the", " ", "function", " ", "is", " ",
            "the", " ", "original", " ", "density", " ", "matrix", " ", "to", 
           " ", "be", " ", 
           RowBox[{"reduced", ".", 
            StyleBox["There", "Code"]}], 
           StyleBox[" ", "Code"], 
           StyleBox["is", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["an", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["assumed", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["ordering", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["of", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["elements", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["of", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["your", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["density", "Code"], 
           StyleBox[" ", "Code"], 
           StyleBox["matrix", "Code"]}]}], "Text"], 
        StyleBox[",", "Code"], 
        StyleBox[" ", "Code"], 
        StyleBox[
         RowBox[{
          RowBox[{
           RowBox[{"consider", " ", "the", " ", "two"}], "-", 
           RowBox[{"qubit", " ", "example", " ", 
            RowBox[{"below", ":", 
             TagBox[GridBox[{
                {"Basis", 
                 RowBox[{
                  RowBox[{"<", "00"}], "|"}], 
                 RowBox[{
                  RowBox[{"<", "01"}], "|"}], 
                 RowBox[{
                  RowBox[{"<", "10"}], "|"}], 
                 RowBox[{
                  RowBox[{"<", "11"}], "|"}]},
                {
                 RowBox[{"|", 
                  RowBox[{"00", ">"}]}], "a", "b", "c", "d"},
                {
                 RowBox[{"|", 
                  RowBox[{"01", ">"}]}], "e", "f", "g", "h"},
                {
                 RowBox[{"|", 
                  RowBox[{"10", ">"}]}], "i", "j", "k", "l"},
                {
                 RowBox[{"|", 
                  RowBox[{"11", ">"}]}], "m", "n", "o", "p"}
               }],
              MatrixForm[#]& ]}]}]}], "                           ", 
          "\[IndentingNewLine]", " ", 
          RowBox[{
           FormBox[
            SubscriptBox["\[Rho]", "sys"],
            TraditionalForm], "=", 
           TagBox[
            RowBox[{"(", GridBox[{
               {"a", "b", "c", "d"},
               {"e", "f", "g", "h"},
               {"i", "j", "k", "l"},
               {"m", "n", "o", "p"}
              }]}],
            MatrixForm[#]& ]}]}], "Text"]}], 
       StyleBox[")", "Text"]}], 
      StyleBox["Subsystem", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["indexing", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["follows", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["that", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["of", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["the", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["constituent", "Text"], 
      StyleBox[" ", "Text"], 
      StyleBox["qubits", "Text"]}], 
     StyleBox[",", "Text"], 
     StyleBox[
      RowBox[{
      "beginning", " ", "at", " ", "index", " ", "1.", " ", "For", " ", 
       RowBox[{
        StyleBox[
         RowBox[{"example", 
          StyleBox["TraceSystem", "Input"]}]], 
        StyleBox["[", "Input"], 
        StyleBox[
         RowBox[{"DensityMatrix", ",", 
          RowBox[{"{", "1", "}"}]}], "Input"], 
        StyleBox["]", "Input"]}], "would", " ", "return", " ", "the", " ", 
       "reduced", " ", "density", " ", "matrix", " ", "given", " ", "by", " ",
        "tracing", " ", "out", " ", "over", " ", "the", " ", "first", " ", 
       RowBox[{"qubit", "."}]}], "Text"]}], 
    StyleBox["*)", "Text"]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox["\[IndentingNewLine]", "Text"], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"Program", " ", 
       RowBox[{"below", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
       "the", " ", "density", " ", "matrix", " ", "to", " ", "be", " ", 
       "traced", " ", "out"}], ",", " ", 
      RowBox[{
      "along", " ", "with", " ", "the", " ", "indices", " ", "of", " ", 
       "substates", " ", "that", " ", "will", " ", "be", " ", "traced", " ", 
       RowBox[{"over", "."}]}]}], "*)"}], "Text"], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SwapParts", "[", 
     RowBox[{"expr_", ",", " ", "pos1_", ",", " ", "pos2_"}], "]"}], " ", ":=",
     " ", 
    RowBox[{
     RowBox[{
      RowBox[{"ReplacePart", "[", 
       RowBox[{"#", ",", "#", ",", " ", 
        RowBox[{"{", 
         RowBox[{"pos1", ",", "pos2"}], "}"}], ",", " ", 
        RowBox[{"{", 
         RowBox[{"pos2", ",", "pos1"}], "}"}]}], "]"}], "&"}], "[", "expr", 
     "]"}]}], "\n", 
   RowBox[{
    RowBox[{"TraceSystem", "[", 
     RowBox[{"D_", ",", " ", "s_"}], "]"}], ":=", " ", 
    RowBox[{"(", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Qubits", "=", 
       RowBox[{"Reverse", "[", 
        RowBox[{"Sort", "[", "s", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"TrkM", "=", "D"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"z", "=", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Dimensions", "[", "Qubits", "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], "+", "1"}], ")"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"q", "=", "1"}], ",", 
        RowBox[{"q", "<", "z"}], ",", 
        RowBox[{"q", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"n", "=", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Dimensions", "[", "TrkM", "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], ")"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"M", "=", "TrkM"}], ";", "\[IndentingNewLine]", 
         RowBox[{"k", "=", 
          RowBox[{"Qubits", "[", 
           RowBox[{"[", "q", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"k", "\[Equal]", "n"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"TrkM", "=", 
             RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"p", "=", "1"}], ",", 
              RowBox[{"p", "<", 
               RowBox[{
                SuperscriptBox["2", "n"], "+", "1"}]}], ",", 
              RowBox[{"p", "=", 
               RowBox[{"p", "+", "2"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"TrkM", "=", 
                RowBox[{"Append", "[", 
                 RowBox[{"TrkM", ",", 
                  RowBox[{
                   RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"M", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "All"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    SuperscriptBox["2", "n"], ",", "2"}], "}"}]}], "]"}], "+", 
                   RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"M", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"p", "+", "1"}], ",", "All"}], "]"}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    SuperscriptBox["2", "n"], ",", "2"}], "}"}]}], "]"}]}]}], 
                 "]"}]}], ";"}]}], "\[IndentingNewLine]", " ", "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"j", "=", "0"}], ",", 
              RowBox[{"j", "<", 
               RowBox[{"(", 
                RowBox[{"n", "-", "k"}], ")"}]}], ",", 
              RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"b", "=", 
                RowBox[{"{", "0", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"i", "=", "1"}], ",", 
                 RowBox[{"i", "<", 
                  RowBox[{
                   SuperscriptBox["2", "n"], "+", "1"}]}], ",", 
                 RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Mod", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "2", ",", "n"}], "]"}], "[", 
                    RowBox[{"[", "n", "]"}], "]"}], "+", 
                    RowBox[{
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "2", ",", "n"}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"n", "-", "j", "-", "1"}], "]"}], "]"}]}], ")"}], 
                    ",", "2"}], "]"}], ")"}], "==", "1"}], " ", "&&", " ", 
                    RowBox[{
                    RowBox[{"Count", "[", 
                    RowBox[{"b", ",", " ", "i"}], "]"}], "  ", "\[Equal]", 
                    "0"}]}], ",", " ", 
                   RowBox[{
                    RowBox[{"Permut", "=", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"SwapParts", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "2", ",", " ", "n"}], "]"}],
                     ")"}], ",", 
                    RowBox[{"{", "n", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", "-", "j", "-", "1"}], "}"}]}], "]"}], ",", 
                    "2"}], "]"}], "+", "1"}], ")"}]}], "}"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"b", "=", 
                    RowBox[{"Append", "[", 
                    RowBox[{"b", ",", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"SwapParts", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "2", ",", " ", "n"}], "]"}],
                     ")"}], ",", 
                    RowBox[{"{", "n", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", "-", "j", "-", "1"}], "}"}]}], "]"}], ",", 
                    "2"}], "]"}], "+", "1"}], ")"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"c", "=", 
                    RowBox[{"Range", "[", 
                    SuperscriptBox["2", "n"], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"perm", "=", 
                    RowBox[{"SwapParts", "[", 
                    RowBox[{"c", ",", 
                    RowBox[{"{", "i", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"FromDigits", "[", 
                    RowBox[{
                    RowBox[{"SwapParts", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"IntegerDigits", "[", 
                    RowBox[{
                    RowBox[{"i", "-", "1"}], ",", "2", ",", " ", "n"}], "]"}],
                     ")"}], ",", 
                    RowBox[{"{", "n", "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"n", "-", "j", "-", "1"}], "}"}]}], "]"}], ",", 
                    "2"}], "]"}], "+", "1"}], ")"}], "}"}]}], "]"}]}], ";", 
                    "\[IndentingNewLine]", "\[IndentingNewLine]", 
                    RowBox[{"M", "=", 
                    RowBox[{"M", "[", 
                    RowBox[{"[", 
                    RowBox[{"perm", ",", "perm"}], "]"}], "]"}]}], ";"}]}], 
                  "\[IndentingNewLine]", "\[IndentingNewLine]", " ", "]"}]}], 
                "    ", "\[IndentingNewLine]", "]"}], "         ", ";", 
               "\[IndentingNewLine]", 
               RowBox[{"TrkM", "=", 
                RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"For", "[", 
                RowBox[{
                 RowBox[{"p", "=", "1"}], ",", 
                 RowBox[{"p", "<", 
                  RowBox[{
                   SuperscriptBox["2", "n"], "+", "1"}]}], ",", 
                 RowBox[{"p", "=", 
                  RowBox[{"p", "+", "2"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"TrkM", "=", 
                   RowBox[{"Append", "[", 
                    RowBox[{"TrkM", ",", 
                    RowBox[{
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"M", "[", 
                    RowBox[{"[", 
                    RowBox[{"p", ",", "All"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", 
                    SuperscriptBox["2", "n"], ",", "2"}], "}"}]}], "]"}], "+", 
                    RowBox[{"Take", "[", 
                    RowBox[{
                    RowBox[{"M", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"p", "+", "1"}], ",", "All"}], "]"}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{"2", ",", 
                    SuperscriptBox["2", "n"], ",", "2"}], "}"}]}], "]"}]}]}], 
                    "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}]}]}], 
             "\[IndentingNewLine]", "   ", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", ";", 
      RowBox[{"Return", "[", "TrkM", "]"}]}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.852742489779724*^9, 3.852742504205625*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"219f573a-722c-472f-8fc0-6f22709c765e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Entanglement Entropy and Entropy Vector", "Subsubsection",
 CellChangeTimes->{{3.852742532976366*^9, 
  3.852742540045702*^9}},ExpressionUUID->"c20a638b-2258-4cfa-8ba2-\
46520fe93ecf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "compute", " ", "the", " ", "reduced", " ", 
    "density", " ", 
    RowBox[{"matrix", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReducedDensityMatrix", "[", 
     RowBox[{"DM_", ",", "Subsystem_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"totalDim", " ", "=", 
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{"First", "[", 
            RowBox[{"Dimensions", "[", "DM", "]"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"rangeDim", " ", "=", 
         RowBox[{"Range", "[", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"First", "[", 
             RowBox[{"Dimensions", "[", "DM", "]"}], "]"}]}], "]"}], "]"}]}], 
        ",", 
        RowBox[{"dimA", "=", 
         RowBox[{"Length", "[", "Subsystem", "]"}]}], ",", 
        RowBox[{"dimB", " ", "=", 
         RowBox[{"Length", "[", 
          RowBox[{"Complement", "[", "Subsystem", "]"}], "]"}]}], ",", 
        "order", ",", "dens", ",", "cons"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"order", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"rangeDim", "[", 
            RowBox[{"[", 
             RowBox[{"-", "Subsystem"}], "]"}], "]"}], ",", 
           RowBox[{"Delete", "[", 
            RowBox[{"rangeDim", ",", 
             RowBox[{"-", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", "Subsystem", "}"}], "]"}]}]}], "]"}]}], "]"}], 
         "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dens", " ", "=", " ", 
        RowBox[{
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{"totalDim", ",", "order"}], "]"}], ".", "DM", ".", 
         RowBox[{"ConjugateTranspose", "[", 
          RowBox[{"PermutedIdentity", "[", 
           RowBox[{"totalDim", ",", "order"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", "dimA"}], "]"}], ",", 
            RowBox[{"Transpose", "[", 
             RowBox[{"ReplacePart", "[", 
              RowBox[{"cons", ",", 
               RowBox[{"i", "\[Rule]", 
                RowBox[{"{", "1", "}"}]}]}], "]"}], "]"}]}], "]"}], ".", 
          "dens", " ", ".", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", "dimA"}], "]"}], ",", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{"cons", ",", 
              RowBox[{"i", "\[Rule]", 
               RowBox[{"{", "1", "}"}]}]}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"2", "^", "dimB"}]}], "}"}]}], "]"}]}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.863730868170001*^9, 3.863730992054579*^9}, {
   3.863733808451353*^9, 3.86373382005856*^9}, {3.8637339578660507`*^9, 
   3.863734014116914*^9}, {3.863734154867811*^9, 3.863734179109673*^9}, {
   3.863734245995263*^9, 3.863734248502337*^9}, {3.863734341367934*^9, 
   3.8637343993318253`*^9}, {3.863734623829727*^9, 3.8637346341200733`*^9}, {
   3.8637346766493263`*^9, 3.8637347002546577`*^9}, {3.863734804701089*^9, 
   3.863734813878354*^9}, 3.863778938623775*^9, {3.863779289189394*^9, 
   3.863779317248342*^9}, {3.863779363022911*^9, 3.863779474648135*^9}, {
   3.8637796918748217`*^9, 3.863779751741704*^9}, 3.8637798121984797`*^9, {
   3.863780061610756*^9, 3.863780073042728*^9}, 3.863780171604748*^9, {
   3.863780203632572*^9, 3.863780228981104*^9}, {3.8637802614643183`*^9, 
   3.86378028191593*^9}, {3.863781815870351*^9, 3.863781960801175*^9}, {
   3.884442397800466*^9, 3.8844424021556797`*^9}, {3.8846792983051023`*^9, 
   3.8846792991210747`*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"bed796c4-2379-43d2-b817-48054316e375"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "compute", " ", "the", " ", "von", " ", 
    "Neumann", " ", "entropy", " ", "of", " ", "a", " ", "chosen", " ", 
    "subsystem", " ", "of", " ", 
    RowBox[{"qubits", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"SvonNeumannBinary", "[", 
      RowBox[{"StateKet_", ",", "SubsystemList_"}], "]"}], ":=", " ", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"NonzeroEigenlist", ",", 
         RowBox[{"NormKet", " ", "=", " ", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"Normalize", "[", 
             RowBox[{"First", "[", 
              RowBox[{"Transpose", "[", "StateKet", "]"}], "]"}], "]"}], 
            "}"}], "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NonzeroEigenlist", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"Eigenvalues", "[", 
            RowBox[{"TraceSystem", "[", 
             RowBox[{
              RowBox[{"DensityMatrix", "[", "NormKet", "]"}], ",", 
              RowBox[{"Delete", "[", 
               RowBox[{
                RowBox[{"Reverse", "[", 
                 RowBox[{"Range", "[", 
                  RowBox[{"Log", "[", 
                   RowBox[{"2", ",", 
                    RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "]"}], 
                 "]"}], ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", "SubsystemList", "}"}], "]"}]}], "]"}]}], "]"}],
             "]"}], ",", "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"-", "1"}], "*", 
         RowBox[{"Total", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"NonzeroEigenlist", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "*", 
              RowBox[{"Log", "[", 
               RowBox[{"2", ",", 
                RowBox[{"NonzeroEigenlist", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", 
               RowBox[{"Length", "[", "NonzeroEigenlist", "]"}]}], "}"}]}], 
            "]"}], "]"}], "]"}]}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Function", " ", "to", " ", "build", " ", "the", " ", "reduced", " ", 
     "entropy", " ", "vector", " ", "for", " ", "a", " ", 
     RowBox[{"state", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ReducedEntropyVectorBuilder", "[", "StateKet_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"dims", " ", "=", " ", 
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}]}], ",", 
         "SubSystemList"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SubSystemList", " ", "=", " ", 
         RowBox[{"Drop", "[", 
          RowBox[{
           RowBox[{"Delete", "[", 
            RowBox[{
             RowBox[{"Subsets", "[", 
              RowBox[{"Range", "[", "dims", "]"}], "]"}], ",", "1"}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"2", "^", 
                  RowBox[{"(", "dims", ")"}]}], "-", "1"}], ")"}], "+", "1"}],
               ")"}]}], "/", "2"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"SvonNeumannBinary", "[", 
            RowBox[{"StateKet", ",", 
             RowBox[{"SubSystemList", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "SubSystemList", "]"}]}], "}"}]}], 
         "]"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.863695602336618*^9, 3.8636956296067533`*^9}, 
   3.863695691441319*^9, {3.863695761100542*^9, 3.863695795962825*^9}, {
   3.8636958626079473`*^9, 3.86369586648475*^9}, {3.863695912331128*^9, 
   3.863695917458836*^9}, {3.863696730055786*^9, 3.863696761057713*^9}, {
   3.8636968332549*^9, 3.863696860243699*^9}, {3.863697017702052*^9, 
   3.86369702377944*^9}, {3.8636970652756653`*^9, 3.863697086036869*^9}, {
   3.863697129247178*^9, 3.86369715276502*^9}, {3.8636978004509697`*^9, 
   3.863697801545147*^9}, {3.8636982642855253`*^9, 3.863698269847743*^9}, 
   3.863698324628746*^9, {3.863698471451243*^9, 3.863698471869135*^9}, {
   3.86369966658167*^9, 3.863699673372739*^9}, {3.863699718079768*^9, 
   3.863699731681374*^9}, {3.863699787158052*^9, 3.863699792977853*^9}, {
   3.863700160094696*^9, 3.8637001671340723`*^9}, {3.863700366788542*^9, 
   3.863700370511538*^9}, {3.863700772094969*^9, 3.8637007844105387`*^9}, {
   3.863701583728438*^9, 3.863701584337702*^9}, {3.863701695590283*^9, 
   3.863701715594021*^9}, {3.863701753464966*^9, 3.863701780943639*^9}, {
   3.863780368489052*^9, 3.863780370232551*^9}, 3.8637807779938726`*^9, {
   3.863781775914016*^9, 3.863781780482552*^9}, {3.864756465902392*^9, 
   3.864756487659081*^9}, {3.877101864218014*^9, 3.877101864485168*^9}, {
   3.884442382257269*^9, 3.8844423823876657`*^9}, {3.884680694713377*^9, 
   3.884680756195076*^9}, {3.8846827508336*^9, 3.884682757917399*^9}, {
   3.8916160321326323`*^9, 3.891616064128243*^9}, {3.894566193641983*^9, 
   3.8945661939251137`*^9}, {3.89456626141072*^9, 
   3.8945662619044123`*^9}},ExpressionUUID->"a1296da3-3411-4bc7-8652-\
e52575ef3be8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Function", " ", "to", " ", "build", " ", "the", " ", "reduced", " ", 
    "entropy", " ", "vector", " ", "for", " ", "a", " ", "set", " ", "of", 
    " ", 
    RowBox[{"states", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ReducedEntropyVectors", "[", "StateSet_", "]"}], ":=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"ReducedEntropyVectorBuilder", "[", 
       RowBox[{"StateSet", "[", 
        RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "StateSet", "]"}]}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{
  3.863639238257799*^9, {3.863695580431036*^9, 3.863695595437273*^9}, {
   3.863695657367331*^9, 3.8636957033787947`*^9}, {3.8637022196140623`*^9, 
   3.8637022489235497`*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"adf5e79d-bb00-430c-b87f-5b253529d78b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", "construct",
     " ", "the", " ", "entropy", " ", "vector", " ", "for", " ", "a", " ", 
    "system", " ", "using", " ", "the", " ", "above", " ", "vonNeumann", " ", 
    "entropy", " ", "function", " ", "applied", " ", "to", " ", "each", " ", 
    RowBox[{"subsystem", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
    "the", " ", "ket", " ", "representing", " ", "the", " ", "full", " ", 
    "state", " ", "and", " ", "the", " ", "function", " ", "returns", " ", 
    "the", " ", "entropy", " ", 
    RowBox[{"vector", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"EntropyVectorBuilder", "[", "StateKet_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"reducedEntropy", " ", "=", " ", 
       RowBox[{"ReducedEntropyVectorBuilder", "[", "StateKet", "]"}]}], "}"}],
      ",", 
     RowBox[{"Join", "[", 
      RowBox[{"reducedEntropy", ",", 
       RowBox[{"Reverse", "[", "reducedEntropy", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"{", "0", "}"}], "}"}]}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8526435054722023`*^9, 3.852643618165627*^9}, {
   3.852746973420331*^9, 3.852746977575897*^9}, 3.864820250353218*^9, {
   3.8649108098267727`*^9, 3.864910873903652*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"f62c511d-8274-4af6-af6f-af3deb31ee28"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"EntropyVectorBuilder", "[", "StateKet_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"dims", " ", "=", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"SubSystemList", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"Subsets", "[", 
           RowBox[{"Range", "[", "dims", "]"}], "]"}], ",", 
          RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"SvonNeumannBinary", "[", 
           RowBox[{"StateKet", ",", 
            RowBox[{"SubSystemList", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "SubSystemList", "]"}]}], "}"}]}], 
        "]"}]}]}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8648203214093924`*^9, 3.864820356668206*^9}, {
  3.864910903845211*^9, 3.864910946381145*^9}},
 CellLabel->"In[16]:=",ExpressionUUID->"6fc91238-43cd-4091-bb26-f86ab6f9d4c2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Below", " ", "is", " ", "a", " ", "function", " ", "that", " ", "inputs", 
    " ", "a", " ", "set", " ", "of", " ", "states", " ", "and", " ", 
    "returns", " ", "a", " ", "list", " ", "of", " ", "entropy", " ", 
    "vectors", " ", "corresponding", " ", "to", " ", "each", " ", "state", 
    " ", "in", " ", "the", " ", 
    RowBox[{"set", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"EntropyVectors", "[", "StateSet_", "]"}], ":=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"EntropyVectorBuilder", "[", 
       RowBox[{"StateSet", "[", 
        RowBox[{"[", "k", "]"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"Length", "[", "StateSet", "]"}]}], "}"}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.849653603990674*^9, 3.849653692301577*^9}, 
   3.849706641183325*^9, {3.8520664191597033`*^9, 3.8520664195748672`*^9}, 
   3.8527519799818487`*^9, {3.853341695187608*^9, 3.85334175672755*^9}, {
   3.853341845606327*^9, 3.8533418492212267`*^9}, {3.8649109571623573`*^9, 
   3.8649109807557983`*^9}},
 CellLabel->"In[17]:=",ExpressionUUID->"4f2b9ba8-574a-48c7-9a7b-a29857de3c65"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Given", " ", "the", " ", "present", " ", "symmetries", " ", "in", " ", 
     "the", " ", "entropy", " ", "vector", " ", "of", " ", "a", " ", "pure", 
     " ", "system"}], ",", " ", 
    RowBox[{
    "we", " ", "need", " ", "only", " ", "a", " ", "portion", " ", "of", " ", 
     "the", " ", "vector", " ", "components", " ", "to", " ", "completely", 
     " ", "characterize", " ", "the", " ", "entropy", " ", 
     RowBox[{"vector", ".", " ", "The"}], " ", "entropy", " ", "of", " ", "a",
      " ", "given", " ", "subregion", " ", "will", " ", "always", " ", 
     "equal", " ", "the", " ", "entropy", " ", "of", " ", "its", " ", 
     "complement", " ", 
     RowBox[{"subregion", ".", " ", "Additionally"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "entropy", " ", "of", " ", "the", " ", "full", " ", "state", 
      " ", "will", " ", "always", " ", "be", " ", 
      RowBox[{"zero", ".", " ", "The"}], " ", "function", " ", "below", " ", 
      "takes", " ", "a", " ", "set", " ", "of", " ", 
      RowBox[{"2", "^", 
       RowBox[{"(", "n", ")"}]}]}], "-", 
     RowBox[{
     "1", " ", "dimensional", " ", "entropy", " ", "vectors", " ", "and", " ",
       "projects", " ", "each", " ", "into", " ", "a", " ", "symmetrized", 
      " ", 
      RowBox[{"2", "^", 
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}]}]}], "-", 
     RowBox[{
     "1", " ", "representation", " ", "of", " ", "the", " ", "same", " ", 
      RowBox[{"vector", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", 
     RowBox[{"example", ":", " ", 
      RowBox[{"(", 
       RowBox[{"A", ",", "O", ",", "AO"}], ")"}]}]}], " ", "\[Rule]", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", "A", ")"}], "\[IndentingNewLine]", 
      RowBox[{"(", 
       RowBox[{
       "A", ",", "B", ",", "O", ",", "AB", ",", "AO", ",", "BO", ",", "ABO"}],
        ")"}]}], " ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"A", ",", "B", ",", "O"}], ")"}], "\[IndentingNewLine]", 
       RowBox[{"(", 
        RowBox[{
        "A", ",", "B", ",", "C", ",", "O", ",", "AB", ",", "AC", ",", "AO", 
         ",", "BC", ",", "BO", ",", "CO", ",", "ABC", ",", "ABO", ",", "ACO", 
         ",", "BCO", ",", "ABCO"}], ")"}]}], " ", "\[Rule]", " ", 
      RowBox[{"(", 
       RowBox[{
       "A", ",", "B", ",", "C", ",", "O", ",", "AB", ",", "AC", ",", "AO"}], 
       ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"ReducedEntropyVectorBuilder", "[", "StateKet_", "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"EntropyVec", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"SubsystemList", " ", "=", " ", 
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{
              RowBox[{"Subsets", "[", 
               RowBox[{"Range", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "]"}], 
               "]"}], ",", 
              RowBox[{"{", "}"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"2", "^", 
                   RowBox[{"(", 
                    RowBox[{"Log", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], 
                    ")"}]}], "-", "1"}], ")"}], "+", "1"}], ")"}]}], "/", 
             "2"}]}], "]"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", " ", 
           RowBox[{
            RowBox[{"Length", "[", "SubsystemList", "]"}], "+", "1"}]}], ",", 
          
          RowBox[{"i", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"EntropyVec", ",", 
            RowBox[{"{", 
             RowBox[{"SvonNeumannBinary", "[", 
              RowBox[{
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{"Normalize", "[", 
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Transpose", "[", "StateKet", "]"}], "]"}], "]"}], 
                 "}"}], "]"}], ",", 
               RowBox[{"SubsystemList", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "}"}]}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "EntropyVec"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ReducedEntropyVectors", "[", "StateSet_", "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"ReducedEntropyVectorList", " ", "=", " ", 
          RowBox[{"{", "}"}]}], ",", "k"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", " ", "1"}], ",", 
          RowBox[{"k", "<", " ", 
           RowBox[{
            RowBox[{"Length", "[", "StateSet", "]"}], "+", "1"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"ReducedEntropyVectorList", ",", 
            RowBox[{"ReducedEntropyVectorBuilder", "[", 
             RowBox[{"StateSet", "[", 
              RowBox[{"[", "k", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", "ReducedEntropyVectorList"}]}], "]"}]}], ";"}],
    "*)"}]}]], "Input",
 CellChangeTimes->{{3.849706652046677*^9, 3.8497066543648443`*^9}, {
   3.852066424649721*^9, 3.852066424935094*^9}, {3.852642260255334*^9, 
   3.8526422900264673`*^9}, {3.852642349369751*^9, 3.85264236690064*^9}, {
   3.852642517078179*^9, 3.852642523927373*^9}, {3.8526427438330917`*^9, 
   3.852642756722918*^9}, {3.852642872866181*^9, 3.8526428761910973`*^9}, {
   3.8527426162080803`*^9, 3.8527426165514317`*^9}, {3.852744488922407*^9, 
   3.8527445153356333`*^9}, {3.8527446152972727`*^9, 3.8527446442747*^9}, {
   3.8527446957230663`*^9, 3.8527447029711323`*^9}, {3.85274474294153*^9, 
   3.852744774515648*^9}, {3.852744808945444*^9, 3.852744822200248*^9}, {
   3.852744950344224*^9, 3.85274497312792*^9}, {3.85274501840973*^9, 
   3.852745065810652*^9}, {3.852745123169455*^9, 3.8527451232287207`*^9}, 
   3.852745159733148*^9, 3.852745489263112*^9, {3.852745683827985*^9, 
   3.852745730050295*^9}, {3.852745796011073*^9, 3.852745796359598*^9}, {
   3.852745845959743*^9, 3.8527458471418447`*^9}, {3.852745975874022*^9, 
   3.852745981330092*^9}, {3.852746028483025*^9, 3.852746106835783*^9}, {
   3.863623609709038*^9, 3.863623612358837*^9}},
 CellLabel->"In[18]:=",ExpressionUUID->"8e91bba0-cf65-4985-8afc-77cc2de65d2e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Entropy Measures and Inequalities", "Subsubsection",
 CellChangeTimes->{{3.8527470032629433`*^9, 3.852747015815836*^9}, {
  3.853335407273717*^9, 
  3.85333540976904*^9}},ExpressionUUID->"5116725d-5583-4ea3-aa21-\
1135a0a8c497"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Here", " ", "we", " ", "wish", " ", "to", " ", "build", " ", "functions", 
   " ", "that", " ", "evaluate", " ", "whether", " ", "an", " ", "entropy", 
   " ", "vector", " ", "satisfies", " ", "certain", " ", "entropy", " ", 
   RowBox[{"inequalities", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.852747018311717*^9, 3.852747069026309*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"47eeaa71-1f56-4ff9-bf4b-c282d9cc03a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Subadditivity", " ", 
    RowBox[{"states", ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"S", 
        RowBox[{"(", "A", ")"}]}], "+", 
       RowBox[{"S", 
        RowBox[{"(", "B", ")"}]}]}], "\[GreaterEqual]", " ", 
      RowBox[{"S", 
       RowBox[{"(", "AB", ")"}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SubadditivityChecker", "[", "EntropyVector_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Dim", " ", "=", " ", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{
            RowBox[{"Length", "[", "EntropyVector", "]"}], "-", "1"}]}], 
          "]"}], "+", "1"}]}], "}"}], ","}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.852747072083281*^9, 3.852747092856739*^9}, {
  3.852747229606264*^9, 3.8527472404053173`*^9}, {3.852747310672183*^9, 
  3.852747311793106*^9}, {3.852747375849862*^9, 3.8527474007135878`*^9}, {
  3.852747774451627*^9, 3.85274781180538*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"5ae25760-c2d0-4c44-910d-2904a539d480"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Strong", " ", "Subadditivity", " ", 
    RowBox[{"states", ":", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"S", 
        RowBox[{"(", "AB", ")"}]}], "+", 
       RowBox[{"S", 
        RowBox[{"(", "BC", ")"}]}]}], "\[GreaterEqual]", " ", 
      RowBox[{
       RowBox[{"S", 
        RowBox[{"(", "B", ")"}]}], "+", 
       RowBox[{"S", 
        RowBox[{"(", "ABC", ")"}]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"StrongSubadditivityChecker", "[", "EntropyVector_", "]"}], ":=", 
    
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"Dim", " ", "=", " ", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{
            RowBox[{"Length", "[", "EntropyVector", "]"}], "-", "1"}]}], 
          "]"}], "+", "1"}]}], "}"}], ","}], "]"}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.8527477554619913`*^9, 3.852747756085525*^9}, {
  3.8527478179657793`*^9, 3.852747821908547*^9}, {3.8527480046004467`*^9, 
  3.852748013105051*^9}},
 CellLabel->"In[21]:=",ExpressionUUID->"703af65b-1935-4710-8bb1-578389f12769"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"MMI", " ", 
      RowBox[{"states", ":", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"S", 
          RowBox[{"(", "AB", ")"}]}], "+", 
         RowBox[{"S", 
          RowBox[{"(", "AC", ")"}]}], "+", 
         RowBox[{"S", 
          RowBox[{"(", "BC", ")"}]}]}], "\[GreaterEqual]", " ", 
        RowBox[{
         RowBox[{"S", 
          RowBox[{"(", "A", ")"}]}], "+", 
         RowBox[{"S", 
          RowBox[{"(", "B", ")"}]}], "+", 
         RowBox[{"S", 
          RowBox[{"(", "C", ")"}]}], "+", 
         RowBox[{"S", 
          RowBox[{"(", "ABC", ")"}], "\[IndentingNewLine]", "More", " ", 
          "generally", " ", "stated"}]}]}], ":", " ", 
       RowBox[{"Let", " ", "I", 
        RowBox[{"(", 
         RowBox[{"A", ":", "B"}], ")"}]}]}]}], "=", 
     RowBox[{
      RowBox[{"S", 
       RowBox[{"(", "A", ")"}]}], "+", 
      RowBox[{"S", 
       RowBox[{"(", "B", ")"}]}], "-", 
      RowBox[{"S", 
       RowBox[{"(", "AB", ")"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{"then", " ", "I", 
      RowBox[{"(", 
       RowBox[{"A", ":", "BC"}], ")"}]}], "\[GreaterEqual]", " ", 
     RowBox[{
      RowBox[{"I", 
       RowBox[{"(", 
        RowBox[{"A", ":", "B"}], ")"}]}], "+", 
      RowBox[{"I", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", ":", "C"}], ")"}], "."}]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"MutualInformationFunction", "[", 
     RowBox[{"StateKet_", ",", "RegionA_", ",", "RegionB_"}], "]"}], ":=", 
    " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "MutualInformationMeasure", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"MutualInformationMeasure", " ", "=", " ", 
        RowBox[{
         RowBox[{"SvonNeumannBinary", "[", 
          RowBox[{"StateKet", ",", "RegionA"}], "]"}], " ", "+", " ", 
         RowBox[{"SvonNeumannBinary", "[", 
          RowBox[{"StateKet", ",", "RegionB"}], "]"}], " ", "-", " ", 
         RowBox[{"SvonNeumannBinary", "[", 
          RowBox[{"StateKet", ",", 
           RowBox[{"DeleteDuplicates", "[", 
            RowBox[{"Join", "[", 
             RowBox[{"RegionA", ",", "RegionB"}], "]"}], "]"}]}], "]"}]}]}], 
       ";", "\[IndentingNewLine]", "MutualInformationMeasure"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"MMICheckerEntropyInput", "[", "FullEntropyVector_", "]"}], ":=", 
    
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"EVecTranspose", " ", "=", " ", 
         RowBox[{"Flatten", "[", 
          RowBox[{"Transpose", "[", "FullEntropyVector", "]"}], "]"}]}], ",", 
        
        RowBox[{"EVecIndices", " ", "=", " ", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"Subsets", "[", 
            RowBox[{"Range", "[", 
             RowBox[{"Log", "[", 
              RowBox[{"2", ",", 
               RowBox[{
                RowBox[{"Length", "[", "FullEntropyVector", "]"}], "+", 
                "1"}]}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ",", 
        RowBox[{"PossibleTriples", " ", "=", " ", 
         RowBox[{"Subsets", "[", 
          RowBox[{
           RowBox[{"DeleteCases", "[", 
            RowBox[{
             RowBox[{"Subsets", "[", 
              RowBox[{
               RowBox[{"Range", "[", 
                RowBox[{"Log", "[", 
                 RowBox[{"2", ",", 
                  RowBox[{
                   RowBox[{"Length", "[", "FullEntropyVector", "]"}], "+", 
                   "1"}]}], "]"}], "]"}], ",", "3"}], "]"}], ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "3", "}"}]}], "]"}]}], ",", 
        RowBox[{"DisjointTriples", " ", "=", " ", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"evalutationTable", " ", "=", " ", 
         RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DisjointTriples", " ", "=", " ", 
        RowBox[{"DeleteCases", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"And", "[", 
               RowBox[{
                RowBox[{"DisjointQ", "[", 
                 RowBox[{
                  RowBox[{"PossibleTriples", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"PossibleTriples", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"DisjointQ", "[", 
                 RowBox[{
                  RowBox[{"PossibleTriples", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}], ",", 
                  RowBox[{"PossibleTriples", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"DisjointQ", "[", 
                 RowBox[{
                  RowBox[{"PossibleTriples", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"PossibleTriples", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "]"}]}], "]"}], 
              ",", 
              RowBox[{"PossibleTriples", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "Null"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "[", "PossibleTriples", "]"}]}], "}"}]}], 
           "]"}], ",", "Null"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"evalutationTable", " ", "=", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"EVecTranspose", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"EVecIndices", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
              RowBox[{"EVecTranspose", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"EVecIndices", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
              RowBox[{"EVecTranspose", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"EVecIndices", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], "==",
              " ", 
             RowBox[{
              RowBox[{"EVecTranspose", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"EVecIndices", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
                 "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
              " ", 
              RowBox[{"EVecTranspose", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"EVecIndices", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
                 "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], " ", 
              "+", " ", 
              RowBox[{"EVecTranspose", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"EVecIndices", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}], "]"}]}], "]"}], 
                 "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
              " ", 
              RowBox[{"EVecTranspose", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"EVecIndices", ",", 
                   RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                  "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}]}], 
            ",", "\"\<Saturates\>\"", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"EVecTranspose", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"EVecIndices", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
                
                RowBox[{"EVecTranspose", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"EVecIndices", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
                
                RowBox[{"EVecTranspose", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"EVecIndices", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], 
               ">", 
               RowBox[{
                RowBox[{"EVecTranspose", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"EVecIndices", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], "]"}]}], "]"}], 
                   "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
                " ", 
                RowBox[{"EVecTranspose", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"EVecIndices", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}], "]"}]}], "]"}], 
                   "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], " ", 
                "+", " ", 
                RowBox[{"EVecTranspose", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"EVecIndices", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}], "]"}]}], "]"}], 
                   "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}], "+", 
                " ", 
                RowBox[{"EVecTranspose", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"EVecIndices", ",", 
                    RowBox[{"Sort", "[", 
                    RowBox[{"Union", "[", 
                    RowBox[{
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "2"}], "]"}], "]"}], ",", 
                    RowBox[{"DisjointTriples", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "3"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                    "]"}], "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}]}], 
              ",", "\"\<Satisfies\>\"", ",", "\"\<Fails\>\""}], "]"}]}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "DisjointTriples", "]"}]}], "}"}]}], 
         "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       "evalutationTable"}]}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"evalutationTable", ",", "False"}], "]"}], ",", "False", ",",
         "True", ",", 
        RowBox[{"Print", "[", "\"\<Cannot interpret.\>\"", "]"}]}], "]"}], 
      "*)"}], "\n", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.865371171091201*^9, 3.865371175294805*^9}, {
   3.8879848267634974`*^9, 3.887984828448634*^9}, 3.888418089872683*^9, {
   3.88861229951243*^9, 3.888612311087084*^9}, 3.888612690895094*^9},
 CellLabel->"In[22]:=",ExpressionUUID->"dacbe514-984d-461f-bf2d-f5805c27ada7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Ingleton", " ", 
      RowBox[{"states", ":", " ", 
       RowBox[{"Let", " ", "S", 
        RowBox[{"(", 
         RowBox[{"X", "|", "Y"}], ")"}]}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{"S", 
       RowBox[{"(", "XY", ")"}]}], "-", 
      RowBox[{"S", 
       RowBox[{"(", "Y", ")"}]}]}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"then", " ", "I", 
       RowBox[{"(", 
        RowBox[{"A", ":", 
         RowBox[{"B", "|", "C"}]}], ")"}]}], "+", 
      RowBox[{"I", 
       RowBox[{"(", 
        RowBox[{"A", ":", 
         RowBox[{"B", "|", "D"}]}], ")"}]}], "+", 
      RowBox[{"I", 
       RowBox[{"(", 
        RowBox[{"C", ":", "D"}], ")"}]}]}], "\[GreaterEqual]", " ", 
     RowBox[{"I", 
      RowBox[{"(", 
       RowBox[{"A", ":", "B"}], ")"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"IngletonChecker", "[", "EntropyVector_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ","}], "]"}]}], ";"}]}]], "Input",
 CellLabel->"In[24]:=",ExpressionUUID->"9e62519b-1d42-4031-9016-796ca41e3b00"]
}, Closed]],

Cell[CellGroupData[{

Cell["Holographic Considerations", "Subsubsection",
 CellChangeTimes->{{3.852742532976366*^9, 
  3.852742571542726*^9}},ExpressionUUID->"83e1788f-7c2e-44d0-9ad5-\
5a078acd3335"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Below", " ", "we", " ", "define", " ", "a", " ", "function", " ", "to", 
     " ", "determine", " ", "whether", " ", "a", " ", 
     RowBox[{"state", "'"}], "s", " ", "entropy", " ", "vector", " ", 
     "satisfies", " ", "the", " ", "necessary", " ", "conditions", " ", "to", 
     " ", "be", " ", "a", " ", "holographic", " ", "state"}], ",", " ", 
    RowBox[{
    "and", " ", "thus", " ", "whether", " ", "it", " ", "lives", " ", 
     "within", " ", "the", " ", "holographic", " ", "entropy", " ", 
     RowBox[{"cone", ".", " ", "The"}], " ", "user", " ", "inputs", " ", "a", 
     " ", "ket", " ", "and", " ", "the", " ", "function", " ", "returns", " ",
      "a", " ", "boolean", " ", "True", " ", "or", " ", 
     RowBox[{"False", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"HolographicChecker", "[", "StateVector_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"SubsystemCount", " ", "=", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"Flatten", "[", "StateVector", "]"}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"EntropyVec", " ", "=", " ", 
        RowBox[{"Flatten", "[", 
         RowBox[{"EntropyVectorBuilder", "[", "StateVector", "]"}], "]"}]}], 
       ",", 
       RowBox[{"Result", "=", "False"}]}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{
        RowBox[{
        "There", " ", "are", " ", "no", " ", "entangled", " ", "single"}], 
        "-", 
        RowBox[{"party", " ", "states"}]}], ",", " ", 
       RowBox[{
        RowBox[{"and", " ", "all", " ", "systems", " ", "with", " ", "sub"}], 
        "-", 
        RowBox[{
        "party", " ", "number", " ", "below", " ", "3", " ", "are", " ", 
         RowBox[{"holographic", "."}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"SubsystemCount", "<", "3"}], ",", 
        RowBox[{"Result", "=", "True"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"Verify", " ", "the", " ", "3"}], "-", 
          RowBox[{"party", " ", "entropy", " ", "inequalities", " ", 
           RowBox[{"(", 
            RowBox[{"Strong", " ", "Subadditivity", " ", "and", " ", "MMI"}], 
            ")"}], " ", "are", " ", 
           RowBox[{"satisfied", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"SubsystemCount", " ", "\[Equal]", " ", "3"}], ",", 
          RowBox[{"Result", " ", "=", " ", 
           RowBox[{"And", "[", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "\[GreaterEqual]", " ", 
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "\[GreaterEqual]", " ", 
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "\[GreaterEqual]", " ", 
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}]}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "4", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "5", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "\[GreaterEqual]", " ", 
              RowBox[{
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "+", 
               RowBox[{"EntropyVec", "[", 
                RowBox[{"[", "7", "]"}], "]"}]}]}]}], "]"}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{"Verify", " ", "the", " ", "4"}], "-", 
            RowBox[{
            "party", " ", "entropy", " ", "inequalities", " ", "are", " ", 
             RowBox[{"satisfied", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"SubsystemCount", " ", "\[Equal]", " ", "4"}], ",", 
            RowBox[{"Result", " ", "=", "False"}], ",", 
            RowBox[{
            "Print", "[", "\"\<Subsystem count too high.\>\"", "]"}]}], 
           "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", "Result"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8453789325382767`*^9, 3.845379134204146*^9}, {
   3.845379819084353*^9, 3.845379947113031*^9}, {3.845380027000614*^9, 
   3.845380152144392*^9}, {3.845380418270706*^9, 3.845380449581726*^9}, {
   3.845380482693481*^9, 3.8453805391482286`*^9}, {3.845380573026452*^9, 
   3.845380679770152*^9}, {3.845380727807876*^9, 3.845380779350404*^9}, {
   3.84538120983154*^9, 3.845381253747766*^9}, {3.845381314787814*^9, 
   3.845381317850573*^9}, {3.849555596842778*^9, 3.8495557389516773`*^9}, {
   3.8495558770153503`*^9, 3.849555904581872*^9}, {3.849555989587583*^9, 
   3.84955609065397*^9}, {3.849556395641692*^9, 3.849556423981419*^9}, {
   3.8495567747752533`*^9, 3.849556822367662*^9}, {3.849557070200387*^9, 
   3.849557250809292*^9}, 3.8495572845769663`*^9, {3.849557347039591*^9, 
   3.8495573495170317`*^9}, {3.849564547270262*^9, 3.8495645552877617`*^9}, 
   3.849650004641695*^9, {3.849650103950756*^9, 3.849650133244854*^9}, {
   3.8496502618813753`*^9, 3.849650268016431*^9}, {3.849650549416233*^9, 
   3.849650557391564*^9}, 3.849650654508368*^9, {3.849650768729302*^9, 
   3.84965077288949*^9}, {3.849650879786903*^9, 3.849650880521339*^9}, {
   3.84965099803721*^9, 3.849651102270651*^9}, {3.849651407246997*^9, 
   3.8496514907300158`*^9}, {3.849652052425392*^9, 3.8496522506724577`*^9}},
 CellLabel->"In[25]:=",ExpressionUUID->"f3d48576-90a2-4f22-a1b5-20e117351d47"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Defining Quantum Logic Gates", "Subsection",
 CellChangeTimes->{{3.8365773594007463`*^9, 3.836577366216806*^9}, 
   3.837007424491289*^9, {3.84090991690047*^9, 
   3.840909936844249*^9}},ExpressionUUID->"c9c8a928-b451-486d-8da8-\
e9142c9e8925"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Here", " ", "we", " ", "define", " ", "functions", " ", "to", " ", 
   "reproduce", " ", "the", " ", "effects", " ", "of", " ", "various", " ", 
   "quantum", " ", "logic", " ", "gates", " ", "on", " ", "a", " ", "quantum",
    " ", "system", " ", "or", " ", 
   RowBox[{"subsystem", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.836577401723625*^9, 3.836577585329466*^9}, {
  3.836577640602995*^9, 3.836577664154222*^9}, {3.837007436299164*^9, 
  3.837007438209962*^9}},
 CellLabel->"In[26]:=",ExpressionUUID->"68e7732d-6b83-4be5-b0aa-c9c5a6ea4906"],

Cell[CellGroupData[{

Cell["For Internal Use", "Subsubsection",
 CellChangeTimes->{{3.873974043058031*^9, 
  3.873974046506274*^9}},ExpressionUUID->"0b6d7717-12d4-4529-9551-\
3560f8aa344b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", 
     "reproduce", " ", "the", " ", "Hadamard", " ", "gate", " ", "acting", 
     " ", "on", " ", "a", " ", "single", " ", "qubit", " ", "of", " ", "a", 
     " ", "multiqubit", " ", 
     RowBox[{"system", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
     "the", " ", "ket", " ", "representing", " ", "the", " ", "state", " ", 
     "of", " ", "the", " ", "system"}], ",", " ", 
    RowBox[{
    "along", " ", "with", " ", "the", " ", "index", " ", "of", " ", "the", 
     " ", "qubit", " ", "to", " ", "be", " ", "acted", " ", "on", " ", "with",
      " ", "the", " ", "Hadamard", " ", 
     RowBox[{"gate", ".", " ", "The"}], " ", "function", " ", "returns", " ", 
     "an", " ", "updated", " ", "ket", " ", "for", " ", "the", " ", "full", 
     " ", 
     RowBox[{"system", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"HadamardGate", "[", 
      RowBox[{"StateKet_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FinalState", ",", "PermIdentity", ",", 
         RowBox[{"BaseHMatrix", " ", "=", " ", 
          RowBox[{"HadamardMatrix", "[", "2", "]"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "]"}]}], ",", 
         "i"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", " ", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"BaseHMatrix", " ", "=", " ", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "BaseHMatrix"}], 
            "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
           RowBox[{"Swap", "[", 
            RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"FinalState", " ", "=", " ", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"BaseHMatrix", ".", 
            RowBox[{"(", 
             RowBox[{"PermIdentity", ".", "StateKet"}], ")"}]}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", "FinalState"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Here", " ", "is", " ", "the", " ", "same", " ", "Hadamard", " ", "gate", 
     " ", "without", " ", "the", " ", "normalization", " ", 
     RowBox[{"factor", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NonNormHadamardGate", "[", 
      RowBox[{"StateKet_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
          "AffectedQubit"}], "]"}], ".", "StateKet"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NormalizedHadamardGate", "[", 
      RowBox[{"StateKet_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{"Transpose", "[", 
        RowBox[{"{", 
         RowBox[{"Normalize", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{"Transpose", "[", 
            RowBox[{
             RowBox[{"NonNormHadamardAction", "[", 
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"2", ",", 
                 RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
               "AffectedQubit"}], "]"}], ".", "StateKet"}], "]"}], "]"}], 
          "]"}], "}"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NonNormHadamardAction", "[", 
      RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"PermIdentity", ",", 
         RowBox[{"BaseHMatrix", " ", "=", " ", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
            RowBox[{
             RowBox[{"Sqrt", "[", "2", "]"}], "*", 
             RowBox[{"HadamardMatrix", "[", "2", "]"}]}]}], "]"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{"Dimension", ",", 
           RowBox[{"Swap", "[", 
            RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
         "BaseHMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", "convert", 
     " ", "a", " ", "qubit", " ", "from", " ", "one", " ", "basis", " ", 
     "into", " ", "some", " ", "unequal", " ", "superposition", " ", "of", 
     " ", "a", " ", "different", " ", 
     RowBox[{"basis", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"UnequalHadamardGate", "[", 
      RowBox[{"StateKet_", ",", "AffectedQubit_", ",", "Probability1_"}], 
      "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FinalState", ",", "PermIdentity", ",", 
         RowBox[{"BaseHMatrix", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sqrt", "[", "Probability1", "]"}], ",", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", "Probability1"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", "Probability1"}], "]"}], ",", 
              RowBox[{"-", 
               RowBox[{"Sqrt", "[", "Probability1", "]"}]}]}], "}"}]}], 
           "}"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "]"}]}], ",", 
         "i"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", " ", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"BaseHMatrix", " ", "=", " ", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "BaseHMatrix"}], 
            "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
           RowBox[{"Swap", "[", 
            RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"FinalState", " ", "=", " ", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"BaseHMatrix", ".", 
            RowBox[{"(", 
             RowBox[{"PermIdentity", ".", "StateKet"}], ")"}]}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", "FinalState"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", 
      "represent", " ", "the", " ", "CNOT", " ", 
      RowBox[{"gate", ".", " ", "The"}], " ", "user", " ", "must", " ", 
      "input", " ", "the", " ", "state", " ", "ket", " ", "for", " ", "the", 
      " ", "system"}], ",", " ", 
     RowBox[{
     "the", " ", "index", " ", "of", " ", "the", " ", "control", " ", 
      "qubit"}], ",", " ", 
     RowBox[{
     "and", " ", "the", " ", "index", " ", "of", " ", "the", " ", "target", 
      " ", 
      RowBox[{"qubit", ".", " ", "Input"}], " ", "format", " ", "is", " ", 
      RowBox[{
       RowBox[{"CNOT", "[", 
        RowBox[{"StateKet", ",", "#control", ",", "#target"}], "]"}], ".", 
       " ", "The"}], " ", "function", " ", "will", " ", "return", " ", "the", 
      " ", "updated", " ", "state", " ", "ket", " ", "for", " ", "the", " ", 
      RowBox[{"system", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CNOTGate", "[", 
      RowBox[{
      "StateKet_", ",", "controlbitnumber_", ",", "targetbitnumber_"}], "]"}],
      ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FinalState", ",", "PermIdentity", ",", 
         RowBox[{"BaseCNOTMatrix", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "]"}]}], ",", 
         "i"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", " ", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"2", ",", 
              RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "-", "1"}]}],
           ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"BaseCNOTMatrix", " ", "=", " ", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
             "BaseCNOTMatrix"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"controlbitnumber", ",", "targetbitnumber"}], "}"}], 
             ",", 
             RowBox[{"Delete", "[", 
              RowBox[{"OriginalOrder", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "controlbitnumber", "}"}], ",", 
                 RowBox[{"{", "targetbitnumber", "}"}]}], "}"}]}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"FinalState", " ", "=", " ", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"BaseCNOTMatrix", ".", 
            RowBox[{"(", 
             RowBox[{"PermIdentity", ".", "StateKet"}], ")"}]}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", "FinalState"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Entered", " ", "[", 
     RowBox[{"ket", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "t"}], "}"}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CNOTAction", "[", 
      RowBox[{"Dimension_", ",", "CTpair_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FinalState", ",", "PermIdentity", ",", 
         RowBox[{"BaseCNOTMatrix", " ", "=", " ", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"Dimension", "-", "2"}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
           "]"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{"Dimension", ",", 
           RowBox[{"Join", "[", 
            RowBox[{"CTpair", ",", 
             RowBox[{"Delete", "[", 
              RowBox[{"OriginalOrder", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"CTpair", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"CTpair", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
         "BaseCNOTMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", 
      "reproduce", " ", "the", " ", "Phase", " ", 
      RowBox[{"gate", ".", " ", "The"}], " ", "user", " ", "must", " ", 
      "input", " ", "the", " ", "state", " ", "ket", " ", "for", " ", "the", 
      " ", "system"}], ",", " ", 
     RowBox[{
     "followed", " ", "by", " ", "the", " ", "index", " ", "of", " ", "the", 
      " ", "qubit", " ", "upon", " ", "which", " ", "the", " ", "Phase", " ", 
      "gate", " ", "will", " ", 
      RowBox[{"act", ".", " ", "The"}], " ", "function", " ", "will", " ", 
      "return", " ", "the", " ", "updated", " ", "ket", " ", "for", " ", 
      "the", " ", "full", " ", 
      RowBox[{"system", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PhaseGate", "[", 
      RowBox[{"StateKet_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"PhaseAction", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
          "AffectedQubit"}], "]"}], ".", "StateKet"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"PhaseAction", "[", 
      RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"PermIdentity", ",", 
         RowBox[{"BasePMatrix", " ", "=", " ", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "I"}], "}"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{"Dimension", ",", 
           RowBox[{"Swap", "[", 
            RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
         "BasePMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", 
      "reproduce", " ", "the", " ", "Controlled", " ", "Phase", " ", 
      RowBox[{"Gate", ".", " ", "The"}], " ", "user", " ", "must", " ", 
      "input", " ", "the", " ", "state", " ", "ket", " ", "for", " ", "the", 
      " ", "system"}], ",", " ", 
     RowBox[{
     "followed", " ", "by", " ", "the", " ", "indices", " ", "of", " ", "the",
       " ", "control", " ", "qubit", " ", "and", " ", "target", " ", 
      "qubit"}], ",", " ", 
     RowBox[{"in", " ", "that", " ", 
      RowBox[{"order", ".", " ", "The"}], " ", "function", " ", "will", " ", 
      "return", " ", "the", " ", "updated", " ", "ket", " ", "after", " ", 
      "this", " ", "applied", " ", 
      RowBox[{"operation", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ControlledPhaseGate", "[", 
      RowBox[{
      "StateKet_", ",", "controlbitnumber_", ",", "targetbitnumber_"}], "]"}],
      ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FinalState", ",", "PermIdentity", ",", 
         RowBox[{"BaseCNOTMatrix", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", "0", ",", 
              RowBox[{"-", "1"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
         ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "]"}]}], ",", 
         "i"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", " ", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"2", ",", 
              RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "-", "1"}]}],
           ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"BaseCNOTMatrix", " ", "=", " ", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", 
             "BaseCNOTMatrix"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"controlbitnumber", ",", "targetbitnumber"}], "}"}], 
             ",", 
             RowBox[{"Delete", "[", 
              RowBox[{"OriginalOrder", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "controlbitnumber", "}"}], ",", 
                 RowBox[{"{", "targetbitnumber", "}"}]}], "}"}]}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"FinalState", " ", "=", " ", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"BaseCNOTMatrix", ".", 
            RowBox[{"(", 
             RowBox[{"PermIdentity", ".", "StateKet"}], ")"}]}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", "FinalState"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"XGate", "[", 
      RowBox[{"StateKet_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", 
       RowBox[{
        RowBox[{"XAction", "[", 
         RowBox[{
          RowBox[{"Log", "[", 
           RowBox[{"2", ",", 
            RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
          "AffectedQubit"}], "]"}], ".", "StateKet"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"XAction", "[", 
      RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"PermIdentity", ",", 
         RowBox[{"BaseXMatrix", " ", "=", " ", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"0", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{"Dimension", ",", 
           RowBox[{"Swap", "[", 
            RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
         "BaseXMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CliffordGenerators", "[", "Dimension_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ntuples", " ", "=", " ", 
         RowBox[{"Tuples", "[", 
          RowBox[{
           RowBox[{"Range", "[", "Dimension", "]"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"NonNormHadamardAction", "[", 
            RowBox[{"Dimension", ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "Dimension"}], "}"}]}], "]"}], ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"PhaseAction", "[", 
            RowBox[{"Dimension", ",", "i"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "Dimension"}], "}"}]}], "]"}], ",", 
         RowBox[{"DeleteCases", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ntuples", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "1"}], "]"}], "]"}], "\[NotEqual]", " ", 
                RowBox[{"ntuples", "[", 
                 RowBox[{"[", 
                  RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
               RowBox[{"CNOTAction", "[", 
                RowBox[{"Dimension", ",", 
                 RowBox[{"ntuples", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", "Null"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", 
               RowBox[{"Length", "[", "ntuples", "]"}]}], "}"}]}], "]"}], ",",
            "Null"}], "]"}]}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"To", " ", "include", " ", "the", " ", "W"}], "-", 
     RowBox[{
     "state", " ", "we", " ", "need", " ", "to", " ", "include", " ", "the", 
      " ", "R_y", " ", "gate", " ", "that", " ", "makes", " ", 
      RowBox[{"1", "/", "n"}], " ", "rotations", " ", "and", " ", "the", " ", 
      "controlled"}], "-", 
     RowBox[{"H", " ", 
      RowBox[{"gate", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"YRotationGate", "[", 
     RowBox[{"StateKet_", ",", "Angle_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"YRotationAction", "[", 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", "Angle", 
         ",", "AffectedQubit"}], "]"}], ".", "StateKet"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"YRotationAction", "[", 
      RowBox[{"Dimension_", ",", "Angle_", ",", "AffectedQubit_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"PermIdentity", ",", 
         RowBox[{"BaseRYMatrix", " ", "=", " ", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Cos", "[", 
                 RowBox[{"Angle", "/", "2"}], "]"}], ",", 
                RowBox[{"-", 
                 RowBox[{"Sin", "[", 
                  RowBox[{"Angle", "/", "2"}], "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Sin", "[", 
                 RowBox[{"Angle", "/", "2"}], "]"}], ",", 
                RowBox[{"Cos", "[", 
                 RowBox[{"Angle", "/", "2"}], "]"}]}], "}"}]}], "}"}]}], 
           "]"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{"Dimension", ",", 
           RowBox[{"Swap", "[", 
            RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
         "BaseRYMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CHGate", "[", 
      RowBox[{
      "StateKet_", ",", "controlbitnumber_", ",", "targetbitnumber_"}], "]"}],
      ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FinalState", ",", "PermIdentity", ",", 
         RowBox[{"BaseCHMatrix", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0", ",", 
              RowBox[{"1", "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
              RowBox[{
               RowBox[{"-", "1"}], "/", 
               RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}], "}"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", 
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "]"}]}], ",", 
         "i"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", " ", 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"2", ",", 
              RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], "-", "1"}]}],
           ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"BaseCHMatrix", " ", "=", " ", 
           RowBox[{"KroneckerProduct", "[", 
            RowBox[{
             RowBox[{"IdentityMatrix", "[", "2", "]"}], ",", "BaseCHMatrix"}],
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StateKet", "]"}]}], "]"}], ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"controlbitnumber", ",", "targetbitnumber"}], "}"}], 
             ",", 
             RowBox[{"Delete", "[", 
              RowBox[{"OriginalOrder", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", "controlbitnumber", "}"}], ",", 
                 RowBox[{"{", "targetbitnumber", "}"}]}], "}"}]}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"FinalState", " ", "=", " ", 
         RowBox[{
          RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
          RowBox[{"(", 
           RowBox[{"BaseCHMatrix", ".", 
            RowBox[{"(", 
             RowBox[{"PermIdentity", ".", "StateKet"}], ")"}]}], ")"}]}]}], 
        ";", "\[IndentingNewLine]", "FinalState"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Entered", " ", "[", 
     RowBox[{"ket", ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", "t"}], "}"}]}], "]"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CHAction", "[", 
      RowBox[{"Dimension_", ",", "CTpair_"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"FinalState", ",", "PermIdentity", ",", 
         RowBox[{"BaseCHMatrix", " ", "=", " ", 
          RowBox[{"KroneckerProduct", "[", 
           RowBox[{
            RowBox[{"IdentityMatrix", "[", 
             RowBox[{"2", "^", 
              RowBox[{"(", 
               RowBox[{"Dimension", "-", "2"}], ")"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", 
                RowBox[{"1", "/", 
                 RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
                RowBox[{"1", "/", 
                 RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"0", ",", "0", ",", 
                RowBox[{"1", "/", 
                 RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"-", "1"}], "/", 
                 RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}], "}"}]}], 
           "]"}]}], ",", 
         RowBox[{"OriginalOrder", " ", "=", " ", 
          RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PermIdentity", " ", "=", " ", 
         RowBox[{"PermutedIdentity", "[", 
          RowBox[{"Dimension", ",", 
           RowBox[{"Join", "[", 
            RowBox[{"CTpair", ",", 
             RowBox[{"Delete", "[", 
              RowBox[{"OriginalOrder", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"CTpair", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"CTpair", "[", 
                   RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], "]"}]}], 
            "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
         "BaseCHMatrix", ".", "PermIdentity"}]}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8368556007750063`*^9, 3.836855604038567*^9}, {
   3.836855637596718*^9, 3.836855640266471*^9}, {3.836855672497386*^9, 
   3.836855678024763*^9}, 3.836855723578974*^9, {3.836855810989896*^9, 
   3.836855937352375*^9}, {3.8368559744523*^9, 3.836855978317399*^9}, {
   3.836856016859568*^9, 3.8368560208428383`*^9}, {3.836856066985655*^9, 
   3.836856143228635*^9}, {3.8368562082487926`*^9, 3.83685624371378*^9}, {
   3.836856276573423*^9, 3.836856389968111*^9}, 3.83685643438945*^9, 
   3.836856466667617*^9, 3.8368565769101963`*^9, {3.83685664367869*^9, 
   3.836856688976967*^9}, {3.8368568713985777`*^9, 3.836856956213159*^9}, {
   3.836906908150749*^9, 3.836906912137974*^9}, {3.83690694310284*^9, 
   3.8369069671227827`*^9}, {3.836907510988616*^9, 3.836907651950782*^9}, {
   3.836907934475581*^9, 3.8369079721550627`*^9}, {3.836908009016083*^9, 
   3.836908036439728*^9}, {3.83690806975143*^9, 3.836908087629818*^9}, {
   3.8369081178290663`*^9, 3.8369081838598003`*^9}, {3.8369083671549273`*^9, 
   3.836908443841651*^9}, {3.8369221532646513`*^9, 3.836922215739152*^9}, {
   3.83692225618604*^9, 3.8369222676495323`*^9}, {3.836922523037978*^9, 
   3.836922562217286*^9}, {3.836923232268333*^9, 3.836923232706786*^9}, {
   3.83692406556034*^9, 3.8369240662979937`*^9}, {3.836924314354101*^9, 
   3.83692431446509*^9}, {3.83692438449726*^9, 3.836924400982316*^9}, {
   3.8369244580934772`*^9, 3.836924458293541*^9}, {3.8369279874857187`*^9, 
   3.8369280247138243`*^9}, {3.836928063424407*^9, 3.836928087922324*^9}, {
   3.836928281767413*^9, 3.836928287883752*^9}, {3.83692833070299*^9, 
   3.8369283717894077`*^9}, {3.836935552049436*^9, 3.836935587351182*^9}, {
   3.8369356202777443`*^9, 3.836935620340989*^9}, {3.8369357862928333`*^9, 
   3.836935812306796*^9}, {3.836935854347085*^9, 3.8369358780438347`*^9}, {
   3.8369964095831614`*^9, 3.836996426949332*^9}, 3.837000380996961*^9, {
   3.8370004412808847`*^9, 3.83700045339213*^9}, {3.837000625621763*^9, 
   3.837000923864524*^9}, {3.837001615735677*^9, 3.837001636591887*^9}, 
   3.837001721698757*^9, {3.837001779528878*^9, 3.837001782792285*^9}, {
   3.837001993145053*^9, 3.837002021477458*^9}, {3.837007451589135*^9, 
   3.8370075589984407`*^9}, {3.837012174950364*^9, 3.837012175564041*^9}, {
   3.8376124621242723`*^9, 3.8376125362569647`*^9}, {3.8376132159824867`*^9, 
   3.837613270211388*^9}, {3.8376133112735167`*^9, 3.837613332248705*^9}, {
   3.8377014237561083`*^9, 3.837701535987297*^9}, {3.837701582861361*^9, 
   3.837701588795567*^9}, {3.8383986656658583`*^9, 3.838398673683434*^9}, {
   3.838398712276218*^9, 3.838398714918727*^9}, {3.840653331756526*^9, 
   3.840653426784883*^9}, {3.840653527869487*^9, 3.8406535682142353`*^9}, {
   3.8438271546507473`*^9, 3.843827214931491*^9}, {3.8520664545070667`*^9, 
   3.852066475413621*^9}, {3.852677340486166*^9, 3.852677429617187*^9}, {
   3.852677502216426*^9, 3.8526775505248737`*^9}, {3.85267779895301*^9, 
   3.852677815049595*^9}, {3.85267786262711*^9, 3.852677873267828*^9}, {
   3.852677905930895*^9, 3.852677954124874*^9}, {3.852678137755142*^9, 
   3.852678164508154*^9}, {3.8526783142572403`*^9, 3.852678369240872*^9}, {
   3.852678415814478*^9, 3.8526785403465643`*^9}, {3.8526797406652727`*^9, 
   3.852679740847899*^9}, 3.852680634039227*^9, 3.8526806744429693`*^9, {
   3.852681235958312*^9, 3.8526813710086193`*^9}, 3.8526820150018883`*^9, {
   3.8526821914620237`*^9, 3.852682262663453*^9}, {3.852682460092585*^9, 
   3.852682471424676*^9}, {3.8526839125512447`*^9, 3.852683937401722*^9}, {
   3.852684139344441*^9, 3.852684140200158*^9}, {3.85268422924277*^9, 
   3.852684245723343*^9}, {3.852684290988894*^9, 3.85268432451721*^9}, {
   3.852684370366148*^9, 3.852684412348621*^9}, {3.852684713914081*^9, 
   3.852684717194498*^9}, {3.85268476247919*^9, 3.852684820736352*^9}, {
   3.852730699062859*^9, 3.8527310052560043`*^9}, {3.852731115560498*^9, 
   3.852731116662457*^9}, {3.852731209014982*^9, 3.852731293229767*^9}, {
   3.852735330169525*^9, 3.8527353314470577`*^9}, {3.852750958100666*^9, 
   3.8527510759977703`*^9}, {3.852751137235055*^9, 3.8527511420747643`*^9}, {
   3.852751250883951*^9, 3.852751262215809*^9}, {3.852751524702017*^9, 
   3.852751525611061*^9}, {3.85275157605282*^9, 3.852751578072966*^9}, {
   3.8527516347670317`*^9, 3.852751639142414*^9}, {3.8527516837912283`*^9, 
   3.852751705059668*^9}, {3.8527517455087023`*^9, 3.852751749873395*^9}, {
   3.8527517928185263`*^9, 3.852751799103924*^9}, {3.8527518678900433`*^9, 
   3.852751893053096*^9}, {3.852751948427637*^9, 3.852751951728929*^9}, {
   3.85275201030509*^9, 3.8527520249831142`*^9}, {3.852752086743135*^9, 
   3.85275211449522*^9}, {3.852752148802657*^9, 3.8527522067597847`*^9}, {
   3.861791577113126*^9, 3.8617915774553757`*^9}, {3.864757508469451*^9, 
   3.864757508730937*^9}, {3.8656159653819838`*^9, 3.865615965845756*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"f975f4aa-2348-46a9-826b-93aa2a6afd84"]
}, Closed]],

Cell[CellGroupData[{

Cell["For User", "Subsubsection",
 CellChangeTimes->{{3.873974057109579*^9, 
  3.873974062298856*^9}},ExpressionUUID->"93f7e047-08b8-48de-882b-\
ccc6542ae214"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HadamardGate", "[", 
     RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "PermIdentity", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Swap", "[", 
           RowBox[{
            RowBox[{"Range", "[", "Dimension", "]"}], ",", "1", ",", 
            "AffectedQubit"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"2", "^", 
            RowBox[{"(", 
             RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
          RowBox[{"HadamardMatrix", "[", "2", "]"}]}], "]"}], ".", 
        "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"PhaseGate", "[", 
     RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "PermIdentity", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Swap", "[", 
           RowBox[{
            RowBox[{"Range", "[", "Dimension", "]"}], ",", "1", ",", 
            "AffectedQubit"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"2", "^", 
            RowBox[{"(", 
             RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "I"}], "}"}]}], "}"}]}], "]"}], ".", 
        "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TGate", "[", 
     RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "PermIdentity", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Swap", "[", 
           RowBox[{
            RowBox[{"Range", "[", "Dimension", "]"}], ",", "1", ",", 
            "AffectedQubit"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        RowBox[{"KroneckerProduct", "[", 
         RowBox[{
          RowBox[{"IdentityMatrix", "[", 
           RowBox[{"2", "^", 
            RowBox[{"(", 
             RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"1", ",", "0"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", 
              RowBox[{"Exp", "[", 
               RowBox[{"I", "*", 
                RowBox[{"Pi", "/", "4"}]}], "]"}]}], "}"}]}], "}"}]}], "]"}], 
        ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CNOTGate", "[", 
     RowBox[{"Dimension_", ",", "CTpair_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"FinalState", ",", "PermIdentity", ",", 
        RowBox[{"BaseCNOTMatrix", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"Dimension", "-", "2"}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], "}"}]}], 
          "]"}]}], ",", 
        RowBox[{"OriginalOrder", " ", "=", " ", 
         RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"CTpair", ",", 
            RowBox[{"Delete", "[", 
             RowBox[{"OriginalOrder", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CTpair", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"CTpair", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        "BaseCNOTMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"XGate", "[", 
     RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PermIdentity", ",", 
        RowBox[{"BaseXMatrix", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"OriginalOrder", " ", "=", " ", 
         RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Swap", "[", 
           RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        "BaseXMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"YGate", "[", 
     RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PermIdentity", ",", 
        RowBox[{"BaseYMatrix", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "I"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"OriginalOrder", " ", "=", " ", 
         RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Swap", "[", 
           RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        "BaseYMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ZGate", "[", 
     RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PermIdentity", ",", 
        RowBox[{"BaseZMatrix", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"OriginalOrder", " ", "=", " ", 
         RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Swap", "[", 
           RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        "BaseZMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"IdentityGate", "[", 
     RowBox[{"Dimension_", ",", "AffectedQubit_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PermIdentity", ",", 
        RowBox[{"BaseIMatrix", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"Dimension", "-", "1"}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"OriginalOrder", " ", "=", " ", 
         RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Swap", "[", 
           RowBox[{"OriginalOrder", ",", "1", ",", "AffectedQubit"}], "]"}]}],
          "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        "BaseIMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CHGate", "[", 
     RowBox[{"Dimension_", ",", "CTpair_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"FinalState", ",", "PermIdentity", ",", 
        RowBox[{"BaseCHMatrix", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"Dimension", "-", "2"}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"1", "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
               RowBox[{"1", "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", 
               RowBox[{"1", "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}], ",", 
               RowBox[{
                RowBox[{"-", "1"}], "/", 
                RowBox[{"Sqrt", "[", "2", "]"}]}]}], "}"}]}], "}"}]}], 
          "]"}]}], ",", 
        RowBox[{"OriginalOrder", " ", "=", " ", 
         RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"CTpair", ",", 
            RowBox[{"Delete", "[", 
             RowBox[{"OriginalOrder", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CTpair", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"CTpair", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        "BaseCHMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CZGate", "[", 
     RowBox[{"Dimension_", ",", "CTpair_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"FinalState", ",", "PermIdentity", ",", 
        RowBox[{"BaseCHMatrix", " ", "=", " ", 
         RowBox[{"KroneckerProduct", "[", 
          RowBox[{
           RowBox[{"IdentityMatrix", "[", 
            RowBox[{"2", "^", 
             RowBox[{"(", 
              RowBox[{"Dimension", "-", "2"}], ")"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0", ",", 
               RowBox[{"-", "1"}]}], "}"}]}], "}"}]}], "]"}]}], ",", 
        RowBox[{"OriginalOrder", " ", "=", " ", 
         RowBox[{"Range", "[", "Dimension", "]"}]}], ",", "i"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PermIdentity", " ", "=", " ", 
        RowBox[{"PermutedIdentity", "[", 
         RowBox[{"Dimension", ",", 
          RowBox[{"Join", "[", 
           RowBox[{"CTpair", ",", 
            RowBox[{"Delete", "[", 
             RowBox[{"OriginalOrder", ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CTpair", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"CTpair", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "}"}]}], "}"}]}], "]"}]}], 
           "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ConjugateTranspose", "[", "PermIdentity", "]"}], ".", 
        "BaseCHMatrix", ".", "PermIdentity"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CliffordGenerators", "[", "Dimension_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ntuples", " ", "=", " ", 
       RowBox[{"Tuples", "[", 
        RowBox[{
         RowBox[{"Range", "[", "Dimension", "]"}], ",", 
         RowBox[{"{", "2", "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"HadamardGate", "[", 
          RowBox[{"Dimension", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "Dimension"}], "}"}]}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"PhaseGate", "[", 
          RowBox[{"Dimension", ",", "i"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "Dimension"}], "}"}]}], "]"}], ",", 
       RowBox[{"DeleteCases", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ntuples", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "1"}], "]"}], "]"}], "\[NotEqual]", " ", 
              RowBox[{"ntuples", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}]}], ",", 
             RowBox[{"CNOTGate", "[", 
              RowBox[{"Dimension", ",", 
               RowBox[{"ntuples", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", "Null"}], "]"}],
            ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "ntuples", "]"}]}], "}"}]}], "]"}], ",", 
         "Null"}], "]"}]}], "]"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.865707805887158*^9, 3.865707914629424*^9}, {
   3.865707981978683*^9, 3.865708084985075*^9}, {3.865708132621488*^9, 
   3.8657081936237593`*^9}, {3.865708246253718*^9, 3.865708246899191*^9}, {
   3.8657118691047688`*^9, 3.8657118913410797`*^9}, {3.8663144477045183`*^9, 
   3.8663144480866203`*^9}, {3.866314711008946*^9, 3.866314719995122*^9}, {
   3.866315632385234*^9, 3.86631568014398*^9}, {3.866315712037294*^9, 
   3.8663157897890167`*^9}, {3.866494158929329*^9, 3.866494164422443*^9}, {
   3.866494198835919*^9, 3.866494227935769*^9}, {3.866494293036643*^9, 
   3.866494349977324*^9}, {3.866558116908827*^9, 3.866558131090369*^9}, 
   3.867098627746148*^9, {3.884180806390931*^9, 3.8841808668055353`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"7073d8f3-0950-4dd3-b206-55c92f701c10"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Defining Quantum Circuits", "Subsection",
 CellChangeTimes->{{3.837015647322668*^9, 
  3.83701565402667*^9}},ExpressionUUID->"ee5dbfa3-21b3-4aad-9478-\
c18470c07cbd"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Here", " ", "we", " ", "wish", " ", "to", " ", "define", " ", "a", " ", 
   "set", " ", "of", " ", "functions", " ", "that", " ", "ma", " ", "be", " ",
    "used", " ", "to", " ", "evaluate", " ", "entire", " ", "quantum", " ", 
   RowBox[{"circuits", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.837015657644679*^9, 3.837015686570138*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"8b1e009b-b681-4dc3-a92f-4712150e6da0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "function", " ", "below", " ", "models", " ", "a", " ", 
     "complete", " ", "stabilizer", " ", 
     RowBox[{"circuit", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
     "the", " ", "ket", " ", "representing", " ", "the", " ", "initial", " ", 
     "state", " ", "of", " ", "the", " ", "system"}], ",", " ", 
    RowBox[{
    "followed", " ", "by", " ", "a", " ", "list", " ", "of", " ", 
     "operations", " ", "to", " ", "be", " ", "performed"}], ",", " ", 
    RowBox[{
    "followed", " ", "by", " ", "the", " ", "corresponding", " ", "list", " ",
      "of", " ", "qubits", " ", "upon", " ", "which", " ", "each", " ", 
     "gate", " ", "will", " ", 
     RowBox[{"act", ".", " ", "The"}], " ", "function", " ", "will", " ", 
     "output", " ", "the", " ", "entropy", " ", "vector", " ", "for", " ", 
     "the", " ", "system", " ", "after", " ", "each", " ", "operation"}], ",",
     " ", 
    RowBox[{
    "and", " ", "return", " ", "the", " ", "final", " ", "updated", " ", 
     "system", " ", "ket", " ", "at", " ", "the", " ", 
     RowBox[{"end", ".", " ", "A"}], " ", "sample", " ", "input", " ", "to", 
     " ", "this", " ", "function", " ", "would", " ", "be", " ", 
     RowBox[{
      RowBox[{"StabilizerCircuit", "[", 
       RowBox[{"\[Phi]", ",", 
        RowBox[{"{", 
         RowBox[{"HadamardGate", ",", "HadamardGate", ",", "CNOTGate"}], 
         "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", "1", "}"}], ",", 
          RowBox[{"{", "2", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "3"}], "}"}]}], "}"}]}], "]"}], "."}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"StabilizerCircuit", "[", 
      RowBox[{"StateKet_", ",", "OperationsList_", ",", "QubitList_"}], "]"}],
      ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"UpdatedKet", " ", "=", " ", "StateKet"}], ",", "i", ",", 
         "t"}], "}"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"t", "=", "1"}], ",", 
          RowBox[{"t", "<", 
           RowBox[{
            RowBox[{"Length", "[", "OperationsList", "]"}], "+", "1"}]}], ",", 
          RowBox[{"t", "++"}], ",", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"OperationsList", "[", 
               RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", " ", "CNOTGate"}], 
             ",", 
             RowBox[{"UpdatedKet", " ", "=", " ", 
              RowBox[{
               RowBox[{"OperationsList", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "[", 
               RowBox[{"UpdatedKet", ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"UpdatedKet", " ", "=", 
              RowBox[{
               RowBox[{"OperationsList", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "[", 
               RowBox[{"UpdatedKet", ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"UpdatedKet", " ", "=", 
              RowBox[{
               RowBox[{"OperationsList", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "[", 
               RowBox[{"UpdatedKet", ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"Print", "[", 
            RowBox[{
            "\"\<At time t= \>\"", ",", "t", ",", 
             "\"\< the system is in the state \>\"", ",", 
             RowBox[{"UpdatedKet", "//", "MatrixForm"}], ",", " ", 
             "\"\< with entropy vector \>\"", ",", 
             RowBox[{
              RowBox[{"EntropyVectorBuilder", "[", "UpdatedKet", "]"}], "//", 
              "MatrixForm"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        "UpdatedKet"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Below", " ", "is", " ", "a", " ", "function", " ", "that", " ", 
      "computes", " ", "a", " ", "full", " ", "stabilizer", " ", "circuit"}], 
     ",", " ", 
     RowBox[{
     "returning", " ", "only", " ", "the", " ", "updated", " ", "state", " ", 
      "vector", " ", "at", " ", "the", " ", 
      RowBox[{"end", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StabilizerCircuitOnlyVector", "[", 
      RowBox[{"StateKet_", ",", "OperationsList_", ",", "QubitList_"}], "]"}],
      ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"UpdatedKet", " ", "=", " ", "StateKet"}], ",", "i", ",", 
         "t"}], "}"}], ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"t", "=", "1"}], ",", 
          RowBox[{"t", "<", 
           RowBox[{
            RowBox[{"Length", "[", "OperationsList", "]"}], "+", "1"}]}], ",", 
          RowBox[{"t", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"OperationsList", "[", 
              RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", " ", "CNOTGate"}], 
            ",", 
            RowBox[{"UpdatedKet", " ", "=", " ", 
             RowBox[{
              RowBox[{"OperationsList", "[", 
               RowBox[{"[", "t", "]"}], "]"}], "[", 
              RowBox[{"UpdatedKet", ",", 
               RowBox[{"QubitList", "[", 
                RowBox[{"[", 
                 RowBox[{"t", ",", "1"}], "]"}], "]"}], ",", 
               RowBox[{"QubitList", "[", 
                RowBox[{"[", 
                 RowBox[{"t", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"UpdatedKet", " ", "=", 
             RowBox[{
              RowBox[{"OperationsList", "[", 
               RowBox[{"[", "t", "]"}], "]"}], "[", 
              RowBox[{"UpdatedKet", ",", 
               RowBox[{"QubitList", "[", 
                RowBox[{"[", 
                 RowBox[{"t", ",", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
            RowBox[{"UpdatedKet", " ", "=", 
             RowBox[{
              RowBox[{"OperationsList", "[", 
               RowBox[{"[", "t", "]"}], "]"}], "[", 
              RowBox[{"UpdatedKet", ",", 
               RowBox[{"QubitList", "[", 
                RowBox[{"[", 
                 RowBox[{"t", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"UpdatedKet", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"FirstPosition", "[", 
                 RowBox[{
                  RowBox[{"Flatten", "[", 
                   RowBox[{"Transpose", "[", "UpdatedKet", "]"}], "]"}], ",", 
                  
                  RowBox[{"_", "?", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"##", "\[NotEqual]", " ", "0"}], "&"}], ")"}]}]}],
                  "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}]}], ")"}], "*", "UpdatedKet"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "The", " ", "following", " ", "is", " ", "used", " ", "when", " ", 
      "defining", " ", "graph", " ", "paths", " ", "through", " ", "a", " ", 
      "sequence", " ", "of", " ", "operations", " ", "on", " ", "a", " ", 
      "particular", " ", "stabilizer", " ", 
      RowBox[{"state", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
      "the", " ", "ket", " ", "for", " ", "the", " ", "initial", " ", 
      "state"}], ",", " ", 
     RowBox[{
     "the", " ", "ordered", " ", "list", " ", "of", " ", "operations"}], ",", 
     " ", 
     RowBox[{
     "the", " ", "associated", " ", "list", " ", "of", " ", "respective", " ",
       "qubits", " ", "to", " ", "be", " ", "operated", " ", "upon"}], ",", 
     " ", 
     RowBox[{
     "and", " ", "the", " ", "overall", " ", "stabilizer", " ", "state", " ", 
      "set", " ", "to", " ", "which", " ", "the", " ", "states", " ", 
      RowBox[{"belong", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"StabilizerCircuitIndices", "[", 
      RowBox[{
      "StateKet_", ",", "OperationsList_", ",", "QubitList_", ",", 
       "StabilizerStateSet_"}], "]"}], ":=", " ", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"UpdatedKet", " ", "=", " ", "StateKet"}], ",", 
         RowBox[{"IndexSet", " ", "=", " ", 
          RowBox[{"{", 
           RowBox[{"Position", "[", 
            RowBox[{"StabilizerStateSet", ",", "StateKet"}], "]"}], "}"}]}], 
         ",", "i", ",", "t"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"t", "=", "1"}], ",", 
          RowBox[{"t", "<", 
           RowBox[{
            RowBox[{"Length", "[", "OperationsList", "]"}], "+", "1"}]}], ",", 
          RowBox[{"t", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"OperationsList", "[", 
               RowBox[{"[", "t", "]"}], "]"}], "\[Equal]", " ", "CNOTGate"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"UpdatedKet", " ", "=", " ", 
              RowBox[{
               RowBox[{"OperationsList", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "[", 
               RowBox[{"UpdatedKet", ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "2"}], "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"UpdatedKet", " ", "=", 
              RowBox[{
               RowBox[{"OperationsList", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "[", 
               RowBox[{"UpdatedKet", ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
             RowBox[{"UpdatedKet", " ", "=", 
              RowBox[{
               RowBox[{"OperationsList", "[", 
                RowBox[{"[", "t", "]"}], "]"}], "[", 
               RowBox[{"UpdatedKet", ",", 
                RowBox[{"QubitList", "[", 
                 RowBox[{"[", 
                  RowBox[{"t", ",", "1"}], "]"}], "]"}]}], "]"}]}]}], "]"}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"IndexSet", ",", 
             RowBox[{"Position", "[", 
              RowBox[{"StabilizerStateSet", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"UpdatedKet", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"FirstPosition", "[", 
                    RowBox[{
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Transpose", "[", "UpdatedKet", "]"}], "]"}], ",", 
                    RowBox[{"_", "?", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"##", "\[NotEqual]", " ", "0"}], "&"}], ")"}]}]}],
                     "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ")"}], "^", 
                  RowBox[{"(", 
                   RowBox[{"-", "1"}], ")"}]}], ")"}], "*", "UpdatedKet"}]}], 
              "]"}]}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "[", "IndexSet", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", "produce",
       " ", "the", " ", "set", " ", "of", " ", "generators", " ", "for", " ", 
      "a", " ", "given", " ", "stabilizer", " ", 
      RowBox[{"state", ".", " ", "At"}], " ", "this", " ", "point"}], ",", 
     " ", 
     RowBox[{
     "the", " ", "user", " ", "must", " ", "input", " ", "the", " ", "inital",
       " ", "state", " ", "ket", " ", "and", " ", "the", " ", "stabilizer", 
      " ", "circuit", " ", "used", " ", "to", " ", "build", " ", "the", " ", 
      "chosen", " ", "state", " ", "from", " ", "the", " ", "initial", " ", 
      RowBox[{"state", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"GeneratorSetVacuum", "[", 
      RowBox[{"Dimensions_", ",", "OperationsList_", ",", "QubitList_"}], " ",
       "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"InitialTable", "=", 
          RowBox[{"{", "}"}]}], ",", 
         RowBox[{"StabilizerSet", "=", 
          RowBox[{"{", "}"}]}], ",", "i", " ", ",", "j", ",", "k"}], "}"}], 
       ",", 
       RowBox[{
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"i", "=", "1"}], ",", 
          RowBox[{"i", "<", 
           RowBox[{"(", 
            RowBox[{"Dimensions", "+", "1"}], ")"}]}], ",", 
          RowBox[{"i", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"InitialTable", ",", 
            RowBox[{"ReplacePart", "[", 
             RowBox[{
              RowBox[{"ConstantArray", "[", 
               RowBox[{"0", ",", 
                RowBox[{"2", "*", "Dimensions"}]}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"Dimensions", "+", "i"}], ")"}], "\[Rule]", " ", 
               "1"}]}], "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Length", "[", "OperationsList", "]"}], "+", "1"}], 
            ")"}]}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"TrueQ", "[", 
             RowBox[{
              RowBox[{"OperationsList", "[", 
               RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", " ", 
              "HadamardGate"}], "]"}], ",", 
            RowBox[{
             RowBox[{"InitialTable", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"QubitList", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
                  RowBox[{"Dimensions", "+", 
                   RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "}"}]}], "]"}],
               "]"}], " ", "=", " ", 
             RowBox[{"InitialTable", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Dimensions", "+", 
                   RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], ",", 
                  RowBox[{"QubitList", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"TrueQ", "[", 
               RowBox[{
                RowBox[{"OperationsList", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", " ", 
                "CNOTGate"}], "]"}], ",", 
              RowBox[{
               RowBox[{
                RowBox[{"InitialTable", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}], 
                "=", 
                RowBox[{"BitXor", "[", 
                 RowBox[{
                  RowBox[{"InitialTable", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
                  ",", 
                  RowBox[{"InitialTable", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}], "]"}], "]"}]}], 
                 "]"}]}], ";", 
               RowBox[{
                RowBox[{"InitialTable", "[", 
                 RowBox[{"[", 
                  RowBox[{"All", ",", 
                   RowBox[{"Dimensions", " ", "+", " ", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "]"}], "]"}], 
                "=", 
                RowBox[{"BitXor", "[", 
                 RowBox[{
                  RowBox[{"InitialTable", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"Dimensions", "+", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "2"}], "]"}], "]"}]}]}], "]"}], "]"}], 
                  ",", 
                  RowBox[{"InitialTable", "[", 
                   RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"Dimensions", " ", "+", " ", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "]"}], "]"}]}],
                  "]"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"TrueQ", "[", 
                 RowBox[{
                  RowBox[{"OperationsList", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], "\[Equal]", " ", 
                  "PhaseGate"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"InitialTable", "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"Dimensions", " ", "+", " ", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "]"}], "]"}], 
                 "=", 
                 RowBox[{"BitXor", "[", 
                  RowBox[{
                   RowBox[{"InitialTable", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], 
                   ",", 
                   RowBox[{"InitialTable", "[", 
                    RowBox[{"[", 
                    RowBox[{"All", ",", 
                    RowBox[{"Dimensions", "+", 
                    RowBox[{"QubitList", "[", 
                    RowBox[{"[", 
                    RowBox[{"j", ",", "1"}], "]"}], "]"}]}]}], "]"}], "]"}]}],
                   "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"InitialTable", "//", "MatrixForm"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "<", 
           RowBox[{"(", 
            RowBox[{"Dimensions", "+", "1"}], ")"}]}], ",", 
          RowBox[{"k", "++"}], ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"StabilizerSet", ",", 
            RowBox[{
             RowBox[{"Replace", "[", 
              RowBox[{
               RowBox[{"Replace", "[", 
                RowBox[{
                 RowBox[{"InitialTable", "[", 
                  RowBox[{"[", "k", "]"}], "]"}], ",", 
                 RowBox[{"1", "\[Rule]", 
                  RowBox[{"PauliMatrix", "[", "3", "]"}]}], ",", 
                 RowBox[{"{", "1", "}"}]}], " ", "]"}], ",", 
               RowBox[{"0", "\[Rule]", " ", 
                RowBox[{"IdentityMatrix", "[", "2", "]"}]}], ",", 
               RowBox[{"{", "1", "}"}]}], "]"}], "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"Dimensions", "+", "1"}], ";;", 
               RowBox[{"2", "*", "Dimensions"}]}], "]"}], "]"}]}], "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Generating set is \>\"", ",", " ", "StabilizerSet"}], 
         "]"}]}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.837015694950078*^9, 3.8370157171641483`*^9}, {
   3.837081340692699*^9, 3.837081349416164*^9}, {3.837094540592187*^9, 
   3.8370947032868423`*^9}, {3.837206156517168*^9, 3.837206195149502*^9}, {
   3.837206281985178*^9, 3.837206365967517*^9}, {3.8382173813418503`*^9, 
   3.838217414866246*^9}, {3.838217475584692*^9, 3.838217514695294*^9}, {
   3.838217619621985*^9, 3.838217644971793*^9}, {3.839697422875168*^9, 
   3.8396974798719893`*^9}, {3.839697511239415*^9, 3.839697584519679*^9}, {
   3.8396976172048597`*^9, 3.839697648244453*^9}, {3.839697716700276*^9, 
   3.839697754915258*^9}, {3.839697843262685*^9, 3.839697995416848*^9}, {
   3.83969804387624*^9, 3.839698178921474*^9}, {3.83969828063527*^9, 
   3.8396983043685007`*^9}, {3.8396985418090363`*^9, 3.839698631894793*^9}, {
   3.8396988355618153`*^9, 3.8396988489272337`*^9}, {3.839698880599308*^9, 
   3.839698895543457*^9}, {3.83969900038507*^9, 3.83969913923875*^9}, {
   3.839699247225891*^9, 3.839699250168807*^9}, {3.839699286820879*^9, 
   3.839699334812583*^9}, {3.839699371594181*^9, 3.839699469934936*^9}, {
   3.839699603266324*^9, 3.8396996486082907`*^9}, {3.8397008615108967`*^9, 
   3.839700867875972*^9}, {3.8397009375148363`*^9, 3.83970099869053*^9}, {
   3.839701109132127*^9, 3.839701149910263*^9}, {3.839701188083845*^9, 
   3.8397012083047667`*^9}, {3.839701299049271*^9, 3.839701301947022*^9}, {
   3.839701348224699*^9, 3.839701365214818*^9}, {3.839701397792583*^9, 
   3.839701506654305*^9}, {3.83970155070683*^9, 3.839701560343014*^9}, {
   3.839701610474093*^9, 3.839701619049183*^9}, {3.839701749010804*^9, 
   3.8397018462510977`*^9}, {3.8397021205386133`*^9, 3.839702139254096*^9}, {
   3.839702383448745*^9, 3.839702406766268*^9}, {3.839702576861236*^9, 
   3.839702598746509*^9}, {3.839702722993219*^9, 3.8397027361138067`*^9}, {
   3.8397027945316753`*^9, 3.839702818085328*^9}, {3.8397034400153027`*^9, 
   3.8397034995932903`*^9}, {3.839703655396887*^9, 3.839703731129233*^9}, {
   3.839703830792473*^9, 3.839703832320163*^9}, {3.839703965544796*^9, 
   3.839703990166539*^9}, {3.839704020257992*^9, 3.8397040243888597`*^9}, {
   3.839704524223015*^9, 3.8397045266182613`*^9}, {3.840039360486703*^9, 
   3.840039373841178*^9}, {3.840039465405958*^9, 3.840039465917787*^9}, {
   3.840039503428982*^9, 3.840039517099821*^9}, {3.840039580375629*^9, 
   3.8400395978870707`*^9}, {3.840039628676772*^9, 3.840039644500936*^9}, {
   3.84876859293114*^9, 3.848768676108337*^9}, {3.8487687453932333`*^9, 
   3.848768757189859*^9}, {3.848768792253182*^9, 3.848768811264567*^9}, {
   3.84876887123744*^9, 3.848768988298134*^9}, {3.848769076158525*^9, 
   3.848769078190503*^9}, {3.849006389514152*^9, 3.849006393971216*^9}, 
   3.849006570552373*^9, {3.849006674878725*^9, 3.8490067387536497`*^9}, {
   3.8490068359231043`*^9, 3.849006839944385*^9}, 3.851596949239867*^9, {
   3.852066494855693*^9, 3.85206659946564*^9}, 3.852066634549852*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"fd3fceb4-9692-43a9-96da-3f9d19befd4f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Stabilizer State Functions", "Subsection",
 CellChangeTimes->{{3.8441517065977297`*^9, 
  3.844151716976153*^9}},ExpressionUUID->"cf8d8194-1802-4017-950d-\
ac7730fd1d16"],

Cell["\<\
We construct a function to generate all stabilizer states for a given qubit \
number. The user inputs the number of qubits and the function procedurally \
generates the set of all stabilizer states for that qubit number, beginning \
from the n-qubit vacuum state.\
\>", "Text",
 CellChangeTimes->{{3.844257234362997*^9, 3.8442572501858387`*^9}, {
  3.844266457990253*^9, 
  3.844266469532647*^9}},ExpressionUUID->"2f595d52-435d-449b-8745-\
e14aee3de32b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StabilizerStateSetGenerator", "[", "Dimension_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PredictedCount", " ", "=", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"2", "^", "Dimension"}], ")"}], "*", 
         RowBox[{"Product", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"2", "^", "num"}], ")"}], "+", "1"}], ",", 
           RowBox[{"{", 
            RowBox[{"num", ",", "1", ",", "Dimension"}], "}"}]}], "]"}]}], 
        ")"}]}], ",", 
      RowBox[{"UpdatedStabilizerStateSet", "=", 
       RowBox[{"{", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"2", "^", "Dimension"}]}], "]"}], ",", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"{", "1", "}"}]}]}], "]"}], "}"}]}], ",", 
      RowBox[{"CheckSet", "=", 
       RowBox[{"{", 
        RowBox[{"ReplacePart", "[", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"2", "^", "Dimension"}]}], "]"}], ",", 
          RowBox[{"1", "\[Rule]", 
           RowBox[{"{", "1", "}"}]}]}], "]"}], "}"}]}], ",", 
      RowBox[{"TotalGateSet", "=", 
       RowBox[{"CliffordGenerators", "[", "Dimension", "]"}]}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "UpdatedStabilizerStateSet", "]"}], "<", 
        "PredictedCount"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"CheckSet", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"NormKet", "[", 
               RowBox[{
                RowBox[{"TotalGateSet", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ".", 
                RowBox[{"CheckSet", "[", 
                 RowBox[{"[", "l", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", 
                RowBox[{"Length", "[", "TotalGateSet", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"Length", "[", "CheckSet", "]"}]}], "}"}]}], "]"}], 
            ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"UpdatedStabilizerStateSet", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"UpdatedStabilizerStateSet", ",", "CheckSet"}], "]"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"Length", "[", "UpdatedStabilizerStateSet", "]"}], "]"}], 
        ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     "UpdatedStabilizerStateSet"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.852675903253175*^9, 3.852675904269024*^9}, 
   3.852676015708194*^9, {3.8526760495477467`*^9, 3.852676055586865*^9}, {
   3.852676509386644*^9, 3.852676525177348*^9}, {3.852678697366338*^9, 
   3.852678878489979*^9}, {3.8526789202049093`*^9, 3.852678943131885*^9}, {
   3.8526789935929937`*^9, 3.8526789963588953`*^9}, {3.852679072679628*^9, 
   3.852679082302435*^9}, {3.85268259242155*^9, 3.85268262191418*^9}, 
   3.8526826580644836`*^9, {3.852682731446413*^9, 3.852682731670782*^9}, {
   3.852682854179947*^9, 3.8526828545641317`*^9}, 3.852682919079064*^9, {
   3.8527305818240423`*^9, 3.852730606447227*^9}, {3.852730639144816*^9, 
   3.85273063920391*^9}, {3.852731415368594*^9, 3.852731511836787*^9}, {
   3.8527316620768347`*^9, 3.8527316629213047`*^9}, {3.852731696098686*^9, 
   3.852731715957815*^9}, {3.8527317725486927`*^9, 3.852732002836213*^9}, {
   3.852732038262412*^9, 3.852732124290041*^9}, {3.852732195136451*^9, 
   3.852732201330926*^9}, {3.8527322597346287`*^9, 3.852732377186222*^9}, {
   3.852732490436018*^9, 3.852732510789175*^9}, 3.852732552445167*^9, {
   3.8527325840795517`*^9, 3.852732690744825*^9}, {3.852735025700356*^9, 
   3.852735030036756*^9}, {3.852735077654958*^9, 3.852735215628656*^9}, {
   3.85273528308677*^9, 3.852735291909563*^9}, 3.852736408895121*^9, {
   3.852751100182358*^9, 3.852751105883348*^9}, 3.8647575542471533`*^9},
 CellLabel->"In[60]:=",ExpressionUUID->"90642a79-4e87-4244-a5d8-09a6e102bcd2"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.893166649697792*^9, 3.893166655012789*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"37a348ba-7490-4a25-ac1d-ee973437a731"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SelectiveStabilizerGenerator", "[", 
   RowBox[{"IntialState_", ",", "GateSet_", ",", "DesiredNumberOfStates_"}], 
   "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"UpdatedStabilizerStateSet", "=", 
       RowBox[{"{", "IntialState", "}"}]}], ",", 
      RowBox[{"CheckSet", "=", 
       RowBox[{"{", "IntialState", "}"}]}], ",", 
      RowBox[{"StatesChecked", "=", 
       RowBox[{"{", "}"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"And", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"SubsetQ", "[", 
           RowBox[{"StatesChecked", ",", "CheckSet"}], "]"}], "\[Equal]", " ",
           "False"}], ",", 
         RowBox[{
          RowBox[{"Length", "[", "UpdatedStabilizerStateSet", "]"}], "<", 
          "DesiredNumberOfStates"}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"StatesChecked", " ", "=", " ", "UpdatedStabilizerStateSet"}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"CheckSet", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"NormKet", "[", 
               RowBox[{
                RowBox[{"GateSet", "[", 
                 RowBox[{"[", "k", "]"}], "]"}], ".", 
                RowBox[{"CheckSet", "[", 
                 RowBox[{"[", "l", "]"}], "]"}]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", 
                RowBox[{"Length", "[", "GateSet", "]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"l", ",", 
                RowBox[{"Length", "[", "CheckSet", "]"}]}], "}"}]}], "]"}], 
            ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"UpdatedStabilizerStateSet", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"UpdatedStabilizerStateSet", ",", "CheckSet"}], "]"}], 
          "]"}]}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"DeleteDuplicates", "[", "UpdatedStabilizerStateSet", "]"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.852404094716481*^9, 3.852404155014607*^9}, {
   3.85240421990949*^9, 3.852404229046465*^9}, {3.852404318642419*^9, 
   3.85240440633146*^9}, {3.85240445746876*^9, 3.8524044602826567`*^9}, 
   3.852404523634872*^9, {3.852404562499792*^9, 3.852404579622208*^9}, {
   3.852405400981073*^9, 3.8524054278901567`*^9}, {3.8524055079299393`*^9, 
   3.8524056060250683`*^9}, {3.852405705544306*^9, 3.85240572933842*^9}, {
   3.8524057763423023`*^9, 3.852405796715122*^9}, {3.8524059384533663`*^9, 
   3.8524059542187033`*^9}, {3.852406081522608*^9, 3.852406084994279*^9}, {
   3.8524062876904716`*^9, 3.852406309372747*^9}, {3.852465317339244*^9, 
   3.852465319188196*^9}, {3.852465460971466*^9, 3.852465481088271*^9}, {
   3.852502313688486*^9, 3.852502319514289*^9}, {3.852502356212319*^9, 
   3.852502400904372*^9}, 3.852502830288467*^9, {3.85268376437589*^9, 
   3.8526837764762573`*^9}, 3.852683824688168*^9, {3.852684675604577*^9, 
   3.852684677492894*^9}, {3.8526848502907677`*^9, 3.852684852220015*^9}, 
   3.852684949164453*^9, 3.8526849901071672`*^9, {3.852724686272818*^9, 
   3.852724687538376*^9}, {3.8527364699833193`*^9, 3.852736481826644*^9}, {
   3.8527365200969467`*^9, 3.8527365710739737`*^9}, {3.852751114804492*^9, 
   3.852751120810253*^9}, 3.8647575342643557`*^9, {3.8648460026466618`*^9, 
   3.864846009124086*^9}},
 CellLabel->"In[62]:=",ExpressionUUID->"988f79c1-48e0-4a92-b67c-38dd98501289"],

Cell["\<\
The function below compiles all stabilizer states, as with the one above, but \
tracks (up to one gate operation) how the state was reached. In essence, this \
function stores information about all states, how each can be reached from \
its (2n + Permutation[n,2]) neighboring states, as well as the entropy vector \
of the state. The output is organized as follows (Final State, Gate Applied, \
Qubit Acted Upon, Initial State, Entropy Vector of Final State). The user \
inputs the set of stabilizer states to be considered. The output is an array \
of (2n + Permutation[n,2])(2^n Prod[(2^k + 1),{k,1,n}]) elements.\
\>", "Text",
 CellChangeTimes->{{3.84425732012197*^9, 3.844257608184806*^9}, {
  3.844789960337738*^9, 
  3.844790025344788*^9}},ExpressionUUID->"9c4dd12a-d2af-4357-8ad7-\
230c8dc229e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Input", " ", "desired", " ", "gates", " ", "as", " ", 
    RowBox[{"strings", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SelectiveStateWithGateGenerator", "[", 
    RowBox[{"StateSet_", ",", "DesiredGates_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dimension", " ", "=", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"StateSet", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
       RowBox[{"possibleGates", " ", "=", " ", 
        RowBox[{"CliffordGenerators", "[", 
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{"Length", "[", 
            RowBox[{"StateSet", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], "]"}]}], ",", 
       RowBox[{"selectedGates", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"StatesWithGates", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{"Length", "[", "DesiredGates", "]"}], "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"DesiredGates", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", " ", 
            "\"\<H\>\""}], ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"selectedGates", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"DesiredGates", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"NonNormHadamardAction", "[", 
                RowBox[{"dimension", ",", 
                 RowBox[{"DesiredGates", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}]}], "]"}]}],
               "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"DesiredGates", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", " ", 
              "\"\<P\>\""}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"selectedGates", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"DesiredGates", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{"PhaseAction", "[", 
                  RowBox[{"dimension", ",", 
                   RowBox[{"DesiredGates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2", ",", "1"}], "]"}], "]"}]}], 
                  "]"}]}], "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"DesiredGates", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "1"}], "]"}], "]"}], "\[Equal]", " ", 
                "\"\<CNOT\>\""}], ",", 
               RowBox[{"AppendTo", "[", 
                RowBox[{"selectedGates", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"DesiredGates", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                   RowBox[{"CNOTAction", "[", 
                    RowBox[{"dimension", ",", 
                    RowBox[{"DesiredGates", "[", 
                    RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "}"}]}],
                 "]"}], ",", 
               RowBox[{
               "Print", "[", "\"\<Non-Clifford Gate Encountered.\>\"", 
                "]"}]}], "]"}]}], "]"}]}], "]"}], ";"}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", "\"\<Gates Compiled.\>\"", "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NormKet", "[", 
             RowBox[{
              RowBox[{"selectedGates", "[", 
               RowBox[{"[", 
                RowBox[{"j", ",", "2"}], "]"}], "]"}], ".", 
              RowBox[{"StateSet", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"selectedGates", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"StateSet", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"ReducedEntropyVectorBuilder", "[", 
             RowBox[{"NormKet", "[", 
              RowBox[{
               RowBox[{"selectedGates", "[", 
                RowBox[{"[", 
                 RowBox[{"j", ",", "2"}], "]"}], "]"}], ".", 
               RowBox[{"StateSet", "[", 
                RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "]"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "StateSet", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "selectedGates", "]"}]}], "}"}]}], "]"}], 
        ",", "1"}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8528416134975033`*^9, 3.85284162455971*^9}, {
   3.852841719528935*^9, 3.852841844695644*^9}, {3.852841875036193*^9, 
   3.8528419935688066`*^9}, {3.8528422260568132`*^9, 3.852842312005352*^9}, {
   3.8528423823883343`*^9, 3.852842560589463*^9}, {3.8528426416927557`*^9, 
   3.852842806419031*^9}, {3.852843103496311*^9, 3.852843171585684*^9}, {
   3.852843279980579*^9, 3.85284328014354*^9}, {3.852843379881404*^9, 
   3.852843400184483*^9}, {3.852843518238942*^9, 3.8528435237449293`*^9}, {
   3.852843558954995*^9, 3.852843644919259*^9}, {3.852843822163074*^9, 
   3.852843971920753*^9}, 3.85284408606529*^9, {3.8528443314545593`*^9, 
   3.8528443873191547`*^9}, {3.852844424626224*^9, 3.85284442487883*^9}, {
   3.852844485814268*^9, 3.852844503545706*^9}, {3.852844553219713*^9, 
   3.852844558851139*^9}, {3.852844657865839*^9, 3.852844686207609*^9}, {
   3.85284473196535*^9, 3.8528448719388447`*^9}, {3.852844931456636*^9, 
   3.852844988614326*^9}, {3.8528450496714373`*^9, 3.852845079203018*^9}, 
   3.852853440535018*^9, {3.852853475284827*^9, 3.852853475601863*^9}, {
   3.852905491907061*^9, 3.852905511966569*^9}, {3.852905564095175*^9, 
   3.852905570454667*^9}, {3.8529070124553547`*^9, 3.8529070331008472`*^9}, {
   3.852916820642177*^9, 3.852916822811973*^9}, {3.8529203006220284`*^9, 
   3.852920325618038*^9}, {3.852920551923007*^9, 3.852920555222682*^9}, {
   3.852920667036042*^9, 3.852920667228348*^9}, {3.8529207487862873`*^9, 
   3.8529207870394917`*^9}, {3.852920825343174*^9, 3.8529208947967157`*^9}, {
   3.852921007268338*^9, 3.852921014969204*^9}, 3.865371141463098*^9},
 CellLabel->"In[63]:=",ExpressionUUID->"822b6aeb-a7cb-4fb1-9eb4-c0b02fb126b1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Defining Visualization Functions", "Subsection",
 CellChangeTimes->{{3.837098616232469*^9, 
  3.837098624345223*^9}},ExpressionUUID->"7598da83-f7df-4c41-8d90-\
5fb0b9ca796b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimpleReachabilityGraphBuilder", "[", 
   RowBox[{
   "SetofStates_", ",", "SetOfStatesWithGates_", ",", "GatesToBeDisplayed_"}],
    "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"PossibleEntropyVectorList", ",", 
      RowBox[{"OperationsConsidered", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "TestValue", ",", 
      RowBox[{"EdgeSet", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"VertexStyleSet", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"EntropyColorChoices", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "Blue", ",", "Orange", ",", "Purple", ",", "Yellow", ",", 
         "Black", ",", "Cyan", ",", "Pink", ",", "Brown", ",", "LightGreen", 
         ",", "White", ",", "LightRed", ",", "LightBlue", ",", "LightYellow", 
         ",", "LightMagenta", ",", "LightOrange", ",", "LightGray", ",", 
         "LightCyan", ",", "LightBrown"}], "}"}]}], ",", "i", ",", "j", ",", 
      RowBox[{"k", "=", "0"}], ",", "m", ",", "G"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{
         RowBox[{"Length", "[", "GatesToBeDisplayed", "]"}], "+", "1"}]}], 
       ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"OperationsConsidered", " ", "=", " ", 
        RowBox[{"Join", "[", 
         RowBox[{"OperationsConsidered", ",", 
          RowBox[{"Position", "[", 
           RowBox[{"SetOfStatesWithGates", ",", 
            RowBox[{"GatesToBeDisplayed", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "]"}]}]}], "]"}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SetofStates", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", "4"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"m", "=", "1"}], ",", 
          RowBox[{"m", "<", " ", 
           RowBox[{
            RowBox[{"Length", "[", "SetofStates", "]"}], "+", "1"}]}], ",", 
          RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"VertexLabelSet", ",", 
            RowBox[{"m", "\[Rule]", " ", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"Toggler", "[", 
                RowBox[{
                 RowBox[{"Invisible", "[", "m", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"SetOfStabilizerStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Background", "\[Rule]", " ", "LightYellow"}], 
                    ",", 
                    RowBox[{"CellFrameColor", "\[Rule]", " ", "LightBlue"}], 
                    ",", 
                    RowBox[{"CellFrame", "\[Rule]", " ", "1"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"ReducedEntropyVectorBuilder", "[", 
                    RowBox[{"SetOfStabilizerStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Background", "\[Rule]", " ", "LightBlue"}], ",", 
                    
                    RowBox[{"CellFrameColor", "\[Rule]", " ", "LightBlue"}], 
                    ",", 
                    RowBox[{"CellFrame", "\[Rule]", " ", "1"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"Invisible", "[", "m", "]"}]}], "}"}]}], "]"}], 
               ",", "Center"}], "]"}]}]}], "]"}]}], "]"}], "*)"}], "Null", 
       ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PossibleEntropyVectorList", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"ReducedEntropyVectors", "[", "SetofStates", "]"}], "]"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"m", "=", "1"}], ",", 
          RowBox[{"m", "<", " ", 
           RowBox[{
            RowBox[{"Length", "[", "SetofStates", "]"}], "+", "1"}]}], ",", 
          RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"VertexStyleSet", " ", ",", 
            RowBox[{
             RowBox[{"{", "m", "}"}], "\[Rule]", 
             RowBox[{
              RowBox[{"EntropyColorChoices", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"PossibleEntropyVectorList", ",", 
                   RowBox[{"ReducedEntropyVectorBuilder", "[", 
                    RowBox[{"SetofStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}], "]"}]}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{
         RowBox[{"Length", "[", "OperationsConsidered", "]"}], "+", "1"}]}], 
       ",", 
       RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"TestValue", " ", "=", " ", 
         RowBox[{"SetOfStatesWithGates", "[", 
          RowBox[{"[", 
           RowBox[{
            RowBox[{"OperationsConsidered", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"TestValue", "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], "\[Equal]", "\"\<P\>\""}],
           " ", ",", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"EdgeSet", ",", 
            RowBox[{"DirectedEdge", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"SetofStates", ",", 
                 RowBox[{"TestValue", "[", 
                  RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{"SetofStates", ",", 
                 RowBox[{"TestValue", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"TestValue", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}], "\[Equal]", 
             "\"\<H\>\""}], " ", ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"EdgeSet", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"SetofStates", ",", 
                    RowBox[{"TestValue", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[TwoWayRule]", " ", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"SetofStates", ",", 
                    RowBox[{"TestValue", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "Green"}], 
               "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"EdgeSet", ",", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"Sort", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"SetofStates", ",", 
                    RowBox[{"TestValue", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "\[TwoWayRule]", " ", 
                  RowBox[{
                   RowBox[{"Position", "[", 
                    RowBox[{"SetofStates", ",", 
                    RowBox[{"TestValue", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", "Magenta"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{
            "Print", "[", "\"\<Invalid Gate Encountered.\>\"", "]"}]}], "]"}],
           ",", 
          RowBox[{
          "Print", "[", "\"\<Cannot determine gate input.\>\"", "]"}]}], 
         "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"k", "++"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"k", ">", "1000"}], ",", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"j", ",", "\"\< of \>\"", ",", 
             RowBox[{"Length", "[", "OperationsConsidered", "]"}], ",", 
             "\"\< edges added.\>\""}], "]"}], ";", 
           RowBox[{"k", "=", "0"}]}], ",", "Null"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Uses", " ", "the", " ", "edge", " ", "set", " ", "compiled", " ", 
       "above", " ", "to", " ", "render", " ", "the", " ", 
       RowBox[{"graph", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SetofStates", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", "4"}], ",", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"Graph", "[", "EdgeSet", "]"}]}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{"EdgeSet", ",", 
          RowBox[{"VertexStyle", "\[Rule]", "VertexStyleSet"}]}], "]"}]}]}], 
      "]"}], ";", "\[IndentingNewLine]", "G"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.852899598643917*^9, 3.8528996251971197`*^9}, {
   3.852899667783703*^9, 3.852899827834247*^9}, {3.852899981147002*^9, 
   3.852900063385223*^9}, 3.852900196138406*^9, 3.8529002293956623`*^9, {
   3.852900278975327*^9, 3.852900294949874*^9}, {3.8529003380126877`*^9, 
   3.852900647296672*^9}, {3.852900681079297*^9, 3.8529006909197693`*^9}, {
   3.852900726516958*^9, 3.852900742451808*^9}, 3.852900773806287*^9, {
   3.852900853809533*^9, 3.8529009384459343`*^9}, {3.852900968650819*^9, 
   3.85290106083698*^9}, {3.8529010912194223`*^9, 3.852901142705001*^9}, {
   3.852901236093192*^9, 3.8529014241187267`*^9}, 3.852901461811248*^9, {
   3.8529016546929207`*^9, 3.8529016548663683`*^9}, {3.852901744504455*^9, 
   3.8529017487838173`*^9}, 3.852901795998752*^9, {3.852901826944275*^9, 
   3.852901857753401*^9}, {3.852901904202838*^9, 3.85290193159977*^9}, {
   3.852902230068638*^9, 3.85290223285708*^9}, {3.8529056847626457`*^9, 
   3.852905774291575*^9}, {3.852905844613558*^9, 3.852905846951806*^9}, {
   3.852905883353734*^9, 3.852905915217458*^9}, {3.8529059622557*^9, 
   3.852905963357297*^9}, {3.852906059342852*^9, 3.8529061313567667`*^9}, {
   3.852906195382304*^9, 3.852906212313445*^9}, {3.852906283333991*^9, 
   3.852906308236124*^9}, {3.852906449707308*^9, 3.8529064854963837`*^9}, {
   3.852906526482188*^9, 3.852906533536612*^9}, {3.852906607978323*^9, 
   3.852906665123171*^9}, {3.852906698203335*^9, 3.852906701600253*^9}, 
   3.852906735339821*^9, {3.852906770717239*^9, 3.852906791310974*^9}, {
   3.852906834287589*^9, 3.852906839495784*^9}, {3.8529068714041147`*^9, 
   3.852906874699403*^9}, 3.85290748582826*^9, {3.8529075401690073`*^9, 
   3.852907544201497*^9}, {3.8529153739545937`*^9, 3.85291538188846*^9}, {
   3.852915536236599*^9, 3.852915536585669*^9}, {3.852915594080037*^9, 
   3.852915743768841*^9}, {3.852915873324933*^9, 3.852915884298203*^9}, {
   3.8529159571967688`*^9, 3.852915957590785*^9}, {3.852916032024638*^9, 
   3.852916047303431*^9}, {3.8529161678812323`*^9, 3.852916177454522*^9}, {
   3.852916243902001*^9, 3.8529162462529*^9}, {3.85292107284199*^9, 
   3.852921089695648*^9}, {3.85292115763942*^9, 3.8529211615849657`*^9}, {
   3.852921192646644*^9, 3.8529212225549994`*^9}, {3.8529212611224823`*^9, 
   3.852921278033656*^9}, {3.8529213343036222`*^9, 3.852921349910293*^9}, {
   3.85292144976658*^9, 3.852921450059701*^9}, {3.852921524998633*^9, 
   3.852921529449102*^9}, {3.85307152682264*^9, 3.853071537521347*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"587dd261-aeda-43a3-bdc8-7d984f3bdb69"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GraphFinder", "[", 
   RowBox[{"StateSet_", ",", "GateSet_", ",", "DesiredVertexNumber_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"TestGraph", ",", 
      RowBox[{"RandomizedSequence", " ", "=", " ", 
       RowBox[{"RandomSample", "[", "StateSet", "]"}]}], ",", "i"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"For", "[", 
     RowBox[{
      RowBox[{"i", "=", "1"}], ",", 
      RowBox[{"i", "<", 
       RowBox[{
        RowBox[{"Length", "[", "RandomizedSequence", "]"}], "+", "1"}]}], ",", 
      RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"TestGraph", " ", "=", 
        RowBox[{"SimpleGraph", "[", 
         RowBox[{"GateSelectedStateGenerator", "[", 
          RowBox[{
           RowBox[{"RandomizedSequence", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "GateSet"}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"VertexCount", "[", "TestGraph", "]"}], "\[Equal]", " ", 
          "DesiredVertexNumber"}], ",", 
         RowBox[{
          RowBox[{"Print", "[", "TestGraph", "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"RandomizedSequence", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<Graph: \>\"", ",", "i", ",", "\"\<, Vertex Number: \>\"", ",", 
            RowBox[{"VertexCount", "[", "TestGraph", "]"}]}], "]"}], ";", 
          RowBox[{"Print", "[", 
           RowBox[{"RandomizedSequence", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.86300574032622*^9, 3.863005742147511*^9}, {
  3.8630057959126883`*^9, 3.863005797594853*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"b0bbddd0-ee9f-482c-af7f-4beec212d2fc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InteractiveReachabilityGraphBuilder", "[", 
   RowBox[{
   "SetOfStabilizerStates_", ",", "SetOfStatesWithGates_", ",", 
    "GatesToBeDisplayed_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NumberOfQubits", " ", "=", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", 
         RowBox[{"Length", "[", 
          RowBox[{"SetOfStabilizerStates", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}]}], ",", 
      RowBox[{"PossibleEntropyVectors", " ", "=", " ", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{"ReducedEntropyVectors", "[", "SetOfStabilizerStates", "]"}], 
        "]"}]}], ",", 
      RowBox[{"GateBitPair", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"HolographicStates", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "OperationIndices", ",", 
      RowBox[{"EdgeSet", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"VertexLabelSet", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"VertexStyleSet", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"VertexColorChoices", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
        "Red", ",", "Blue", ",", "Orange", ",", "Purple", ",", "Yellow", ",", 
         "Black", ",", "Cyan", ",", "Pink", ",", "Brown", ",", "LightGreen", 
         ",", "White", ",", "LightRed", ",", "LightBlue", ",", "LightYellow", 
         ",", "LightMagenta", ",", "LightOrange", ",", "LightGray", ",", 
         "LightCyan", ",", "LightBrown"}], "}"}]}], ",", "i", ",", "j", ",", 
      "k", ",", "l", ",", "m", ",", "G"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SetOfStabilizerStates", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", "4"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"m", "=", "1"}], ",", 
         RowBox[{"m", "<", " ", 
          RowBox[{
           RowBox[{"Length", "[", "SetOfStabilizerStates", "]"}], "+", 
           "1"}]}], ",", 
         RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"VertexLabelSet", ",", 
           RowBox[{"m", "\[Rule]", " ", 
            RowBox[{"Placed", "[", 
             RowBox[{
              RowBox[{"Toggler", "[", 
               RowBox[{
                RowBox[{"Invisible", "[", "m", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"SetOfStabilizerStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Background", "\[Rule]", " ", "LightYellow"}], 
                    ",", 
                    RowBox[{"CellFrameColor", "\[Rule]", " ", "LightBlue"}], 
                    ",", 
                    RowBox[{"CellFrame", "\[Rule]", " ", "1"}]}], "}"}]}], 
                   "]"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"ReducedEntropyVectorBuilder", "[", 
                    RowBox[{"SetOfStabilizerStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Background", "\[Rule]", " ", "LightBlue"}], ",", 
                    
                    RowBox[{"CellFrameColor", "\[Rule]", " ", "LightBlue"}], 
                    ",", 
                    RowBox[{"CellFrame", "\[Rule]", " ", "1"}]}], "}"}]}], 
                   "]"}], ",", 
                  RowBox[{"Invisible", "[", "m", "]"}]}], "}"}]}], "]"}], ",",
               "Center"}], "]"}]}]}], "]"}]}], "]"}], ",", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"m", "=", "1"}], ",", 
         RowBox[{"m", "<", " ", 
          RowBox[{
           RowBox[{"Length", "[", "SetOfStabilizerStates", "]"}], "+", 
           "1"}]}], ",", 
         RowBox[{"m", "++"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"AppendTo", "[", 
           RowBox[{"VertexLabelSet", ",", 
            RowBox[{"m", "\[Rule]", " ", 
             RowBox[{"Placed", "[", 
              RowBox[{
               RowBox[{"Toggler", "[", 
                RowBox[{
                 RowBox[{"Invisible", "[", "m", "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Flatten", "[", 
                    RowBox[{"Transpose", "[", 
                    RowBox[{"SetOfStabilizerStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}], "]"}], ",", 
                    
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Background", "\[Rule]", " ", "LightYellow"}], 
                    ",", 
                    RowBox[{"CellFrameColor", "\[Rule]", " ", "LightBlue"}], 
                    ",", 
                    RowBox[{"CellFrame", "\[Rule]", " ", "1"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"ReducedEntropyVectorBuilder", "[", 
                    RowBox[{"SetOfStabilizerStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Background", "\[Rule]", " ", "LightBlue"}], ",", 
                    
                    RowBox[{"CellFrameColor", "\[Rule]", " ", "LightBlue"}], 
                    ",", 
                    RowBox[{"CellFrame", "\[Rule]", " ", "1"}]}], "}"}]}], 
                    "]"}], ",", 
                   RowBox[{"Invisible", "[", "m", "]"}]}], "}"}]}], "]"}], 
               ",", "Center"}], "]"}]}]}], "]"}], ";", 
          RowBox[{"AppendTo", "[", 
           RowBox[{"VertexStyleSet", " ", ",", 
            RowBox[{"m", "\[Rule]", 
             RowBox[{
              RowBox[{"VertexColorChoices", "[", 
               RowBox[{"[", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"PossibleEntropyVectors", ",", 
                   RowBox[{"ReducedEntropyVectorBuilder", "[", 
                    RowBox[{"SetOfStabilizerStates", "[", 
                    RowBox[{"[", "m", "]"}], "]"}], "]"}]}], "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}]}], "]"}]}]}], "]"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "the", " ", 
       RowBox[{"user", "'"}], "s", " ", "sanity"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Vertices colored and labeled.\>\"", "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{
         RowBox[{"Length", "[", "SetOfStatesWithGates", "]"}], "+", "1"}]}], 
       ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"GateBitPair", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"ToString", "[", 
            RowBox[{"SetOfStatesWithGates", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "2"}], "]"}], "]"}], "]"}], ",", 
           RowBox[{"SetOfStatesWithGates", "[", 
            RowBox[{"[", 
             RowBox[{"j", ",", "3"}], "]"}], "]"}]}], "}"}]}], "]"}]}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"For", " ", "the", " ", 
       RowBox[{"user", "'"}], "s", " ", "sanity"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", "\"\<Gates compiled.\>\"", "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"l", "=", "1"}], ",", 
       RowBox[{"l", "<", " ", 
        RowBox[{
         RowBox[{"Length", "[", "GatesToBeDisplayed", "]"}], "+", "1"}]}], 
       ",", 
       RowBox[{"l", "++"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"OperationIndices", " ", "=", " ", 
         RowBox[{"Position", "[", 
          RowBox[{"GateBitPair", ",", 
           RowBox[{"GatesToBeDisplayed", "[", 
            RowBox[{"[", "l", "]"}], "]"}]}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"k", "=", "1"}], ",", 
          RowBox[{"k", "<", 
           RowBox[{
            RowBox[{"Length", "[", "OperationIndices", "]"}], "+", "1"}]}], 
          ",", 
          RowBox[{"k", "++"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"GatesToBeDisplayed", "[", 
              RowBox[{"[", 
               RowBox[{"l", ",", "1"}], "]"}], "]"}], "\[Equal]", 
             "\"\<P\>\""}], " ", ",", 
            RowBox[{"AppendTo", "[", 
             RowBox[{"EdgeSet", ",", 
              RowBox[{"DirectedEdge", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"SetOfStabilizerStates", ",", 
                   RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{
                 RowBox[{"Position", "[", 
                  RowBox[{"SetOfStabilizerStates", ",", 
                   RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}], "]"}], 
            ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"GatesToBeDisplayed", "[", 
                RowBox[{"[", 
                 RowBox[{"l", ",", "1"}], "]"}], "]"}], "\[Equal]", 
               "\"\<H\>\""}], " ", ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"EdgeSet", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], 
                   "\[TwoWayRule]", " ", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Green", ",", "White"}], "}"}], ",", 
                    RowBox[{"1", "-", 
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "3", ",", 
                    "1"}], "]"}], "]"}], ")"}]}]}]}], "]"}]}], "]"}]}], "]"}],
               ",", 
              RowBox[{"AppendTo", "[", 
               RowBox[{"EdgeSet", ",", 
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}], 
                   "\[TwoWayRule]", " ", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "4"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"Position", "[", 
                    RowBox[{"SetOfStabilizerStates", ",", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "1"}], "]"}], 
                    "]"}]}], "]"}], "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "]"}]}], ",", 
                  RowBox[{"Blend", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"Magenta", ",", "White"}], "}"}], ",", 
                    RowBox[{"1", "-", 
                    RowBox[{"1", "/", 
                    RowBox[{"(", 
                    RowBox[{"SetOfStatesWithGates", "[", 
                    RowBox[{"[", 
                    RowBox[{
                    RowBox[{"OperationIndices", "[", 
                    RowBox[{"[", 
                    RowBox[{"k", ",", "1"}], "]"}], "]"}], ",", "3", ",", 
                    "1"}], "]"}], "]"}], ")"}]}]}]}], "]"}]}], "]"}]}], "]"}],
               ",", 
              RowBox[{"Print", "[", "\"\<Unknown Operation.\>\"", "]"}]}], 
             "]"}]}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"For", " ", "the", " ", 
          RowBox[{"user", "'"}], "s", " ", "sanity"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<Edge set \>\"", ",", 
          RowBox[{"ToString", "[", "l", "]"}], ",", "\"\< of \>\"", ",", 
          RowBox[{"ToString", "[", 
           RowBox[{"Length", "[", "GatesToBeDisplayed", "]"}], "]"}], ",", 
          " ", "\"\< added.\>\""}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Uses", " ", "the", " ", "edge", " ", "set", " ", "compiled", " ", 
       "above", " ", "to", " ", "render", " ", "the", " ", 
       RowBox[{"graph", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SetOfStabilizerStates", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}]}], "]"}], ">", "4"}], ",", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", "EdgeSet", "]"}], ",", 
          RowBox[{"VertexLabels", "\[Rule]", "VertexLabelSet"}]}], "]"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"G", " ", "=", " ", 
        RowBox[{"Graph", "[", 
         RowBox[{
          RowBox[{"DeleteDuplicates", "[", "EdgeSet", "]"}], ",", 
          RowBox[{"VertexLabels", "\[Rule]", "VertexLabelSet"}], ",", 
          RowBox[{"VertexStyle", "\[Rule]", " ", "VertexStyleSet"}]}], 
         "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", "G"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.852853493954373*^9, 3.85285367464615*^9}, 
   3.85289919632307*^9, {3.852899423013102*^9, 3.852899432905027*^9}, {
   3.85289946312845*^9, 3.852899464144392*^9}, {3.8528995439263487`*^9, 
   3.852899544670219*^9}, {3.852899583333782*^9, 3.852899585428506*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"3d371c55-68cf-49da-b6a8-a6087e1688b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Below", " ", "we", " ", "define", " ", "a", " ", "function", " ", "to", 
    " ", "generate", " ", "the", " ", "reachability", " ", "graph", " ", 
    "for", " ", "any", " ", "number", " ", "of", " ", 
    RowBox[{"qubits", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Input", ":", " ", 
    RowBox[{"ImprovedReachabilityGraphBuilder", "[", 
     RowBox[{"ThreeQubitStatesWithGates", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<H\>\"", ",", 
          RowBox[{"{", "3", "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<CNOT\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<P\>\"", 
          RowBox[{"{", "1", "}"}]}], "}"}]}], "}"}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ReachabilityGraphBuilder", "[", 
    RowBox[{"StatesWithGates_", ",", "DesiredGates_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"EdgeList", "=", 
        RowBox[{"{", "}"}]}], ",", "entropyVectors", ",", 
       RowBox[{"EdgeStyleList", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "}"}], "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "Small", "}"}], "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "Tiny", "}"}], "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "Medium", "}"}], "]"}], ",", 
          RowBox[{"Dashing", "[", 
           RowBox[{"{", "Large", "}"}], "]"}]}], "}"}]}], ",", 
       RowBox[{"VStyleList", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"VertexColorChoices", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{
         "Blue", ",", "Red", ",", "Orange", ",", "Purple", ",", "Yellow", ",",
           "Black", ",", "Cyan", ",", "Pink", ",", "Brown", ",", "LightGreen",
           ",", "White", ",", "LightRed", ",", "LightBlue", ",", 
          "LightYellow", ",", "LightMagenta", ",", "LightOrange", ",", 
          "LightGray", ",", "LightCyan", ",", "LightBrown"}], "}"}]}], ",", 
       "currentEntry", ",", "j", ",", 
       RowBox[{"LoopCounter", "=", "0"}], ",", "chosenIndices"}], "}"}], ",", 
     "\n", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"chosenIndices", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Most", "/@", 
           RowBox[{"Position", "[", 
            RowBox[{"StatesWithGates", ",", 
             RowBox[{"DesiredGates", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "DesiredGates", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"entropyVectors", " ", "=", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"StatesWithGates", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"chosenIndices", "[", 
               RowBox[{"[", "j", "]"}], "]"}], ",", "4"}], "]"}], "]"}], ",", 
           
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "chosenIndices", "]"}]}], "}"}]}], "]"}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", " ", "=", " ", "1"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{
          RowBox[{"Length", "[", "chosenIndices", "]"}], "+", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"currentEntry", " ", "=", " ", 
          RowBox[{"StatesWithGates", "[", 
           RowBox[{"[", 
            RowBox[{"chosenIndices", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"VStyleList", ",", 
           RowBox[{
            RowBox[{"currentEntry", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "\[Rule]", 
            RowBox[{"VertexColorChoices", "[", 
             RowBox[{"[", 
              RowBox[{"First", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"entropyVectors", ",", 
                 RowBox[{"currentEntry", "[", 
                  RowBox[{"[", "4", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
             "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"currentEntry", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", "\"\<P\>\""}], " ",
            ",", 
           RowBox[{"AppendTo", "[", 
            RowBox[{"EdgeList", ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"DirectedEdge", "[", 
                RowBox[{
                 RowBox[{"currentEntry", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], ",", 
                 RowBox[{"currentEntry", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"EdgeStyleList", "[", 
                 RowBox[{"[", 
                  RowBox[{"currentEntry", "[", 
                   RowBox[{"[", 
                    RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], 
                 "]"}], "}"}]}], "]"}]}], "]"}], ",", "\n", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"currentEntry", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], "==", "\"\<H\>\""}], 
             ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"EdgeList", ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{
                   RowBox[{"currentEntry", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "<->", " ", 
                   RowBox[{"currentEntry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Green", ",", 
                   RowBox[{"EdgeStyleList", "[", 
                    RowBox[{"[", 
                    RowBox[{"currentEntry", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], 
                    "]"}]}], "}"}]}], "]"}]}], "]"}], ",", 
             RowBox[{"AppendTo", "[", 
              RowBox[{"EdgeList", ",", 
               RowBox[{"Style", "[", 
                RowBox[{
                 RowBox[{"Sort", "[", 
                  RowBox[{
                   RowBox[{"currentEntry", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "<->", " ", 
                   RowBox[{"currentEntry", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Magenta", ",", 
                   RowBox[{"EdgeStyleList", "[", 
                    RowBox[{"[", 
                    RowBox[{"currentEntry", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2", ",", "1"}], "]"}], "]"}], "]"}], 
                    "]"}]}], "}"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
         "\n", "\[IndentingNewLine]", 
         RowBox[{"LoopCounter", "++"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{"For", " ", "user", " ", 
           RowBox[{"sanity", "."}]}], "*)"}], "\n", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"LoopCounter", ">", "1000"}], ",", 
           RowBox[{
            RowBox[{"Print", "[", 
             RowBox[{"j", ",", "\"\< of \>\"", ",", 
              RowBox[{"Length", "[", "chosenIndices", "]"}], ",", 
              "\"\< edges added.\>\""}], "]"}], ";", 
            RowBox[{"LoopCounter", "=", "0"}]}], ",", "Null"}], "]"}], 
         ";"}]}], "\n", "]"}], ";", "\[IndentingNewLine]", "\n", 
      RowBox[{"Print", "[", "\"\<Entropy Vector Legend:\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"VertexColorChoices", "[", 
             RowBox[{"[", 
              RowBox[{"First", "[", 
               RowBox[{"Position", "[", 
                RowBox[{"entropyVectors", ",", 
                 RowBox[{"entropyVectors", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "]"}], "]"}], 
             "]"}], ",", 
            RowBox[{"entropyVectors", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"k", ",", 
            RowBox[{"Length", "[", "entropyVectors", "]"}]}], "}"}]}], "]"}], 
        "//", "MatrixForm"}], "]"}], ";", "\n", "\[IndentingNewLine]", 
      RowBox[{"Graph", "[", 
       RowBox[{"EdgeList", ",", 
        RowBox[{"VertexStyle", "->", " ", "VStyleList"}], ",", 
        RowBox[{"EdgeStyle", "\[Rule]", "EdgeStyleList"}]}], "]"}]}]}], "\n", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.844175764857848*^9, 3.8441758088814783`*^9}, {
   3.844181501679384*^9, 3.8441815970222683`*^9}, {3.844181680722374*^9, 
   3.8441819037658997`*^9}, {3.8441821226758823`*^9, 
   3.8441823058635197`*^9}, {3.844182365308065*^9, 3.84418236713962*^9}, {
   3.844182466702969*^9, 3.844182469382751*^9}, {3.844182570689371*^9, 
   3.844182576138509*^9}, {3.844182633151211*^9, 3.844182648079289*^9}, {
   3.844182875992634*^9, 3.844182900904929*^9}, {3.8441829478649893`*^9, 
   3.844182950978157*^9}, {3.844183055826907*^9, 3.844183142132362*^9}, {
   3.8441831749898643`*^9, 3.8441832083862457`*^9}, {3.844183268192132*^9, 
   3.8441833956474733`*^9}, {3.844183437146057*^9, 3.844183764295341*^9}, {
   3.844183942765437*^9, 3.844183951595428*^9}, 3.844184044006806*^9, {
   3.8441842564114*^9, 3.8441842868199883`*^9}, {3.8441843256583652`*^9, 
   3.844184374804834*^9}, {3.8441846488675547`*^9, 3.8441846619666452`*^9}, {
   3.844184705682054*^9, 3.84418470907939*^9}, {3.844185004415657*^9, 
   3.8441850439211693`*^9}, {3.84418526757268*^9, 3.844185284812091*^9}, {
   3.844185316378442*^9, 3.844185331562923*^9}, {3.84418536424931*^9, 
   3.844185399189803*^9}, {3.84418634987615*^9, 3.844186409366673*^9}, {
   3.844186564594906*^9, 3.844186579353767*^9}, {3.844186704478166*^9, 
   3.844186713445313*^9}, {3.844186790876677*^9, 3.844186792330783*^9}, {
   3.844187090456993*^9, 3.8441870936692944`*^9}, 3.844187136552841*^9, {
   3.8441871765334587`*^9, 3.84418717990272*^9}, {3.8441872246200857`*^9, 
   3.844187254933344*^9}, {3.844187344983213*^9, 3.8441873473018923`*^9}, {
   3.844187431027611*^9, 3.844187437443282*^9}, {3.844187543785376*^9, 
   3.844187622022921*^9}, {3.8441877150955067`*^9, 3.8441877527488623`*^9}, {
   3.844187890250225*^9, 3.8441878949206047`*^9}, {3.8441879552333527`*^9, 
   3.8441880273840427`*^9}, {3.8441889629939003`*^9, 3.844188967936432*^9}, 
   3.844208400199995*^9, {3.8442090436007566`*^9, 3.844209044069233*^9}, {
   3.844209523515004*^9, 3.844209528246134*^9}, {3.844209608737006*^9, 
   3.844209626994*^9}, {3.844209658042639*^9, 3.8442096604246902`*^9}, {
   3.844209739406925*^9, 3.844209766707066*^9}, {3.8442098035927687`*^9, 
   3.844209805554394*^9}, {3.844209948657175*^9, 3.844210432297048*^9}, {
   3.844210558463759*^9, 3.844210563329784*^9}, {3.844210702037621*^9, 
   3.844210708487561*^9}, {3.844210845569174*^9, 3.844210855280489*^9}, {
   3.844210940722948*^9, 3.844210944839272*^9}, {3.84421099413026*^9, 
   3.844210999251346*^9}, {3.844211067324953*^9, 3.844211099497511*^9}, 
   3.844211484057412*^9, {3.844211609110705*^9, 3.8442116096845417`*^9}, {
   3.8442117512387238`*^9, 3.844211989195759*^9}, {3.8442120352621803`*^9, 
   3.844212042804371*^9}, {3.8442121089417887`*^9, 3.8442121105939503`*^9}, {
   3.8442126110879*^9, 3.8442126490422087`*^9}, {3.844212703634677*^9, 
   3.844212704287169*^9}, {3.844212741967991*^9, 3.844212742078458*^9}, {
   3.8442128986657867`*^9, 3.844212899065473*^9}, {3.844212944772974*^9, 
   3.844213035278693*^9}, {3.844213135867548*^9, 3.844213217047721*^9}, {
   3.844213274955971*^9, 3.844213324516213*^9}, {3.844213358079351*^9, 
   3.844213364071547*^9}, {3.84421340150355*^9, 3.8442134145185204`*^9}, {
   3.844213464081646*^9, 3.844213471229575*^9}, {3.844213543440296*^9, 
   3.844213597525947*^9}, {3.844213634736969*^9, 3.84421387882412*^9}, {
   3.8442139146330833`*^9, 3.844213954870907*^9}, {3.8442142853475227`*^9, 
   3.8442142863626423`*^9}, {3.844214360734234*^9, 3.844214385646636*^9}, {
   3.844214579179247*^9, 3.844214587246299*^9}, {3.8442146241034727`*^9, 
   3.844214634884297*^9}, {3.844214736935288*^9, 3.844214737238431*^9}, {
   3.844214788660407*^9, 3.844214796046853*^9}, {3.844214829511766*^9, 
   3.8442148543802757`*^9}, {3.844215497112235*^9, 3.844215510940548*^9}, {
   3.844215563042128*^9, 3.844215674283445*^9}, {3.8442157079345217`*^9, 
   3.844215724960883*^9}, {3.844215841080962*^9, 3.844215883771338*^9}, {
   3.844215920539731*^9, 3.84421593022849*^9}, {3.844215983428055*^9, 
   3.844216203689889*^9}, {3.844216670070915*^9, 3.8442166703956547`*^9}, {
   3.844216774204419*^9, 3.844216802521091*^9}, {3.844217005536934*^9, 
   3.844217049395245*^9}, {3.8442171868901987`*^9, 3.8442171928445997`*^9}, {
   3.8442172423233852`*^9, 3.8442172445294437`*^9}, {3.84421728062958*^9, 
   3.844217306820005*^9}, {3.844217367413101*^9, 3.844217400421735*^9}, {
   3.8442174455986357`*^9, 3.844217478921177*^9}, {3.844217509633718*^9, 
   3.844217553947699*^9}, {3.8442176444951687`*^9, 3.8442176534277563`*^9}, {
   3.844217756211947*^9, 3.8442177891105137`*^9}, {3.844217833819522*^9, 
   3.84421783403227*^9}, 3.8442179122647552`*^9, {3.844217963996369*^9, 
   3.8442179672995033`*^9}, 3.844218020084627*^9, {3.844218053064577*^9, 
   3.844218079779318*^9}, {3.844218125076564*^9, 3.8442181279926453`*^9}, {
   3.844218158635003*^9, 3.844218161721669*^9}, {3.844218199407906*^9, 
   3.844218204175609*^9}, {3.844218514588743*^9, 3.8442185409051027`*^9}, 
   3.844218621415751*^9, {3.844218655324175*^9, 3.844218660489462*^9}, {
   3.844218731202785*^9, 3.8442187698349657`*^9}, {3.844218888000288*^9, 
   3.844218893156397*^9}, {3.8442189648726587`*^9, 3.844219015391419*^9}, {
   3.844219127681305*^9, 3.844219128063066*^9}, {3.844254046326036*^9, 
   3.844254082999827*^9}, {3.8442547113175097`*^9, 3.844254718492375*^9}, {
   3.844267850030718*^9, 3.844267850724391*^9}, {3.8443090010128403`*^9, 
   3.844309054020754*^9}, {3.844309092132346*^9, 3.8443090928041267`*^9}, {
   3.844309548839465*^9, 3.844309570586269*^9}, {3.844309608157324*^9, 
   3.844309625269277*^9}, {3.8443097277408237`*^9, 3.844309766618299*^9}, {
   3.844364428453741*^9, 3.844364757303255*^9}, {3.8443648083850737`*^9, 
   3.844364812094137*^9}, {3.844365945074139*^9, 3.844365956152503*^9}, {
   3.844365997439118*^9, 3.844366047813156*^9}, {3.844366082940044*^9, 
   3.844366096051182*^9}, {3.844366136202689*^9, 3.84436616893718*^9}, {
   3.844366218893585*^9, 3.844366228447722*^9}, {3.8443664059448233`*^9, 
   3.844366412433323*^9}, {3.844366622714982*^9, 3.844366626376751*^9}, 
   3.8443666782579517`*^9, {3.84436742800249*^9, 3.844367428081078*^9}, 
   3.844372850912887*^9, {3.844372885416691*^9, 3.844372898335801*^9}, {
   3.844437876454879*^9, 3.8444379546477537`*^9}, {3.844437986863682*^9, 
   3.844438017664652*^9}, {3.844506510239532*^9, 3.84450651030075*^9}, {
   3.844506566209038*^9, 3.844506566429447*^9}, {3.844790528090461*^9, 
   3.844790653526198*^9}, {3.8447906875411386`*^9, 3.84479069198905*^9}, {
   3.844804101763384*^9, 3.844804114573514*^9}, {3.84480418928804*^9, 
   3.844804193091748*^9}, {3.844804403371125*^9, 3.8448044130643663`*^9}, {
   3.844804487324378*^9, 3.84480449549785*^9}, {3.844804566888033*^9, 
   3.844804587307187*^9}, {3.844804644053934*^9, 3.844804676585559*^9}, {
   3.844804745602394*^9, 3.844804754299234*^9}, {3.844804794907093*^9, 
   3.844804795921707*^9}, {3.844805008929167*^9, 3.844805034345504*^9}, {
   3.844805115197982*^9, 3.844805117675812*^9}, {3.845376925890355*^9, 
   3.845376947712129*^9}, {3.845376986697773*^9, 3.845377029665833*^9}, {
   3.845377367293626*^9, 3.845377371264223*^9}, 3.845377478489706*^9, {
   3.845377515811187*^9, 3.845377520642584*^9}, {3.845377840343294*^9, 
   3.845377945106484*^9}, {3.845378526225182*^9, 3.845378539697061*^9}, {
   3.845378609631556*^9, 3.845378636078422*^9}, {3.8454753717202873`*^9, 
   3.845475378507247*^9}, 3.8454774192613077`*^9, {3.845477479415781*^9, 
   3.845477479725677*^9}, {3.847232655644622*^9, 3.847232694777155*^9}, {
   3.847232776431993*^9, 3.847232776779626*^9}, {3.847485422215444*^9, 
   3.847485441086775*^9}, {3.847485755281679*^9, 3.847485755599245*^9}, {
   3.847485877076722*^9, 3.847485918633752*^9}, 3.8474859898881893`*^9, {
   3.847486023036663*^9, 3.8474860645720263`*^9}, {3.847486152028693*^9, 
   3.847486170456274*^9}, 3.847486225675111*^9, {3.847486625917369*^9, 
   3.847486654400741*^9}, {3.8474868530198812`*^9, 3.847486892794376*^9}, {
   3.847486967258604*^9, 3.84748697536191*^9}, {3.847487034310031*^9, 
   3.847487047310707*^9}, {3.847487239065691*^9, 3.8474872795295143`*^9}, {
   3.847487364091052*^9, 3.847487364220688*^9}, {3.847487511458641*^9, 
   3.847487517210651*^9}, {3.847491841092699*^9, 3.847491857016589*^9}, {
   3.850915028808218*^9, 3.850915029847232*^9}, {3.8520666973338203`*^9, 
   3.8520666985683317`*^9}, {3.865371236830585*^9, 3.865371249620521*^9}, {
   3.869839504649288*^9, 3.869839511947547*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"41133d2b-cacf-4af2-883e-7e6516d376a0"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8931666776998*^9, 3.8931666808929577`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"862b059d-a57f-4ab5-bc5f-9d65631fa5e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", "find", 
     " ", "and", " ", "display", " ", "all", " ", "cycles", " ", "of", " ", 
     "a", " ", "chosen", " ", "length"}], ",", " ", 
    RowBox[{
     RowBox[{"containing", " ", "the", " ", "chosen", " ", "bit"}], "-", 
     RowBox[{"address", " ", "as", " ", "a", " ", 
      RowBox[{"vertex", ".", " ", "The"}], " ", "user", " ", "inputs", " ", 
      "the", " ", "graph", " ", "they", " ", "are", " ", "examining"}]}], ",",
     " ", 
    RowBox[{
     RowBox[{"the", " ", "bit"}], "-", 
     RowBox[{
     "address", " ", "of", " ", "the", " ", "vertex", " ", "to", " ", "be", 
      " ", "included"}]}], ",", " ", 
    RowBox[{
    "the", " ", "chosen", " ", "length", " ", "of", " ", "the", " ", 
     "cycle"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "number", " ", "corresponding", " ", "to", " ", 
     "which", " ", "of", " ", "the", " ", "found", " ", "cycles", " ", 
     "should", " ", "be", " ", 
     RowBox[{"displayed", ".", " ", "This"}], " ", "function", " ", "is", " ",
      "meant", " ", "to", " ", "be", " ", "used", " ", "in", " ", 
     "conjunction", " ", "with", " ", "the", " ", "slider", " ", 
     RowBox[{"feature", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"CycleFinder", "[", 
    RowBox[{
    "InitialGraph_", ",", "StartingBitAddress_", ",", "CycleLength_", ",", 
     "ChosenCycleNumber_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "StateSet", ",", "ChosenCycle", ",", "CycleList", ",", 
       "SortedCycleList", ",", "NumCycles", ",", "i", ",", "j"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"2", ",", 
           RowBox[{"Length", "[", "StartingBitAddress", "]"}]}], "]"}], " ", 
         "\[Equal]", " ", "1"}], ",", 
        RowBox[{"StateSet", " ", "=", " ", "OneQubitStabilizerStates"}], ",", 
        
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Log", "[", 
            RowBox[{"2", ",", 
             RowBox[{"Length", "[", "StartingBitAddress", "]"}]}], "]"}], " ",
            "\[Equal]", " ", "2"}], ",", 
          RowBox[{"StateSet", " ", "=", " ", "TwoQubitStabilizerStates"}], 
          ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Log", "[", 
              RowBox[{"2", ",", 
               RowBox[{"Length", "[", "StartingBitAddress", "]"}]}], "]"}], 
             " ", "\[Equal]", " ", "3"}], ",", 
            RowBox[{"StateSet", " ", "=", " ", "ThreeQubitStabilizerStates"}],
             ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Log", "[", 
                RowBox[{"2", ",", 
                 RowBox[{"Length", "[", "StartingBitAddress", "]"}]}], "]"}], 
               " ", "\[Equal]", " ", "4"}], ",", 
              RowBox[{
              "StateSet", " ", "=", " ", "FourQubitStabilizerStates"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Log", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{"Length", "[", "StartingBitAddress", "]"}]}], 
                  "]"}], " ", "\[Equal]", " ", "5"}], ",", 
                RowBox[{
                "StateSet", " ", "=", " ", "FiveQubitStabilizerStates"}], ",", 
                RowBox[{"Print", "[", "\"\<Invalid bit-address.\>\"", "]"}], 
                ",", 
                RowBox[{
                "Print", "[", "\"\<Unable to interpret bit-address\>\"", 
                 "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"CycleList", " ", "=", " ", 
       RowBox[{"FindCycle", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"InitialGraph", ",", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"StateSet", ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", "StartingBitAddress", "}"}], "]"}]}], "]"}], "[", 
            
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", "CycleLength", "}"}], ",", "All"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"NumCycles", " ", "=", " ", 
       RowBox[{"Length", "[", "CycleList", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<There are \>\"", ",", "NumCycles", ",", 
        "\"\< cycles of length \>\"", ",", " ", "CycleLength", ",", " ", 
        "\"\< involving \>\"", ",", " ", "StartingBitAddress", ",", " ", 
        "\"\<.\>\""}], " ", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", " ", 
         RowBox[{
          RowBox[{"Length", "[", "CycleList", "]"}], "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
        RowBox[{"For", "[", 
         RowBox[{
          RowBox[{"j", "=", "1"}], ",", 
          RowBox[{"j", "<", 
           RowBox[{"CycleLength", "+", "1"}]}], ",", 
          RowBox[{"j", "++"}], ",", 
          RowBox[{
           RowBox[{"CycleList", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}], "=", " ", 
           RowBox[{"Sort", "[", 
            RowBox[{"CycleList", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], "]"}]}]}], "]"}]}], 
       "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{
       "\"\<Displaying cycle \>\"", ",", "ChosenCycleNumber", ",", 
        "\"\<:\>\""}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"HighlightGraph", "[", 
       RowBox[{"InitialGraph", ",", 
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"CycleList", "[", 
           RowBox[{"[", "ChosenCycleNumber", "]"}], "]"}], ",", "Thick", ",", 
          "Black"}], "]"}]}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8472786101223173`*^9, 3.847278698623227*^9}, {
   3.847279345380178*^9, 3.847279359995216*^9}, 3.847279419868828*^9, {
   3.84727951753848*^9, 3.847279519247025*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"32ae0cc5-b015-4587-b440-7a1ff6f265da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Below", " ", "is", " ", "a", " ", "function", " ", "to", " ", "generate",
      " ", "all", " ", "classes", " ", "of", " ", "subgraph", " ", 
     "corresponding", " ", "to", " ", "a", " ", "particular", " ", 
     RowBox[{"graph", ".", " ", "The"}], " ", "user", " ", "inputs", " ", "a",
      " ", "chosen", " ", "graph", " ", "along", " ", "with", " ", "a", " ", 
     "boolean", " ", "value", " ", "indicating", " ", "whether", " ", "all", 
     " ", "subgraphs", " ", "should", " ", "be", " ", "displayed", " ", "or", 
     " ", 
     RowBox[{"not", ".", " ", "The"}], " ", "generator", " ", "produces", " ",
      "all", " ", "subgraphs", " ", "and", " ", "categorizes", " ", "them", 
     " ", "according", " ", "to", " ", "vertex", " ", "number"}], ",", " ", 
    RowBox[{
    "displaying", " ", "nondegenrate", " ", "examples", " ", "of", " ", 
     "each", " ", "if", " ", 
     RowBox[{"requested", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ConnectedSubgraphGenerator", "[", 
    RowBox[{"InitialGraph_", ",", "DisplaySubgraphBoolean_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"UpdatedVertexList", ",", 
       RowBox[{"SubgraphSet", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"DropList", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"VertexCountList", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"VertexNumList", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"SubgraphVertexList", "=", 
        RowBox[{"{", "}"}]}], ",", "i", ",", "j", ",", "k", ",", "g", ",", 
       "h"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"UpdatedVertexList", " ", "=", " ", 
       RowBox[{"VertexList", "[", "InitialGraph", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "UpdatedVertexList", "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"AppendTo", "[", 
          RowBox[{"SubgraphSet", ",", 
           RowBox[{"Flatten", "[", 
            RowBox[{"ConnectedComponents", "[", 
             RowBox[{"InitialGraph", ",", 
              RowBox[{"UpdatedVertexList", "[", 
               RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"UpdatedVertexList", " ", "=", " ", 
          RowBox[{"DeleteCases", "[", 
           RowBox[{"UpdatedVertexList", ",", 
            RowBox[{"Alternatives", "@@", 
             RowBox[{"Intersection", "[", 
              RowBox[{"UpdatedVertexList", ",", 
               RowBox[{"Flatten", "[", 
                RowBox[{"ConnectedComponents", "[", 
                 RowBox[{"InitialGraph", ",", 
                  RowBox[{"UpdatedVertexList", "[", 
                   RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}]}], 
              "]"}]}]}], "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"i", "=", "1"}], ",", 
        RowBox[{"i", "<", 
         RowBox[{
          RowBox[{"Length", "[", "SubgraphSet", "]"}], "+", "1"}]}], ",", 
        RowBox[{"i", "++"}], ",", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"VertexCountList", ",", 
          RowBox[{"Length", "[", 
           RowBox[{"SubgraphSet", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"VertexNumList", "=", 
       RowBox[{"DeleteDuplicates", "[", "VertexCountList", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Print", "[", 
       RowBox[{"\"\<There are \>\"", ",", 
        RowBox[{"Length", "[", "SubgraphSet", "]"}], ",", " ", 
        "\"\< separate, connected subgraphs of vertex numbers \>\"", ",", 
        "VertexNumList", " ", ",", "\"\<.\>\""}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"For", "[", 
       RowBox[{
        RowBox[{"j", "=", "1"}], ",", 
        RowBox[{"j", "<", 
         RowBox[{
          RowBox[{"Length", "[", "VertexNumList", "]"}], "+", "1"}]}], ",", 
        RowBox[{"j", "++"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"\"\<There are \>\"", ",", 
          RowBox[{"Count", "[", 
           RowBox[{"VertexCountList", ",", 
            RowBox[{"VertexNumList", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
          "\"\< connected subgraphs of \>\"", ",", 
          RowBox[{"VertexNumList", "[", 
           RowBox[{"[", "j", "]"}], "]"}], ",", "\"\< vertices.\>\""}], 
         "]"}]}], "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"DisplaySubgraphBoolean", "\[Equal]", " ", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"g", "=", "1"}], ",", 
           RowBox[{"g", "<", 
            RowBox[{
             RowBox[{"Length", "[", "SubgraphSet", "]"}], "+", "1"}]}], ",", 
           RowBox[{"g", "++"}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"h", "=", "1"}], ",", 
              RowBox[{"h", "<", 
               RowBox[{
                RowBox[{"Length", "[", "SubgraphSet", "]"}], "+", "1"}]}], 
              ",", 
              RowBox[{"h", "++"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"And", "[", 
                 RowBox[{
                  RowBox[{"g", "\[NotEqual]", " ", "h"}], ",", 
                  RowBox[{"IsomorphicGraphQ", "[", 
                   RowBox[{
                    RowBox[{"Subgraph", "[", 
                    RowBox[{"InitialGraph", ",", 
                    RowBox[{"ConnectedComponents", "[", 
                    RowBox[{"InitialGraph", ",", 
                    RowBox[{"SubgraphSet", "[", 
                    RowBox[{"[", "g", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                    RowBox[{"Subgraph", "[", 
                    RowBox[{"InitialGraph", ",", 
                    RowBox[{"ConnectedComponents", "[", 
                    RowBox[{"InitialGraph", ",", 
                    RowBox[{"SubgraphSet", "[", 
                    RowBox[{"[", "h", "]"}], "]"}]}], "]"}]}], "]"}]}], 
                   "]"}]}], "]"}], ",", 
                RowBox[{"AppendTo", "[", 
                 RowBox[{"DropList", ",", 
                  RowBox[{"{", "h", "}"}]}], "]"}], ",", "Null", ",", 
                RowBox[{
                "Print", "[", "\"\<Cannot determine if isomorphic.\>\"", 
                 "]"}]}], "\[IndentingNewLine]", "]"}]}], "]"}], ";", 
            RowBox[{"SubgraphSet", " ", "=", " ", 
             RowBox[{"Delete", "[", 
              RowBox[{"SubgraphSet", ",", "DropList"}], "]"}]}], ";", 
            RowBox[{"DropList", "=", 
             RowBox[{"{", "}"}]}]}]}], "]"}], ";", 
         RowBox[{"For", "[", 
          RowBox[{
           RowBox[{"k", "=", "1"}], ",", 
           RowBox[{"k", "<", 
            RowBox[{
             RowBox[{"Length", "[", "SubgraphSet", "]"}], "+", "1"}]}], ",", 
           RowBox[{"k", "++"}], ",", 
           RowBox[{"Print", "[", 
            RowBox[{"Subgraph", "[", 
             RowBox[{"InitialGraph", ",", 
              RowBox[{"ConnectedComponents", "[", 
               RowBox[{"InitialGraph", ",", 
                RowBox[{"SubgraphSet", "[", 
                 RowBox[{"[", "k", "]"}], "]"}]}], "]"}]}], "]"}], "]"}]}], 
          "]"}]}], ",", "Null"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.847297019863538*^9, 3.8472971124877*^9}, {
   3.848060150434189*^9, 3.848060185172927*^9}, {3.848060342018923*^9, 
   3.84806043626926*^9}, {3.8480605067744293`*^9, 3.848060632333157*^9}, {
   3.848060674442669*^9, 3.848060760289089*^9}, {3.848060843923601*^9, 
   3.8480608620654583`*^9}, {3.848060953944689*^9, 3.8480610001533813`*^9}, {
   3.848061057286521*^9, 3.848061168209559*^9}, {3.848061231485896*^9, 
   3.848061235233693*^9}, {3.848061953847843*^9, 3.8480619604831047`*^9}, {
   3.848062281891526*^9, 3.8480623297620163`*^9}, {3.848062500173224*^9, 
   3.848062536834684*^9}, {3.848062568827221*^9, 3.8480625836283073`*^9}, {
   3.848062650481709*^9, 3.848062650553761*^9}, {3.848062708545788*^9, 
   3.84806277811738*^9}, {3.848062852344782*^9, 3.848062896150744*^9}, {
   3.848062929808608*^9, 3.848062947137909*^9}, {3.848063032689557*^9, 
   3.848063034624051*^9}, {3.848063104176908*^9, 3.848063125786634*^9}, {
   3.8480631607010317`*^9, 3.84806317964962*^9}, {3.848063392742022*^9, 
   3.84806341425356*^9}, {3.848063510941495*^9, 3.848063540552038*^9}, {
   3.848063946138199*^9, 3.848064018736944*^9}, {3.848064060694778*^9, 
   3.848064109769664*^9}, 3.8480641680942183`*^9, {3.8480642174140472`*^9, 
   3.8480642458049173`*^9}, {3.8480643292521687`*^9, 
   3.8480643366465387`*^9}, {3.848064424739855*^9, 3.848064488073229*^9}, {
   3.8480645368704042`*^9, 3.848064537599498*^9}, {3.848064589917714*^9, 
   3.848064723483848*^9}, {3.8480647590191298`*^9, 3.848064760587949*^9}, {
   3.848064797452064*^9, 3.848064835090478*^9}, {3.848064920350326*^9, 
   3.8480649510646687`*^9}, {3.848065042389399*^9, 3.848065073890563*^9}, {
   3.8480651082199697`*^9, 3.848065233163436*^9}, {3.848065300764076*^9, 
   3.8480653153159103`*^9}, {3.848065346382412*^9, 3.8480653477325983`*^9}, {
   3.852066730957808*^9, 3.8520667321673107`*^9}},
 CellLabel->"In[70]:=",ExpressionUUID->"75fef2fa-2804-4dba-8e99-8ccf05c6d8cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SequenceGenerator", "[", 
   RowBox[{
   "InitialGraph_", ",", "GraphPath_", ",", "SetOfStates_", ",", 
    "SetOfStatesWithEntropy_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"FlattenedPath", " ", "=", " ", 
       RowBox[{"Flatten", "[", "GraphPath", "]"}]}], ",", 
      RowBox[{"SequenceOfGates", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"SequenceOfQubits", " ", "=", 
       RowBox[{"{", "}"}]}], ",", "SequenceOfOperations", ",", 
      RowBox[{"PairsList", "=", 
       RowBox[{"{", "}"}]}], ",", "i", ",", "j"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{"Length", "[", "FlattenedPath", "]"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"PairsList", ",", 
         RowBox[{"First", "[", 
          RowBox[{"Position", "[", 
           RowBox[{"SetOfStatesWithEntropy", ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"SetOfStates", "[", 
               RowBox[{"[", 
                RowBox[{"FlattenedPath", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "]"}], "]"}], ",", 
              "_", ",", "_", ",", " ", 
              RowBox[{"SetOfStates", "[", 
               RowBox[{"[", 
                RowBox[{"FlattenedPath", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "]"}], "]"}], ",", "_"}], 
             "}"}]}], "]"}], "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"j", "=", "1"}], ",", 
       RowBox[{"j", "<", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"Flatten", "[", "PairsList", "]"}], "]"}], "+", "1"}]}], 
       ",", 
       RowBox[{"j", "++"}], ",", 
       RowBox[{
        RowBox[{"AppendTo", "[", 
         RowBox[{"SequenceOfGates", ",", 
          RowBox[{
           RowBox[{"SetOfStatesWithEntropy", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Flatten", "[", "PairsList", "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], "]"}], ";", 
        RowBox[{"AppendTo", "[", 
         RowBox[{"SequenceOfQubits", ",", 
          RowBox[{
           RowBox[{"SetOfStatesWithEntropy", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"Flatten", "[", "PairsList", "]"}], "[", 
              RowBox[{"[", "j", "]"}], "]"}], "]"}], "]"}], "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SequenceOfOperations", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"ReplaceAll", "[", 
         RowBox[{"SequenceOfGates", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"\"\<H\>\"", "\[Rule]", " ", "HadamardGate"}], ",", 
            RowBox[{"\"\<CNOT\>\"", "\[Rule]", " ", "CNOTGate"}], ",", 
            RowBox[{"\"\<P\>\"", "\[Rule]", " ", "PhaseGate"}]}], "}"}]}], 
         "]"}], ",", "SequenceOfQubits"}], "}"}]}], ";", 
     "\[IndentingNewLine]", "SequenceOfOperations"}]}], "]"}]}]], "Input",
 CellLabel->"In[71]:=",ExpressionUUID->"533343f1-bb17-4276-bc79-1bc1ad7b6838"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HolographicStateFinder", "[", 
   RowBox[{"InitialGraph_", ",", "StabilizerStateSet_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HolographicVertices", "=", 
       RowBox[{"{", "}"}]}], ",", "i"}], "}"}], ",", 
    RowBox[{
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", "=", "1"}], ",", 
       RowBox[{"i", "<", 
        RowBox[{
         RowBox[{"Length", "[", 
          RowBox[{"VertexList", "[", "InitialGraph", "]"}], "]"}], "+", 
         "1"}]}], ",", 
       RowBox[{"i", "++"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"HolographicChecker", "[", 
           RowBox[{"StabilizerStateSet", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}], "\[Equal]", " ", "True"}], 
         ",", 
         RowBox[{"AppendTo", "[", 
          RowBox[{"HolographicVertices", ",", "i"}], "]"}], ",", "Null"}], 
        "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"HighlightGraph", "[", 
      RowBox[{"InitialGraph", ",", 
       RowBox[{"Style", "[", 
        RowBox[{"HolographicVertices", ",", "Large", ",", "Green"}], "]"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.849652393719306*^9, 3.84965239850329*^9}, {
  3.849652461453705*^9, 3.84965249118398*^9}, {3.849652531996688*^9, 
  3.849652543971733*^9}, {3.849652729987474*^9, 3.84965273553962*^9}, {
  3.849652828879836*^9, 3.849652917414528*^9}, {3.849652955900375*^9, 
  3.8496530924382257`*^9}, {3.849653867158985*^9, 3.849653867860416*^9}, {
  3.849654045913836*^9, 3.849654047664742*^9}},
 CellLabel->"In[72]:=",ExpressionUUID->"8f1972d5-5ac4-45a0-9cb3-4be756744828"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Below", " ", "we", " ", "define", " ", "a", " ", "set", " ", "of", " ", 
     "functions", " ", "to", " ", "help", " ", "visualize", " ", "entropy", 
     " ", "vector", " ", 
     RowBox[{"manipulation", ".", " ", "This"}], " ", "is", " ", "limited", 
     " ", "to", " ", "dimensions"}], " ", "=", " ", "3."}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"EntropyVectorVisualize3D", "[", "EntropyVector_", "]"}], ":=", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"InfiniteLine", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"InfiniteLine", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
        RowBox[{"InfiniteLine", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "Red", ",",
         "Thick", ",", 
        RowBox[{"InfiniteLine", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EntropyVector", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"EntropyVector", "[", 
             RowBox[{"[", 
              RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"EntropyVector", "[", 
             RowBox[{"[", 
              RowBox[{"3", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}]}], 
       "}"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
   ";"}]}]], "Input",
 CellChangeTimes->{{3.837098661304453*^9, 3.837098700888137*^9}, 
   3.837100389601448*^9, {3.837100424522048*^9, 3.837100428961153*^9}, {
   3.837100538386828*^9, 3.837100540832294*^9}, {3.837100656913352*^9, 
   3.8371007382137423`*^9}, {3.837101054991908*^9, 3.8371010601868887`*^9}, {
   3.8371011822660227`*^9, 3.837101183832032*^9}, {3.844790740908867*^9, 
   3.844790741715819*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"31ccffe6-1e56-4df3-a7c6-aa06e6043e62"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EntropyConeVisualize3D", "[", "EntropyVector_", "]"}], ":=", 
   RowBox[{"Graphics3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"InfiniteLine", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{"InfiniteLine", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}]}], "]"}], ",", 
       RowBox[{"InfiniteLine", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
       RowBox[{"Polygon", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}]}], "}"}], "]"}]}], "}"}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "10"}], "}"}]}], "}"}]}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.837101143692726*^9, 3.837101144148144*^9}, {
  3.8371012702247458`*^9, 3.8371012989186363`*^9}, {3.837101365199079*^9, 
  3.837101367771481*^9}},
 CellLabel->"In[74]:=",ExpressionUUID->"c48063ba-f950-41f1-a7e3-d097c9c4dbac"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"UnitCellGenerator", "[", "IntialState_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"dim", " ", "=", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"2", ",", 
          RowBox[{"Length", "[", "IntialState", "]"}]}], "]"}]}], ",", 
       "UnitCycle", ",", 
       RowBox[{"StateSet", "=", 
        RowBox[{"{", "}"}]}], ",", 
       RowBox[{"StatesWithGates", " ", "=", " ", 
        RowBox[{"{", "}"}]}], ",", "FullGraph"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"UnitCycle", " ", "=", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
         RowBox[{"NonNormHadamardAction", "[", 
          RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
         RowBox[{"CNOTAction", "[", 
          RowBox[{"dim", ",", 
           RowBox[{"{", 
            RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"StateSet", " ", "=", " ", 
       RowBox[{"SelectiveStabilizerGenerator", "[", 
        RowBox[{"IntialState", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NonNormHadamardAction", "[", 
            RowBox[{"dim", ",", "1"}], "]"}], ",", 
           RowBox[{"NonNormHadamardAction", "[", 
            RowBox[{"dim", ",", "2"}], "]"}], ",", 
           RowBox[{"CNOTAction", "[", 
            RowBox[{"dim", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
           RowBox[{"CNOTAction", "[", 
            RowBox[{"dim", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", "100"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"StatesWithGates", "=", 
       RowBox[{"SelectiveStateWithGateGenerator", "[", 
        RowBox[{"StateSet", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", 
             RowBox[{"{", "1", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", 
             RowBox[{"{", "2", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<CNOT\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<CNOT\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"FullGraph", " ", "=", " ", 
       RowBox[{"ReachabilityGraphBuilder", "[", 
        RowBox[{"StatesWithGates", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", 
             RowBox[{"{", "1", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<H\>\"", ",", 
             RowBox[{"{", "2", "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<CNOT\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<CNOT\>\"", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"SimpleGraph", "[", 
       RowBox[{"Subgraph", "[", 
        RowBox[{"FullGraph", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"NormKet", "[", 
            RowBox[{
             RowBox[{"Apply", "[", 
              RowBox[{"Dot", ",", 
               RowBox[{"Reverse", "[", 
                RowBox[{"UnitCycle", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ";;", "i"}], "]"}], "]"}], "]"}]}], "]"}], ".",
              "IntialState"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "UnitCycle", "]"}]}], "}"}]}], "]"}]}], 
        "]"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DualCellGenerator", "[", "IntialState_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dim", " ", "=", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"2", ",", 
         RowBox[{"Length", "[", "IntialState", "]"}]}], "]"}]}], ",", 
      "UnitCycle", ",", 
      RowBox[{"StateSet", "=", 
       RowBox[{"{", "}"}]}], ",", 
      RowBox[{"StatesWithGates", " ", "=", " ", 
       RowBox[{"{", "}"}]}], ",", "FullGraph"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UnitCycle", " ", "=", " ", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "1"}], "]"}], ",", 
        RowBox[{"NonNormHadamardAction", "[", 
         RowBox[{"dim", ",", " ", "2"}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
        RowBox[{"CNOTAction", "[", 
         RowBox[{"dim", ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], "}"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"StateSet", " ", "=", " ", 
      RowBox[{"SelectiveStabilizerGenerator", "[", 
       RowBox[{"IntialState", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"NonNormHadamardAction", "[", 
           RowBox[{"dim", ",", "1"}], "]"}], ",", 
          RowBox[{"NonNormHadamardAction", "[", 
           RowBox[{"dim", ",", "2"}], "]"}], ",", 
          RowBox[{"CNOTAction", "[", 
           RowBox[{"dim", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
          RowBox[{"CNOTAction", "[", 
           RowBox[{"dim", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", "100"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"StatesWithGates", "=", 
      RowBox[{"SelectiveStateWithGateGenerator", "[", 
       RowBox[{"StateSet", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<H\>\"", ",", 
            RowBox[{"{", "1", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<H\>\"", ",", 
            RowBox[{"{", "2", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CNOT\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CNOT\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"FullGraph", " ", "=", " ", 
      RowBox[{"ReachabilityGraphBuilder", "[", 
       RowBox[{"StatesWithGates", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"\"\<H\>\"", ",", 
            RowBox[{"{", "1", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<H\>\"", ",", 
            RowBox[{"{", "2", "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CNOT\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<CNOT\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"SimpleGraph", "[", 
      RowBox[{"Subgraph", "[", 
       RowBox[{"FullGraph", ",", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NormKet", "[", 
           RowBox[{
            RowBox[{"Apply", "[", 
             RowBox[{"Dot", ",", 
              RowBox[{"UnitCycle", "[", 
               RowBox[{"[", 
                RowBox[{"1", ";;", "i"}], "]"}], "]"}]}], "]"}], ".", 
            "IntialState"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "UnitCycle", "]"}]}], "}"}]}], "]"}]}], 
       "]"}], "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.86552571474072*^9, 3.8655257233894863`*^9}, {
  3.865525868311166*^9, 3.865525882337846*^9}, {3.8656165081558313`*^9, 
  3.865616509492787*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"907c6c89-d03c-4688-98ce-994c0b2946a1"],

Cell["", "Subsubsection",ExpressionUUID->"e093616c-0caa-45f2-a387-57b4ac0294b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cayley Graph Functions", "Subsection",
 CellChangeTimes->{{3.87220893423628*^9, 3.872208940414915*^9}, {
  3.8732958650439377`*^9, 
  3.873295867838152*^9}},ExpressionUUID->"803f02fb-73e9-42ed-83bc-\
aee2f8219b81"],

Cell[CellGroupData[{

Cell["Full Cayley Graph and Normed Cayley Graph", "Subsubsection",
 CellChangeTimes->{{3.894565060534563*^9, 
  3.894565083781026*^9}},ExpressionUUID->"bcd41635-6226-40c7-98c4-\
65306a271c59"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ColorData", "[", 
   RowBox[{"3", ",", "\"\<ColorList\>\""}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"removeSelfLoops", "=", 
    RowBox[{
     RowBox[{"EdgeDelete", "[", 
      RowBox[{"#", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"UndirectedEdge", "|", "DirectedEdge"}], ")"}], "[", 
        RowBox[{"a_", ",", "a_", ",", "___"}], "]"}]}], "]"}], "&"}]}], ";"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"removeRedundantEdges", "[", "graph_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"edgeStyle", " ", "=", 
        RowBox[{"AnnotationValue", "[", 
         RowBox[{"graph", ",", "EdgeStyle"}], "]"}]}], " ", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"EdgeDelete", "[", 
        RowBox[{"graph", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"UndirectedEdge", "|", "DirectedEdge"}], ")"}], "[", 
          RowBox[{"a_", ",", "b_", ",", "___"}], "]"}]}], "]"}], "&"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CayleyGraphBuilder", "[", 
    RowBox[{"generators_", ",", "style_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"edgeSet", " ", ",", "g", " ", ",", 
       RowBox[{"vertexCount", " ", "=", " ", "0"}], ",", "vList"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"edgeSet", " ", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"DirectedEdge", "[", 
              RowBox[{
               RowBox[{"generators", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{
                RowBox[{"generators", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ".", 
                RowBox[{"generators", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ",", "j"}], "]"}], ",", 
             RowBox[{"style", "[", 
              RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "generators", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"Graph", "[", "edgeSet", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"VertexCount", "[", "g", "]"}], ">", "vertexCount"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vList", " ", "=", " ", 
          RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vertexCount", " ", "=", " ", 
          RowBox[{"Length", "[", "vList", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"edgeSet", " ", "=", " ", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Join", "[", 
            RowBox[{"edgeSet", ",", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"DirectedEdge", "[", 
                    RowBox[{
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ".", 
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "j"}], "]"}], ",", 
                   
                   RowBox[{"style", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "[", "vList", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], 
                "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", " ", "=", " ", 
          RowBox[{"Graph", "[", "edgeSet", "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Graph", "[", "edgeSet", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormedCayleyGraphBuilder", "[", 
   RowBox[{"generators_", ",", "style_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"edgeSet", " ", ",", "g", " ", ",", 
      RowBox[{"vertexCount", " ", "=", " ", "0"}], ",", "vList"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edgeSet", " ", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
            RowBox[{"DirectedEdge", "[", 
             RowBox[{
              RowBox[{"NormKet", "[", 
               RowBox[{"generators", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
              RowBox[{"NormKet", "[", 
               RowBox[{
                RowBox[{"generators", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], ".", 
                RowBox[{"generators", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "j"}], "]"}], 
            ",", 
            RowBox[{"style", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "generators", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], "]"}], ",",
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", "edgeSet", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"VertexCount", "[", "g", "]"}], ">", "vertexCount"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vList", " ", "=", " ", 
         RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"vertexCount", " ", "=", " ", 
         RowBox[{"Length", "[", "vList", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"edgeSet", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"edgeSet", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"Style", "[", 
                 RowBox[{
                  RowBox[{"DirectedEdge", "[", 
                   RowBox[{
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"NormKet", "[", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ".", 
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "j"}], 
                   "]"}], ",", 
                  RowBox[{"style", "[", 
                   RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "vList", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], 
               "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"Graph", "[", "edgeSet", "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", "edgeSet", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8719946917704983`*^9, 3.871994838803569*^9}, {
   3.8720995969146957`*^9, 3.872099599703053*^9}, {3.8758110505120497`*^9, 
   3.8758110634923067`*^9}, {3.875811346595107*^9, 3.875811346914918*^9}, 
   3.875811475445633*^9, {3.875811652247532*^9, 3.8758116626524763`*^9}, {
   3.875879485015031*^9, 3.875879501142212*^9}, {3.875879552044524*^9, 
   3.875879561278895*^9}, 3.8945642376296463`*^9, 3.8945643813950787`*^9},
 CellLabel->
  "In[289]:=",ExpressionUUID->"d50dbc8c-83b4-47bc-b273-26b3f2fbba0c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple Cayley Graph", "Subsubsection",
 CellChangeTimes->{{3.894565099781987*^9, 
  3.894565102485734*^9}},ExpressionUUID->"ff30da1f-e9ae-41e4-a832-\
5206b880471f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SimpleCayleyGraphBuilder", "[", "generators_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"edgeSet", " ", ",", "g", " ", ",", 
      RowBox[{"vertexCount", " ", "=", " ", "0"}], ",", "vList"}], "}"}], ",",
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edgeSet", " ", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"DirectedEdge", "[", 
           RowBox[{
            RowBox[{"generators", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"generators", "[", 
              RowBox[{"[", "j", "]"}], "]"}], ".", 
             RowBox[{"generators", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "generators", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], "]"}], ",",
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", "edgeSet", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"VertexCount", "[", "g", "]"}], ">", "vertexCount"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vList", " ", "=", " ", 
         RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"vertexCount", " ", "=", " ", 
         RowBox[{"Length", "[", "vList", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"edgeSet", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"edgeSet", ",", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"ParallelTable", "[", 
               RowBox[{
                RowBox[{"DirectedEdge", "[", 
                 RowBox[{
                  RowBox[{"vList", "[", 
                   RowBox[{"[", "i", "]"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ".", 
                   RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "vList", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], 
               "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"Graph", "[", "edgeSet", "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Graph", "[", "edgeSet", "]"}]}]}], "]"}]}]], "Input",ExpressionU\
UID->"5df18fc1-cd09-4716-bd7e-a0ffcb8dc690"]
}, Closed]],

Cell[CellGroupData[{

Cell["Undirected Cayley Graph and Normed Undirected Cayley Graph", \
"Subsubsection",
 CellChangeTimes->{{3.89456511865136*^9, 
  3.894565128997704*^9}},ExpressionUUID->"e951cfae-2068-452e-9429-\
7d43fbf51c7a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"UndirectedCayleyGraphBuilder", "[", 
    RowBox[{"generators_", ",", "styles_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", " ", 
      RowBox[{"edgeSet", " ", ",", "g", " ", ",", 
       RowBox[{"vertexCount", " ", "=", " ", "0"}], ",", "vList"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"edgeSet", " ", "=", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"Or", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"generators", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "==", 
                RowBox[{"PhaseGate", "[", 
                 RowBox[{"2", ",", "1"}], "]"}]}], ",", 
               RowBox[{
                RowBox[{"generators", "[", 
                 RowBox[{"[", "j", "]"}], "]"}], "==", 
                RowBox[{"PhaseGate", "[", 
                 RowBox[{"2", ",", "2"}], "]"}]}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"DirectedEdge", "[", 
                RowBox[{
                 RowBox[{"generators", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ".", 
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "j"}], "]"}], ",", 
               RowBox[{"styles", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
             RowBox[{"Style", "[", 
              RowBox[{
               RowBox[{"UndirectedEdge", "[", 
                RowBox[{
                 RowBox[{"generators", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ".", 
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], ",", "j"}], "]"}], ",", 
               RowBox[{"styles", "[", 
                RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "generators", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", 
             RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], "]"}], 
         ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"g", " ", "=", " ", 
       RowBox[{"Graph", "[", "edgeSet", "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"VertexCount", "[", "g", "]"}], ">", "vertexCount"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"vList", " ", "=", " ", 
          RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"vertexCount", " ", "=", " ", 
          RowBox[{"Length", "[", "vList", "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"edgeSet", " ", "=", " ", 
          RowBox[{"DeleteDuplicates", "[", 
           RowBox[{"Join", "[", 
            RowBox[{"edgeSet", ",", "\[IndentingNewLine]", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"Or", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", 
                    RowBox[{"PhaseGate", "[", 
                    RowBox[{"2", ",", "1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", 
                    RowBox[{"PhaseGate", "[", 
                    RowBox[{"2", ",", "2"}], "]"}]}]}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ".", 
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "j"}], "]"}], ",", 
                    
                    RowBox[{"styles", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                   RowBox[{"Style", "[", 
                    RowBox[{
                    RowBox[{"UndirectedEdge", "[", 
                    RowBox[{
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ".", 
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], ",", "j"}], "]"}], ",", 
                    
                    RowBox[{"styles", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", 
                   RowBox[{"Length", "[", "vList", "]"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"j", ",", 
                   RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], 
                "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"g", " ", "=", " ", 
          RowBox[{"Graph", "[", "edgeSet", "]"}]}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"SimpleGraph", "[", "g", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NormedUndirectedCayleyGraphBuilder", "[", 
   RowBox[{"generators_", ",", "styles_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", " ", 
     RowBox[{"edgeSet", " ", ",", "g", " ", ",", 
      RowBox[{"vertexCount", " ", "=", " ", "0"}], ",", "vList"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"edgeSet", " ", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"Or", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"generators", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "==", 
               RowBox[{"PhaseGate", "[", 
                RowBox[{"2", ",", "1"}], "]"}]}], ",", 
              RowBox[{
               RowBox[{"generators", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "==", 
               RowBox[{"PhaseGate", "[", 
                RowBox[{"2", ",", "2"}], "]"}]}]}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"DirectedEdge", "[", 
               RowBox[{
                RowBox[{"NormKet", "[", 
                 RowBox[{"generators", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"NormKet", "[", 
                 RowBox[{
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ".", 
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "j"}], "]"}],
               ",", 
              RowBox[{"styles", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
              RowBox[{"UndirectedEdge", "[", 
               RowBox[{
                RowBox[{"NormKet", "[", 
                 RowBox[{"generators", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], "]"}], ",", 
                RowBox[{"NormKet", "[", 
                 RowBox[{
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "j", "]"}], "]"}], ".", 
                  RowBox[{"generators", "[", 
                   RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "j"}], "]"}],
               ",", 
              RowBox[{"styles", "[", 
               RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "generators", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", 
            RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], "]"}], ",",
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"g", " ", "=", " ", 
      RowBox[{"Graph", "[", "edgeSet", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"VertexCount", "[", "g", "]"}], ">", "vertexCount"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"vList", " ", "=", " ", 
         RowBox[{"VertexList", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"vertexCount", " ", "=", " ", 
         RowBox[{"Length", "[", "vList", "]"}]}], ";", "\[IndentingNewLine]", 
        
        RowBox[{"edgeSet", " ", "=", " ", 
         RowBox[{"DeleteDuplicates", "[", 
          RowBox[{"Join", "[", 
           RowBox[{"edgeSet", ",", "\[IndentingNewLine]", 
            RowBox[{"Flatten", "[", 
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"Or", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", 
                    RowBox[{"PhaseGate", "[", 
                    RowBox[{"2", ",", "1"}], "]"}]}], ",", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], "==", 
                    RowBox[{"PhaseGate", "[", 
                    RowBox[{"2", ",", "2"}], "]"}]}]}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"DirectedEdge", "[", 
                    RowBox[{
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"NormKet", "[", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ".", 
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "j"}], 
                    "]"}], ",", 
                    RowBox[{"styles", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}], ",", 
                  RowBox[{"Style", "[", 
                   RowBox[{
                    RowBox[{"UndirectedEdge", "[", 
                    RowBox[{
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", 
                    RowBox[{"NormKet", "[", 
                    RowBox[{
                    RowBox[{"generators", "[", 
                    RowBox[{"[", "j", "]"}], "]"}], ".", 
                    RowBox[{"vList", "[", 
                    RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", "j"}], 
                    "]"}], ",", 
                    RowBox[{"styles", "[", 
                    RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", 
                  RowBox[{"Length", "[", "vList", "]"}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", 
                  RowBox[{"Length", "[", "generators", "]"}]}], "}"}]}], 
               "]"}], ",", "1"}], "]"}]}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"g", " ", "=", " ", 
         RowBox[{"Graph", "[", "edgeSet", "]"}]}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SimpleGraph", "[", "g", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.872209060009198*^9, 3.872209116293065*^9}, {
  3.8945650534999104`*^9, 3.8945650540640507`*^9}, {3.8945651083470993`*^9, 
  3.894565113770961*^9}, {3.894565610511533*^9, 3.8945656293284616`*^9}},
 CellLabel->
  "In[305]:=",ExpressionUUID->"44d298f9-9e92-4a8d-85df-61bd56186c56"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cayley Graph Quotients", "Subsubsection",
 CellChangeTimes->{{3.8945651380436983`*^9, 
  3.8945651410912037`*^9}},ExpressionUUID->"9f80bd7e-a169-425e-9d18-\
d0b0884df8ce"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Congruence", "[", 
   RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
  RowBox[{"Equal", "@@", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y"}], "}"}], ",", "4"}], "]"}]}]}]], "Input",
 CellLabel->"In[86]:=",ExpressionUUID->"26b96ff5-47b5-4983-87d4-2a45bf2a75c7"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CayleyGraphQuotient12", "[", 
    RowBox[{"CayleyGraph_", ",", " ", "State_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ops", " ", "=", " ", 
        RowBox[{"VertexList", "[", "CayleyGraph", "]"}]}], ",", 
       "contractions", ",", "reachableStates", ",", " ", 
       "uniqueReachableStates", ",", "indices", ",", 
       RowBox[{"edgeList", " ", "=", " ", 
        RowBox[{"EdgeList", "[", "CayleyGraph", "]"}]}], ",", 
       "vertexContractions", ",", " ", "indexGraph", ",", "indexGraphEdges"}],
       "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"reachableStates", " ", "=", " ", 
       RowBox[{"Round", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"NormKet", "[", 
            RowBox[{
             RowBox[{"Round", "[", 
              RowBox[{
               RowBox[{"ops", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", ".0001"}], "]"}], ".", 
             RowBox[{"Round", "[", 
              RowBox[{"State", ",", ".0001"}], "]"}]}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "ops", "]"}]}], "}"}]}], "]"}], ",", 
         ".0001"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"uniqueReachableStates", " ", "=", " ", 
       RowBox[{"Gather", "[", 
        RowBox[{"reachableStates", ",", "Congruence"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"indices", " ", "=", " ", 
       RowBox[{"Flatten", "/@", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Position", "[", 
             RowBox[{"reachableStates", ",", 
              RowBox[{"uniqueReachableStates", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", 
              RowBox[{"Length", "[", 
               RowBox[{"uniqueReachableStates", "[", 
                RowBox[{"[", "j", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "uniqueReachableStates", "]"}]}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"FlipView", "[", 
        RowBox[{"{", 
         RowBox[{"CayleyGraph", ",", 
          RowBox[{"Fold", "[", 
           RowBox[{
           "VertexContract", ",", "CayleyGraph", ",", "contractions"}], 
           "]"}]}], "}"}], "]"}], "*)"}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"indexGraph", " ", "=", " ", 
       RowBox[{"Graph", "[", 
        RowBox[{"ParallelTable", "[", 
         RowBox[{
          RowBox[{"DirectedEdge", "[", 
           RowBox[{
            RowBox[{"VertexIndex", "[", 
             RowBox[{"CayleyGraph", ",", 
              RowBox[{"edgeList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "]"}], ",", 
            RowBox[{"VertexIndex", "[", 
             RowBox[{"CayleyGraph", ",", 
              RowBox[{"edgeList", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}]}], "]"}]}], "]"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"Length", "[", "edgeList", "]"}]}], "}"}]}], "]"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"SimpleGraph", "[", 
       RowBox[{"VertexContract", "[", 
        RowBox[{"indexGraph", ",", "indices"}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.873390065139443*^9, 3.873390065601039*^9}, {
   3.8733907439012413`*^9, 3.8733907830671463`*^9}, {3.873390924973246*^9, 
   3.873390925236085*^9}, {3.8733929867021227`*^9, 3.873392999360778*^9}, {
   3.8733941728892593`*^9, 3.87339417594014*^9}, {3.873394372422464*^9, 
   3.873394378092567*^9}, {3.8733947126286907`*^9, 3.8733947174367523`*^9}, {
   3.873395179332149*^9, 3.873395214663684*^9}, {3.8733953800905848`*^9, 
   3.8733953849463663`*^9}, {3.873395560391447*^9, 3.8733956159199142`*^9}, 
   3.873395758644547*^9, 3.8733960762751627`*^9, {3.8733961242105494`*^9, 
   3.8733961255250597`*^9}, {3.873396236481278*^9, 3.8733962446130447`*^9}, {
   3.873396431414892*^9, 3.87339644021702*^9}, {3.8733964984368687`*^9, 
   3.8733965015907507`*^9}, 3.873396548260221*^9, {3.873396688414598*^9, 
   3.873396765842804*^9}, {3.8733968033870363`*^9, 3.87339680658774*^9}, {
   3.873397385365218*^9, 3.873397421661962*^9}, {3.8733975199059677`*^9, 
   3.873397530872128*^9}, {3.8733976281873007`*^9, 3.873397641621635*^9}, {
   3.873397798271443*^9, 3.873397822407552*^9}, {3.87339792281108*^9, 
   3.8733979341212587`*^9}, {3.8733979754650717`*^9, 3.873397990201173*^9}, {
   3.8733980538921328`*^9, 3.87339825081168*^9}, {3.873398288716687*^9, 
   3.873398293070305*^9}, {3.873398396513077*^9, 3.873398402471236*^9}, {
   3.873398445823371*^9, 3.873398449729022*^9}, {3.873398552634767*^9, 
   3.8733985572609*^9}, {3.873399034377268*^9, 3.873399057370122*^9}, {
   3.873399098392568*^9, 3.873399098528441*^9}, {3.8733991504463997`*^9, 
   3.873399152295252*^9}, {3.873399189796417*^9, 3.873399217184967*^9}, {
   3.8733992926223307`*^9, 3.8733992953049383`*^9}, {3.873399346341963*^9, 
   3.8733993492059917`*^9}, {3.873399396796781*^9, 3.873399456597167*^9}, {
   3.873399530248322*^9, 3.873399530359251*^9}, {3.873399602517249*^9, 
   3.873399648144733*^9}, {3.8733998537210827`*^9, 3.873400024486383*^9}, {
   3.8734000890596113`*^9, 3.873400174857716*^9}, {3.8734002167319927`*^9, 
   3.8734002169021072`*^9}, {3.87340025991918*^9, 3.8734002882201767`*^9}, {
   3.8734004184876957`*^9, 3.873400481840383*^9}, 3.873400612154853*^9, {
   3.8734006971038313`*^9, 3.873400750371809*^9}, {3.873400865778783*^9, 
   3.8734008866924686`*^9}, {3.873401013704055*^9, 3.873401068285336*^9}, {
   3.873401386888163*^9, 3.8734014888537693`*^9}, {3.873401801709227*^9, 
   3.873402033372259*^9}, {3.873402088394649*^9, 3.873402133698031*^9}, {
   3.873402169077709*^9, 3.873402177248687*^9}, {3.873402304507779*^9, 
   3.8734023133472424`*^9}, {3.873402361912183*^9, 3.873402426767872*^9}, {
   3.873402578270207*^9, 3.87340258816321*^9}, {3.873407301389595*^9, 
   3.8734073588857203`*^9}, {3.873407527509256*^9, 3.87340758736838*^9}, {
   3.873407649297587*^9, 3.873407682081613*^9}, {3.873408006643235*^9, 
   3.873408007710985*^9}, {3.873408693981955*^9, 3.873408824074462*^9}, {
   3.873410470858821*^9, 3.87341048545689*^9}, {3.87341052319274*^9, 
   3.87341058486244*^9}, {3.8734133735247583`*^9, 3.8734134072465773`*^9}, {
   3.873413670221525*^9, 3.873413672751163*^9}, {3.873461527634118*^9, 
   3.873461549179377*^9}, 3.873461720574073*^9, {3.873636624328888*^9, 
   3.873636645132959*^9}, {3.875708329136239*^9, 3.875708372314982*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"ae2f596b-5300-4326-b935-24a562677e0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CayleyGraphQuotient13", "[", 
    RowBox[{"CayleyGraph_", ",", " ", "State_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"allOperations", " ", "=", " ", 
        RowBox[{"VertexList", "[", "CayleyGraph", "]"}]}], ",", "normGraph", 
       ",", "normOperations", ",", "reachableStates", ",", 
       "uniqueReachableStates", ",", "contractions", ",", "replacements", ",",
        "g"}], " ", "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     
     RowBox[{"(*", 
      RowBox[{
      "Convert", " ", "all", " ", "operators", " ", "in", " ", "the", " ", 
       "Cayley", " ", "graphs", " ", "to", " ", "a", " ", "Normed", " ", 
       "form", " ", "for", " ", "quicker", " ", 
       RowBox[{"comparison", "."}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"normGraph", " ", "=", " ", 
       RowBox[{"VertexReplace", "[", 
        RowBox[{"CayleyGraph", ",", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"allOperations", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "\[Rule]", " ", 
            RowBox[{"NormKet", "[", 
             RowBox[{"allOperations", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"Length", "[", "allOperations", "]"}]}], "}"}]}], 
          "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"normOperations", " ", "=", " ", 
       RowBox[{"Sort", "[", 
        RowBox[{"VertexList", "[", "normGraph", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{
        "Determine", " ", "the", " ", "sets", " ", "of", " ", "operators", 
         " ", "which", " ", "take", " ", "the", " ", "target", " ", "state", 
         " ", "to", " ", "the", " ", "same", " ", "place"}], ",", " ", 
        RowBox[{"group", " ", "these", " ", "reachable", " ", "states", " ", 
         RowBox[{"accordingly", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"reachableStates", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NormKet", "[", 
          RowBox[{
           RowBox[{"normOperations", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ".", "State"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", 
           RowBox[{"Length", "[", "normOperations", "]"}]}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", 
      RowBox[{"uniqueReachableStates", " ", "=", " ", 
       RowBox[{"Gather", "[", 
        RowBox[{"reachableStates", ",", "Equal"}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Locate", " ", "all", " ", "operations", " ", "which", " ", "led", " ",
         "to", " ", "the", " ", "above", " ", "groupings", " ", "and", " ", 
        "group", " ", "them", " ", 
        RowBox[{"identically", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"contractions", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"normOperations", "[", 
          RowBox[{"[", 
           RowBox[{"Flatten", "[", 
            RowBox[{"Position", "[", 
             RowBox[{"reachableStates", ",", 
              RowBox[{"uniqueReachableStates", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "1"}], "]"}], "]"}]}], "]"}], "]"}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", 
           RowBox[{"Length", "[", "uniqueReachableStates", "]"}]}], "}"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Replace", " ", "all", " ", "operators", " ", "of", " ", "a", " ", 
        "grouping", " ", "with", " ", "the", " ", "first", " ", "element", 
        " ", "of", " ", "that", " ", 
        RowBox[{"grouping", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"replacements", " ", "=", " ", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"contractions", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], "->", " ", 
            RowBox[{"First", "[", 
             RowBox[{"contractions", "[", 
              RowBox[{"[", "l", "]"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", 
             RowBox[{"Length", "[", "contractions", "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"Length", "[", 
              RowBox[{"contractions", "[", 
               RowBox[{"[", "l", "]"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
         "1"}], "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"g", "=", 
       RowBox[{"removeSelfLoops", "@", 
        RowBox[{"VertexReplace", "[", 
         RowBox[{"normGraph", ",", "replacements"}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"EdgeDelete", "[", 
       RowBox[{"g", ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Rest", "/@", 
           RowBox[{"Gather", "[", 
            RowBox[{
             RowBox[{"EdgeList", "[", "g", "]"}], ",", " ", "SameQ"}], 
            "]"}]}], ",", "1"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GlobalPhaseQuotient13", "[", "CayleyGraph_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"allOperations", " ", "=", " ", 
       RowBox[{"VertexList", "[", "CayleyGraph", "]"}]}], ",", 
      "uniqueOperations", ",", "indices"}], "}"}], ",", "\[IndentingNewLine]",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"uniqueOperations", " ", "=", " ", 
      RowBox[{"Gather", "[", 
       RowBox[{"allOperations", ",", "GlobalPhaseEquivalence"}], "]"}]}], ";",
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"SimpleGraph", "[", 
      RowBox[{"VertexContract", "[", 
       RowBox[{"CayleyGraph", ",", "uniqueOperations"}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.8734086834131727`*^9, 3.873408683540988*^9}, {
   3.873408860252317*^9, 3.87340886232353*^9}, {3.8734094668641233`*^9, 
   3.873409482486092*^9}, {3.873409512629053*^9, 3.873409525974947*^9}, {
   3.87340963262328*^9, 3.8734096385793123`*^9}, {3.873409770952705*^9, 
   3.873409779597507*^9}, {3.8734099805031652`*^9, 3.873409983019951*^9}, {
   3.8734101621326733`*^9, 3.873410174211342*^9}, {3.873410204218296*^9, 
   3.873410278806497*^9}, 3.873412495355219*^9, 
   3.894567468478322*^9},ExpressionUUID->"ae61d512-4652-464e-b141-\
61145bdbc57e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Use", " ", "FlipView", " ", "for", " ", "a", " ", "really", " ", "cool", 
   " ", "display", " ", 
   RowBox[{"feature", "."}]}], "*)"}]], "Input",
 CellLabel->"In[94]:=",ExpressionUUID->"e4b14693-82a7-4810-a682-8a47654dea09"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Additional Cayley Graph Functions", "Subsubsection",
 CellChangeTimes->{{3.8945659325269117`*^9, 
  3.8945659370307617`*^9}},ExpressionUUID->"fc5c14c4-fe8d-49f8-a7f5-\
93c7c7936d6f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Coming", " ", "Soon"}], "*)"}]], "Input",
 CellChangeTimes->{{3.894567490392261*^9, 
  3.8945674944182034`*^9}},ExpressionUUID->"0a0ee3d7-dc24-4660-b650-\
ef7b0f89d4bd"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Contracted Graph Functions", "Subsection",
 CellChangeTimes->{{3.894480884291798*^9, 
  3.894480888739665*^9}},ExpressionUUID->"e69605e6-f161-493b-8139-\
40900592ca95"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Coming", " ", "soon", " ", "in", " ", "next", " ", 
   RowBox[{"update", "."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.894480896480336*^9, 
  3.894480902003201*^9}},ExpressionUUID->"d0d26d3d-1347-4414-922f-\
7c2f62113970"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Group Functionality", "Chapter",
 CellChangeTimes->{{3.894479787573091*^9, 
  3.894479792661036*^9}},ExpressionUUID->"4bd4b3e4-859a-4747-9be8-\
1b3cd1afd944"],

Cell["\<\
Quantum gates are given in a matrix representation, in the standard {0, 1} \
ket basis. A matrix representation for a particular state, acting on a \
particular subset of qubits in an n-qubit system, are generated when the gate \
function is called. The first argument of each gate function indicates the \
dimension of the Hilbert space, and the second argument the index of qubit(s) \
being acted on. This is illustrated in the examples below.\
\>", "Text",
 CellChangeTimes->{{3.894479902008485*^9, 3.89448015568605*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"54f838fc-09f4-4201-9b43-d4a83c604c3b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"HadamardGate", "[", 
   RowBox[{"2", ",", "1"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.8944800349518623`*^9, 3.8944800423559933`*^9}},
 CellLabel->
  "In[263]:=",ExpressionUUID->"0e942165-cbea-4a3c-a9d5-df37401c325f"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]], "0", "0"},
     {
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}], "0", "0"},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], 
      FractionBox["1", 
       SqrtBox["2"]]},
     {"0", "0", 
      FractionBox["1", 
       SqrtBox["2"]], 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.89448004001849*^9, 3.894480042664929*^9}},
 CellLabel->
  "Out[263]//MatrixForm=",ExpressionUUID->"d79d0e62-37b2-427b-883e-\
d0609db3db18"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PhaseGate", "[", 
   RowBox[{"1", ",", "1"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.894480208412595*^9, 3.894480213197852*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"f33a93e7-ba00-44be-957d-5fa6f4fad999"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0"},
     {"0", "\[ImaginaryI]"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.8944802133969593`*^9},
 CellLabel->
  "Out[268]//MatrixForm=",ExpressionUUID->"40de0605-6866-4776-8d0f-\
afb6341931a5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"CNOTGate", "[", 
   RowBox[{"3", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.894480172286324*^9, 3.89448018005477*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"7d2a110f-fa24-4048-b11f-6f70c6bf38bc"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "0", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1"},
     {"0", "0", "0", "0", "1", "0", "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.894480180765374*^9},
 CellLabel->
  "Out[264]//MatrixForm=",ExpressionUUID->"3ba48e6d-9d8b-40f3-96fc-\
4d137c59ae2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"XGate", "[", 
   RowBox[{"4", ",", "4"}], "]"}], "//", "MatrixForm"}]], "Input",
 CellChangeTimes->{{3.89448018408419*^9, 3.894480201785068*^9}},
 CellLabel->
  "In[267]:=",ExpressionUUID->"a08416d3-ae01-40f7-8bf1-25a8598b6ee6"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "1", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "1", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "1"},
     {"1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"0", "0", "0", "0", "0", "0", "0", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.894480188511137*^9, 3.894480202083165*^9}},
 CellLabel->
  "Out[267]//MatrixForm=",ExpressionUUID->"905b6e89-047c-4731-a0a8-\
2692e59a6f8d"]
}, Open  ]],

Cell["\<\
Finite Groups can be generated with the GroupGenerate[] function, where a set \
of generators in matrix representation is given as input. The first argument \
of the function is a list of generators, and the second argument is an option \
for parallel computation.\
\>", "Text",
 CellChangeTimes->{{3.894479807036523*^9, 3.894479860762397*^9}, {
  3.89448058047672*^9, 3.894480609090746*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"950bd637-6709-4b7a-b7c1-cf2d9ad600c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GroupGenerate", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardGate", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"HadamardGate", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", "False"}], "]"}]], "Input",\

 CellChangeTimes->{{3.894479849059626*^9, 3.894479867570071*^9}, {
  3.894480229924156*^9, 3.894480249371904*^9}, {3.894480613238553*^9, 
  3.894480614211453*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"0660a21a-2f5f-43e6-8cf5-297b39307e57"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        SqrtBox["2"]], ",", 
       FractionBox["1", 
        SqrtBox["2"]], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        SqrtBox["2"]], ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["1", 
        SqrtBox["2"]], ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["1", 
        SqrtBox["2"]], ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        SqrtBox["2"]], ",", "0", ",", 
       FractionBox["1", 
        SqrtBox["2"]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", 
        SqrtBox["2"]], ",", "0", ",", 
       FractionBox["1", 
        SqrtBox["2"]]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", 
        SqrtBox["2"]], ",", "0", ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", 
        SqrtBox["2"]], ",", "0", ",", 
       RowBox[{"-", 
        FractionBox["1", 
         SqrtBox["2"]]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "2"], ",", 
       FractionBox["1", "2"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       FractionBox["1", "2"], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       FractionBox["1", "2"], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       FractionBox["1", "2"], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       RowBox[{"-", 
        FractionBox["1", "2"]}], ",", 
       FractionBox["1", "2"]}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.894480238034622*^9, 3.8944802495673637`*^9}, 
   3.894480614467106*^9},
 CellLabel->
  "Out[280]=",ExpressionUUID->"62a35105-5558-4086-abf3-ed16f938f12b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"C1", " ", "=", " ", 
   RowBox[{"GroupGenerate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HadamardGate", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"PhaseGate", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", "False"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "C1", "]"}]}], "Input",
 CellChangeTimes->{{3.894480258739797*^9, 3.894480278464912*^9}, {
  3.894480628251794*^9, 3.894480629971004*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"7f0a7d29-9351-4ded-bac5-d32348b49ce6"],

Cell[BoxData["192"], "Output",
 CellChangeTimes->{3.894480278777197*^9, 3.894480630944872*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"225e7f62-19e7-4c66-b4ee-d51088ab8d1a"]
}, Open  ]],

Cell[TextData[{
 "The NormedGroupGenerate[] function gives the group generated by a set of \
operators, where the overall Clifford phase element ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", "HP", ")"}], "3"], " ", "has", " ", "been", " ", 
    RowBox[{"removed", "."}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f6d1980-9240-4598-ac77-deba8eeb190d"]
}], "Text",
 CellChangeTimes->{{3.894480644961356*^9, 3.894480708440138*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"94e6cd47-034e-4dd8-b32f-c84a84c714ae"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"normedC1", " ", "=", " ", 
   RowBox[{"NormedGroupGenerate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HadamardGate", "[", 
        RowBox[{"1", ",", "1"}], "]"}], ",", 
       RowBox[{"PhaseGate", "[", 
        RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", "False"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Length", "[", "normedC1", "]"}]}], "Input",
 CellChangeTimes->{{3.894480724413546*^9, 3.894480733904251*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"4e568260-7fb4-4c18-9205-8812fb5ad798"],

Cell[BoxData["24"], "Output",
 CellChangeTimes->{3.894480734614469*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"bc4f68a1-967d-4c64-b5a2-4511032bcd16"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cayley Graphs", "Chapter",
 CellChangeTimes->{{3.871994431820531*^9, 3.871994433764285*^9}, {
  3.894479773708829*^9, 
  3.894479780036964*^9}},ExpressionUUID->"357ff9c2-c61c-42db-a35b-\
68d6243048d4"],

Cell["\<\
We offer an extended suite of Cayley graph generators, dependent on the user\
\[CloseCurlyQuote]s desired output. These graphs can be manipulated as graph \
objects, or quotiented according to the procedure defined in \\cite{}.\
\>", "Text",
 CellChangeTimes->{{3.894481503099084*^9, 3.8944815269109573`*^9}, {
  3.89456406076094*^9, 3.8945640829004507`*^9}, {3.894564486272176*^9, 
  3.894564511054564*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"623fd53f-50c8-41d8-ad7f-ad7a8b61ebc0"],

Cell[CellGroupData[{

Cell["Generating Cayley Graphs", "Section",
 CellChangeTimes->{{3.8945645391236*^9, 
  3.894564542843954*^9}},ExpressionUUID->"97e6355e-b72e-4977-82a6-\
90b4a24a6321"],

Cell[CellGroupData[{

Cell["Full Cayley Graph", "Subsubsection",
 CellChangeTimes->{{3.8945647577125187`*^9, 
  3.89456476004852*^9}},ExpressionUUID->"72bd01a0-6bd5-4798-8e53-\
8a766792fe37"],

Cell["\<\
To generate the full Cayley graph for a collection of generators, the \
CayleyGraphBuilder[] function is called. This function takes two arguments as \
input, the first being a set of generators and the second a corresponding \
list of edge styles for those generators.\
\>", "Text",
 CellChangeTimes->{{3.894564136450946*^9, 3.894564220942556*^9}, {
  3.894564261708449*^9, 3.8945642706670847`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"f3958066-6230-4360-b116-2783c3b40f87"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CayleyGraphBuilder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardGate", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"HadamardGate", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{
       TemplateBox[<|
        "color" -> RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`]|>,
        "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", "Thick"}], "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.894564251050452*^9, 3.89456431968815*^9}, {
  3.894564408232634*^9, 3.894564467807826*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"ce0794da-c831-47db-8442-df07bc939588"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 
       0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, {{
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[1, 2]}, {
         Rational[1, 2], 
         Rational[-1, 2], 
         Rational[1, 2], 
         Rational[-1, 2]}, {
         Rational[1, 2], 
         Rational[1, 2], 
         Rational[-1, 2], 
         Rational[-1, 2]}, {
         Rational[1, 2], 
         Rational[-1, 2], 
         Rational[-1, 2], 
         Rational[1, 2]}}, {{2^Rational[-1, 2], 0, 2^Rational[-1, 2], 0}, {
        0, 2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 0, -2^Rational[-1, 2], 0}, {
        0, 2^Rational[-1, 2], 0, -2^Rational[-1, 2]}}}, {{{1, 2}, {1, 3}, {4, 
       3}, {4, 2}, {2, 1}, {2, 4}, {3, 4}, {3, 1}}, Null, {1, 2, 1, 2, 1, 2, 
       1, 2}}, {
      EdgeStyle -> {
        DirectedEdge[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 0, -2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, -2^Rational[-1, 2]}}, {{
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2], 
             Rational[1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
            Thickness[Large]]}, DirectedEdge[{{
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2], 
             Rational[1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 
           1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 1] -> {
           Directive[
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{2^Rational[-1, 2], 0, 2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 0, -2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2], 
             Rational[1, 2]}}, 2] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 0, 2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 0, -2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, -2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 
           1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 2] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
            Thickness[Large]]}, DirectedEdge[{{
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2]}, {
             Rational[1, 2], 
             Rational[-1, 2], 
             Rational[-1, 2], 
             Rational[1, 2]}}, {{
            2^Rational[-1, 2], 0, 2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 0, -2^Rational[-1, 2], 0}, {
            0, 2^Rational[-1, 2], 0, -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
            Thickness[Large]]}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxdlHs0lIsaxqdSUaES9iZELqeSVCqXdo+I3CqUSp0iSURRuUXuUynJCDuF
cs+dQlPIN2qEyKVxKbKTjZkx4zODfRTJmfPvedd617uef571rN9az6vq4m1/
biGFQqGK9n93sIn3SDZYADly8NYOigDOJtqpWcWP0ZusVfQlSIAps9gT2tPj
oPz/yCuzUvKfIGaVe09nzBi877VYBvNIeMXf+iJfzIfBxIRhYwGJojadiPBm
Hqw+ttf3+5JYb/D1aCJ7FCvHE7r7LEmobvG37V0wihPOi4b6NpD4Gmh+pVeB
i8fjngOCNSSWtcRFKG3nwNzeXUdrOYklitRybWs2lDkxD6krSFT6+r/S+tmJ
dT1vuFmXSCj4RS0TarOQuG9TllYwCb3AQzEBTh2oEMzsfX+fREH/67HkDW2I
Vq5pCKkkMR1T/vpXSjPKxQvyNv9N4mBPhKzRb424Ld/XU6s4jhnGXJlLOhM1
c/t6pJ3GERJ49o+onXWQMo5v/l40jt6mtdPii4XwU8hn1iXxkSfpV2OsIYTn
tLm38AUPWsrdDTLGQmx5sP6XZdcoQm+47briIMSPAPMVdkIuxBl6rofOCVGy
QDkxdjkXelMV3AxvIbyuJz65pc6BR6Zt4VlfIaItqdMNu9lYs3Dxp/irQtyV
rv7Yc2QE9kTc6vsi/02Z2ecY0izEZydrbjYUwn9tblO8cQcYQk2evo4QiiVr
tx0cacUFhppvzVohzn40XLHerhlBSTOKb0T5H8uHbap724BaxciQY1wBXtom
zpkYM8FbPOQZ2yDA6fvasq8bGVDtL+QEpAuwR+dk/7XaKhjEm45JhtXhFdTj
joh8KuLrPy2YYaJTMl6uRMShMvlf5k7hjWhRUrPLEuX8POE2Lr2yBe5xDAv1
o0J8VVgu8T23DcxucRN1NyEmfgwxgjM6oBbX+fahjyjXYfvMf3xYaD3VnRrq
J0ROpceeHuMuDN7fx24TcQmpnvOjXmTjjOIGMEyFsDYK+KDiwMHTIV+X0D+E
qDVYFfvFiItkKUmZ4q1CXAq1lN+mOoriAG3bw+uE6F1tk5UsxkNyZKVTsIQQ
YuHHY28P87B5dm3jtjEBHt64lhv2lo814u4Wd5pFXOSdo6bTxjA6src1KVuk
xWTNjtmW4cqsXp3J3TFwbm5pP+LwHJOsR59rRT2g0lG6XqwCd3/NXDrTwkPL
e/825slKbKyKFpRyRtGpMlHtdfIFbnu56mxdNIqp2q1y1IV0/Mhukri4lovO
Fvr4U1s6GJ4p6nw9Dnb/nSJWYEaHdXgobdcBNiimrn02ehV40iKmObykC+7z
9OLt7eXYnH2BoqXPggWtKMJQphzpVUWfNDw7kBcdbNgx9ww3p5TMhve2Qb9O
67dUWhmoiyPsDCqbsW4+qGgkuRjtbv6fzmxrBE3w57F613wUzc1KXK1mgjLJ
cLS7lQ2ygCIRZF+HJeabMs1EvXknOXLcyqEaHrVB8t2ZJCQTZiNGNOrglfaS
onuRxKzMbXNqERNE6wPVqyYkWmlzku67G5HvONvwUo3EnMcT0o/VDDvhTI2M
FAnxsHpGrHcbuIlvDWhiJKw1onTNb3UgvuvEwPYlJEwfygZpHmNB/qSZ53Yv
EvIxk1/uBI7gAW276VwgickPExvVnNkw+o9c1TCNxNOyPVE95hywj6vk/VVO
IkmLbqOmzcW7Eu/jrG8kzOVGmEHSo0Cmc1KewjjmG5xtTwhGMfQh9eXu0+P4
kx703qiVh2sqksR5Ue/d/BU6U/L4sF0YIh0by4ePupdKh1EG0Wt1yIhSysPK
LTd1jUxyCN1LcjmpH0bBCPdWMEnNI87yigg2l4t1S2k93P2FBNm985S7GBcU
96PpaabFxK6ig065ShzQkr/16t4rISpc49027mTDmTXb8lWzlNAMeBURcnAE
PrFz0raSpcTkIXfVy8tYKHNgDuu+zCOuFox0Nxh1wDlRIfUy/ymxxnBsqq6/
FbRJW/fZS7mEvk7SwCPLZhgXZGuUGWcTVraZA/qvG0D7ZOXS65JBPLNAc6Uh
EwOJV3Y5lqQQlv1XHmswGWCoNweFI4Hwp1vc2UivAmWz9R27n5GELkem5otl
BsFPaemWTKlDOt/iY8/hHIJtsMNPSbYe7Qc8aH7P8oiouAqVhEeNcPbtaac7
FxISGSG/O25ogY9ya/5S52Lifo+U2hGiDWX/PnB6Z0kJwZ3ZfWJbcQd8Ah1X
hVqVEo4XH6rrXWfBOEfVKFKvlDDdx7JJs+5Cu+tzTsOqfEK5ZjgrwZuN9H7H
2CTLPOJY+/MXE0c5cJ432ZHVlkso18dbXf1DxF0wkNuenU3Y5KQP31UbhfEZ
Axe39xmE1Ldbg/TFPAxUN9VsoKYSVdHvGRdHeGA8XiDDVkwkFq738N3A5MN4
f6HOrzoqUT79tOL84zFsVIo8PmNTjZ8PQqiHosvgw5++XrauDjZpy2KpMc8h
59TXtSeXCXXz+QXR+hWwuRDhuXpHI47cjhs4ea8S62oc/5Fubgbz1QRzx90X
+O42w5d3a8MKe32XsK10RL2ZZi+KFHHwNuvrDqEjLe3ps1N2LFy3efdT6jId
s0qfmyYvjyC5LP98mHkFqgW/e1s4siFo63zzZKAcPtN2/dXgIHp+PG9ItRzn
Z85n1qtzMdD7cCmx7DkGn7mq/bV0FOITfI3OlDI0Xn3NDhX9JYGDxY2ZwmJk
3hNMqL0TcUmb0rznm48lW/ZJ7E/ng9GtajOYkI3/AnTAOtY=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {0.525080473390688, 0.8505676754346068}, 2}], 
           0.014223134787731323`]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {1.1789353509653082`, 0.4949069151169926}, 3}], 
           0.014223134787731323`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {0.534928683377531, 1.1794789814463755`}, 1}], 
           0.014223134787731323`]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {0.17926829403654065`, 0.5255315022391311}, 4}], 
           0.014223134787731323`]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           3, {0.8500370668846382, 0.5051441358382303}, 1}], 
           0.014223134787731323`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           3, {0.494376677543653, -0.14880334336901638`}, 4}], 
           0.014223134787731323`]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           4, {-0.14930903842985485`, 0.5353845469931534}, 2}], 
           0.014223134787731323`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           4, {0.5045458391447699, 0.17972378667554975`}, 3}], 
           0.014223134787731323`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.014223134787731323], DiskBox[2, 0.014223134787731323], 
         DiskBox[3, 0.014223134787731323], 
         DiskBox[4, 0.014223134787731323]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None,
  ImageSize->{250.64169311523438`, Automatic}]], "Output",
 CellChangeTimes->{{3.894564315017811*^9, 3.894564336847776*^9}, 
   3.894564387408267*^9, 3.894564417561057*^9, {3.894564459207333*^9, 
   3.894564468247691*^9}},
 CellLabel->
  "Out[298]=",ExpressionUUID->"38a1e057-1b83-4757-bff6-04ca6a5409df"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CayleyGraphBuilder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardGate", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"PhaseGate", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{
       TemplateBox[<|
        "color" -> RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]|>,
        "RGBColorSwatchTemplate"], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       TemplateBox[<|"color" -> RGBColor[0.24720000000000014`, 0.24, 0.6]|>,
        "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.894564396837944*^9, 3.8945644544824467`*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"352854e6-ce57-4d49-883c-7245e0295f7d"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0}, {0, 
       1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{1, 0}, {0, 
         Complex[0, 1]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{1, 0}, {
       0, -1}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 1}, {1, 
       0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 1}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1]}, {1, 0}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
          Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {-1, 
       0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1]}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, -1}, {1, 
       0}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
         Complex[0, -1], 0}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1]}, {-1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, -1}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1]}, {1, 0}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[0, 1], 0}, {0, 
         Complex[0, -1]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
         Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1]}, {
         Complex[0, -1], 0}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {-1,
        0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1]}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0}, {0, 1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{-2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
         Complex[0, -1], 0}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, -1]}, {-1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-1, 0}, {0, 
       1}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, -1]}, {
         Complex[0, -1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, 1], 0}, {0, -1}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-1, 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0}, {0, 1}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
         Complex[0, -1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
         Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
          Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0}, {0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, -1], 0}, {0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
         Complex[0, -1], 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}}, {CompressedData["
1:eJwBEQPu/CFib1JiAgAAAIABAAACAAAAAQIBAwQFBAYCAQIEAwcDCAUEBQkG
CgYLBwMHDAgNCA4JDwkQCgYKEQsSCwIMEwwUDQgNFQ4WDgEPCQ8XEBgQGREa
ERsSCxIcEwwTHRQeFB8VIBUhFg4WIhcdFyMYEBgkGSUZBRoRGiYbJxsoHCkc
Kh0XHSseFB4sHy0fByAVIC4hLyEwIjEiMiMuIzMkNCQ1JRklNiYrJjcnGyc4
KDkoCikcKToqOyo8KyYrPSw+LD8tHy1ALiMuQS8hL0IwQzANMSIxRDJFMkYz
RDMPNCQ0RzVINUk2SjZLN0c3TDhNOE45KDlPOj06UDsqO1E8UjwSPTo9Ez4s
PlM/VD9VQFZAV0FTQVhCWUJaQzBDW0QzRFxFMkVdRl5GFkc3R19INUhgSV1J
GEo2SmFLYktjTGFMGk04TWROZU5mT2dPaFBkUGlRVVFqUjxSa1NBU2xUP1Rt
VVFVHlZAVm5Xb1dwWG5YIFlCWXFaclpzW3RbdVxxXHZdSV13XkZeeF9sX3lg
emB7YUxhfGJLYn1jeGMlZFBkfmVOZX9mfWYnZ09ngGiBaIJpgGkpaoNqhGtw
a4VsX2yGbYdtiG5YbolvV2+KcGtwLXFccYtyWnKMc4pzL3RbdI11jnWPdo12
MXeQd5F4Y3iSeYt5NHpgepN7jHuUfJN8lX1mfZZ+hn6Xf4h/mIBpgJmBaIGa
gpKCOYNqg5uEmoQ7hY+FnIZ+hj6HbYediH+InomdiZ+Kc4qgi3mLoYx7jKKN
do2jjnWOpI+Fj0OQd5ClkaSRRZKCkqaTfJOnlKOUSJWllUqWqJapl6eXTZii
mKqZnpmrmoSarJufm62cppxSnYmdrp6ZnlSfm59WoK+gsKGuoVmimKKxo5Sj
sqSRpLOllaW0ppymXqeXp7Wolqi2qbOpYqq0qmWrtqtnrLCst62xrbiuoa65
r6CvurCssG+xrbFysrqydLOps7u0qrS8tbm1erartr23u7eBuL24g7m1uYe6
srq+u7e7jry+vJC9uL2/vry+wL/Av6jAv8Cv4SMjuw==
       "], Null, CompressedData["
1:eJxTTMoPSmJkYGBoABKMTKNwICEAAlMEaQ==
       "]}, {
      EdgeStyle -> {
        DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
            
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {
             Complex[0, -1], 0}}, {{0, 1}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 1}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, 1]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {1, 0}}, {{0, -1}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0}, {0, 
           1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0}, {0, -1}}, 1] -> {
          
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-1, 0}, {0, 
           1}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {-1, 0}}, {{0, -1}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0}, {
           0, -1}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, -1}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {1, 0}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, -1}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{-1, 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, 1}, {-1, 
           0}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {-1, 
            0}}, {{-2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {-1, 0}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 1}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{0, 1}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-1, 0}, {
           0, -1}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {-1, 0}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, -1]}}, {{-1, 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, -1]}}, {{1, 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, {{0, 
             Complex[0, 1]}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {
             Complex[0, 1], 0}}, {{0, 1}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, -1}}, {{1, 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {1, 0}}, {{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, {{
             Complex[0, 1], 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, {{0, 
             Complex[0, 1]}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, -1}, {
             Complex[0, 1], 0}}, {{0, -1}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 1}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {-1, 
            0}}, {{-2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {1, 0}}, {{0, 1}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, {{0, 
             Complex[0, -1]}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, -1}, {
             Complex[0, -1], 0}}, {{0, -1}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, {{
             Complex[0, -1], 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, -1}}, {{-1, 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, 1}, {1, 
           0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{0, -1}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {1, 0}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{1, 0}, {
            0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, -1]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^
              Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {1, 0}}, {{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, -1}, {1, 
           0}}, {{2^
             Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{1, 0}, {0, 1}}, {{1, 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, -1]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, -1}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, -1}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, -1}, {-1, 
           0}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-1, 0}, {0, 1}}, {{-1, 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, -1}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 1}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{0, 1}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 1}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0}, {0, 1}}, 1] -> {
          
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, 1]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {-1, 0}}, 1] -> {
          
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-1, 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, 1]}}, {{-1, 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, {{
             Complex[0, 1], 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, {{0, 
             Complex[0, -1]}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, 1]}}, {{1, 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^
              Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, 1}, {-1, 0}}, {{0, 1}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-1, 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{1, 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, {{
             Complex[0, -1], 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw8m3c41f///80zODh7OGaDlKJCu9e90tDAG6lIA5UkEU0jqSiJ0pBVRCVR
ItoklCjJbNh7ZBbZfV+f6/pdP/+4Hp6vcZ7jcb/f7i407Q9Z7JGSkJB4y5CQ
+N933W2M5HgdOYSkCK1O3xZCzy9xWc8FCkp3srWX8QVQRvHItp1U6O7wvfPQ
hof1S4zyAr4oIKNx7mLdbXwMzt42e8NaLurVMuSnePIhV6r4kBdBwXiy5uWK
21wkeNb6qv6QBOHJZ85/y0TtP9tczXsK6KTeMPD9KACjbqR7S54A9RlGcvbJ
XLhtFepWvKVCf2P2Can/WNhuENOjPucfIQywVpog3882OHD9c6Akpn053JGz
n46tC7+Evt/DQiZVLj6rn4e3z2fYStoxMTRy9aNFnjIiAmZvt9AXoPDW19jI
hSwEruv4MSwUY8m50c2/N/MQrfToUOxuBZhHesrPu86AvhnlcZFnF7Fy+TFf
z2QOggZkhpaq0nDYRXf420IK+NLWm+t1RomYowJ526MykGCW1/juZePTQQnj
Hx0snChy2qq6mVyPaoY4ea4q8jas7/ey4uL6p9jA53YMuCru7AlWVcfhpXUT
d49z4Hp3cq/gvQAZoY4ftGwFyH+712SFJAdZZ9c43HpHxbtDrZ5RE1Skhlo1
FQYpYJ1Lg8Ztn3pCnbDlxmsr4ff7NNuzc8n5loYfDYui4rXugszH8SNEZc1N
6x1/hgjX4MMfvsSMEHXqaQ03UxiI7DNWonqxsY3zRE27jY7HM/o/GhdyYKVm
7xIfwMXWZOdHx8OFeG83/ai3qQocGq8FhJfy0Ro2QO9/LI8B19CCjdM0YMrd
/2l3mCKeyoncj77loeS15iMXOxEM299kU75y8DJdO+jfYSksfJGV1ZEhj1Nt
nofnZ1DxNDPbdNo5KbQfjtgQ9Z2FP4t9FFj0HkLPcFFLbYgsJL7JVEIllVh1
tjy5ZIgFa/f6n0y2EsBzt752TArn48NWHqyWwtKIOW+d3JsJ46ldKRo+f4kP
9l6d/k4s0Ma17N2duXj0PNRUb5ksjFtpFR9yeTiUFrL/uB0L19WS7n0JYON7
dXAtO1qIH1K7pVtqxZjW/bNr5wkhrPbNzJqbJoDp9a1/TVjqOLgE7zPiRXBY
5htYL8/C0INw+2+5alhZbHT/c6oMRqhtf2LeaUBlqfX9tm4WfBN+XM5SFOBH
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
nLXcJQL8D+0K5g8=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01772671749996839], 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           1, {3.106993651633362, 5.889253394787222}, 2}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{1, 3}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           2, {2.980686998916953, 6.0382310455419494`}, 1}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{2, 4}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           3, {2.765776680091295, 4.6496466247052926`}, 7}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{3, 8}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           4, {4.393647537262297, 5.821138800008731}, 5}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{4, 6}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           5, {4.402306443634724, 5.379355100504436}, 4}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{5, 9}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           6, {3.032941210740667, 4.766346158763341}, 10}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{6, 11}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           7, {2.3872832247420908`, 4.876593524156966}, 3}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{7, 12}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           8, {4.103511165104381, 5.822204634671903}, 13}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{8, 14}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           9, {6.011388543166358, 4.71303973068972}, 15}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{9, 16}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           10, {2.7609637431041216`, 4.718852963051635}, 6}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{10, 17}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{11, 2}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           11, {1.472522034420424, 4.949270211888267}, 18}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           12, {2.6683856809598216`, 3.1125276877343735`}, 19}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{12, 20}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           13, {3.951998185927893, 5.610644647730335}, 8}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{13, 21}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{14, 1}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           14, {4.487192271940126, 7.158288687490841}, 22}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           15, {5.727542310347898, 4.760580371604716}, 9}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{15, 23}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           16, {7.353270722131446, 5.266054367279598}, 24}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{16, 25}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           17, {4.31107573598255, 3.4487976186848552`}, 26}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{17, 27}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           18, {1.3342461673420272`, 5.307998899443702}, 11}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{18, 28}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           19, {2.5372008376711914`, 2.8418692874700313`}, 12}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{19, 29}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           20, {1.8035315283337714`, 1.9908382813492176`}, 30}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{20, 31}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           21, {4.814108145528895, 3.8614167980711733`}, 32}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{21, 33}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           22, {4.686752969755776, 6.831941464941445}, 14}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{22, 34}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           23, {4.663239480829419, 3.078306533109423}, 29}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{23, 35}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           24, {7.199974006948322, 4.935702405873707}, 16}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{24, 36}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{25, 5}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           25, {5.60811483822828, 6.00700072974538}, 37}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           26, {4.112819164717034, 3.0940804035905747`}, 17}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{26, 38}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           27, {3.3512536488068285`, 3.4045872206544603`}, 39}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{27, 40}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           28, {0.924232675408447, 3.3641607273464533`}, 41}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{28, 42}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           29, {4.467621041389662, 3.4184185360348005`}, 23}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{29, 43}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           30, {1.434154671925513, 2.001612838000802}, 20}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{30, 44}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{31, 7}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           31, {1.4083634887941399`, 3.9465458333680057`}, 45}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           32, {4.406129304737994, 3.854822465754487}, 21}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{32, 46}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           33, {5.324301604360464, 4.817559686706582}, 47}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{33, 48}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           34, {6.7153493191175535`, 6.732388485088358}, 49}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{34, 50}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           35, {5.537346912685134, 2.958946862099135}, 46}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{35, 51}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           36, {8.084185026992438, 3.1414738671380253`}, 52}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{36, 53}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           37, {5.773285629116241, 6.173249282005567}, 25}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{37, 54}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           38, {4.418606419867839, 2.1312679999789887`}, 43}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{38, 55}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           39, {3.1114027570976512`, 3.251659603811127}, 27}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{39, 56}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{40, 10}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           40, {1.807143979916989, 4.702955797812493}, 57}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           41, {0.5297087561767594, 3.22495436764235}, 28}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{41, 58}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           42, {0.1726022850441009, 4.051540371496425}, 59}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{42, 60}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           43, {4.4193421062789495`, 2.483271866146706}, 38}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{43, 61}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           44, {3.0284854556194567`, 0.6922686635132081}, 62}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{44, 63}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           45, {1.660713486514087, 3.9902803261371704`}, 31}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{45, 64}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           46, {5.272257385397704, 3.1568374887500936`}, 35}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{46, 65}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           47, {5.06441841594542, 4.655202748084268}, 33}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{47, 66}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{48, 13}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           48, {4.360915056076711, 6.6597994482969325`}, 67}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           49, {6.400242472089891, 6.462788146198992}, 34}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{49, 68}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           50, {6.383447286444843, 7.714162143159557}, 69}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{50, 70}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{51, 15}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           51, {6.627885671958783, 4.776776352522001}, 68}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           52, {7.677968415405501, 3.2663314834680204`}, 36}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{52, 71}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           53, {8.474175373216749, 4.044331250065319}, 72}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{53, 73}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           54, {6.265483861079723, 5.12746721846163}, 74}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{54, 75}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           55, {6.496510032375392, 2.201572706607301}, 71}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{55, 76}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           56, {3.986659739992845, 1.4797373487024912`}, 77}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{56, 78}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           57, {2.0490068342132495`, 4.957467484601265}, 40}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{57, 79}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           58, {2.2690549751312155`, 2.2735473590475674`}, 61}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{58, 80}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           59, {-0.10967117442292394`, 4.072237249199657}, 42}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{59, 81}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{60, 18}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           60, {0.4957801446408617, 6.144940947137619}, 82}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{61, 19}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           61, {2.3192947613794668`, 1.9352147571639267`}, 58}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           62, {2.929237755598557, 0.2836456848289166}, 44}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{62, 83}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           63, {2.146043868776791, 0.6253021662058472}, 84}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{63, 85}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           64, {2.484177583653103, 3.2118489490124054`}, 86}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{64, 87}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           65, {4.799613520237362, 1.1519735953298595`}, 83}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{65, 88}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           66, {6.705166395947398, 3.255215248603705}, 89}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{66, 90}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           67, {4.7149293749055925`, 6.721451103152537}, 48}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{67, 91}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           68, {6.891116785041886, 4.546803911007486}, 51}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{68, 92}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           69, {6.262467919220289, 7.451754357992011}, 50}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{69, 93}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{70, 22}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           70, {4.273973218018547, 7.794309473234552}, 94}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           71, {6.416375645349498, 1.8956049460835678`}, 55}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{71, 95}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           72, {8.195834373434085, 4.07400062992202}, 53}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{72, 96}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{73, 24}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           73, {7.583407445954577, 5.957146827947953}, 93}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           74, {5.893553164487688, 4.9201931514575685`}, 54}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{74, 97}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           75, {4.59653524855095, 5.904101488086927}, 98}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{75, 99}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{76, 26}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           76, {6.043944252423588, 3.237821862843885}, 97}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           77, {3.6451272696418906`, 1.4338564379859546`}, 56}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{77, 100}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           78, {4.454036911159197, 2.477844736606348}, 101}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{78, 102}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           79, {1.0682360676813474`, 4.083462573799781}, 103}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{79, 104}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           80, {2.632559884450753, 1.1855634119453522`}, 100}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{80, 105}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           81, {0.8050923041433885, 2.1482139549323436`}, 85}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{81, 106}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           82, {0.8531992113422552, 5.964797202936019}, 60}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{82, 107}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           83, {4.475983252444592, 1.210457815755638}, 65}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{83, 108}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           84, {2.01400851012388, 0.35673309438958817`}, 63}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{84, 109}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{85, 30}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           85, {0.44764307983430396`, 1.948861319326843}, 81}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           86, {2.1018958133039574`, 2.989980517921911}, 64}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{86, 110}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           87, {2.1468586696251837`, 5.136723735798658}, 111}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{87, 112}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{88, 32}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           88, {3.9254087915437306`, 1.924057650774927}, 110}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           89, {6.441495321218948, 2.9825911501643385`}, 66}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{89, 113}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           90, {5.649515884946091, 3.3176005751555753`}, 114}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{90, 115}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           91, {5.926372463478717, 7.329619608711593}, 116}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{91, 117}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           92, {7.853343387136666, 3.8969535529755497`}, 113}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{92, 118}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           93, {7.938627262564152, 6.157136869187344}, 73}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{93, 119}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           94, {4.2826597495333445`, 8.188546155984962}, 70}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{94, 120}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           95, {6.090045326296745, 0.6656243785305245}, 108}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{95, 121}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           96, {7.817201611961717, 1.9957767973671705`}, 122}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{96, 123}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           97, {6.236438006297761, 3.0143311903821615`}, 76}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{97, 124}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           98, {4.487684724447417, 6.173340234343787}, 75}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{98, 125}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{99, 37}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           99, {3.9795973297294616`, 6.95430494013854}, 120}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           100, {2.436054378419162, 0.8291092463280331}, 80}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{100, 126}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           101, {4.288227372926779, 2.2653253336075236`}, 78}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{101, 127}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{102, 39}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           102, {3.5828957911028834`, 4.257999993717344}, 125}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           103, {0.6682016052438547, 4.103509855335099}, 79}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{103, 128}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           104, {0.9135079938798922, 6.020436047020481}, 129}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{104, 130}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{105, 41}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           105, {0.9367939693136013, 2.14120119638049}, 128}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           106, {1.2074633153776027`, 3.1655137737673607`}, 131}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{106, 132}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           107, {1.6849346077643417`, 5.975706081694345}, 112}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{107, 133}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           108, {5.88575436270168, 1.0453387075365939`}, 95}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{108, 134}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           109, {4.153734745194619, 0.22341390947187278`}, 135}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{109, 136}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           110, {3.8074337827799143`, 2.1892886931479576`}, 88}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{110, 137}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           111, {2.325837053018677, 4.898917198514919}, 87}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{111, 138}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{112, 45}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           112, {1.3008061511115374`, 6.006209534024257}, 107}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           113, {7.436776167182789, 3.9009422856455007`}, 92}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{113, 139}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           114, {5.384011218275494, 3.2845895212143454`}, 90}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{114, 140}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{115, 47}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           115, {4.101481345101204, 4.607967127201288}, 138}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           116, {5.718930530995664, 6.967036464127249}, 91}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{116, 141}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           117, {4.122633302403877, 7.887635251286967}, 142}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{117, 143}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{118, 49}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           118, {7.290579712129123, 5.84205140697876}, 141}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           119, {6.9364587496890655`, 6.109804072736114}, 144}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{119, 145}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           120, {4.1461364615843825`, 7.299837573730778}, 99}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{120, 146}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{121, 52}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           121, {7.400807273162778, 2.0328756530398753`}, 139}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           122, {7.463057446970143, 2.185428237819047}, 96}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{122, 147}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           123, {7.020008169645972, 2.8082807970068497`}, 140}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{123, 148}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           124, {6.979604665013657, 2.221099027427415}, 147}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{124, 149}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           125, {3.9887359815674737`, 4.262406949867651}, 102}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{125, 150}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           126, {4.244996219984143, 0.29685564188175834`}, 134}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{126, 151}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           127, {3.932213783790784, 0.8847506608622939}, 136}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{127, 152}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           128, {1.1165238600243366`, 2.227427935930398}, 105}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{128, 153}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           129, {1.1047974363426951`, 6.00493692882483}, 104}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{129, 154}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{130, 57}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           130, {1.9193918871493993`, 6.81278387061228}, 146}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           131, {1.0506248548426236`, 2.8308179136084815`}, 106}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{131, 155}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{132, 59}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           132, {0.308336353136883, 4.964753987157774}, 154}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           133, {2.8650922516630506`, 7.723742357806061}, 143}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{133, 156}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{134, 62}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           134, {4.200773335495463, 0.13964541521852744`}, 126}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           135, {4.136469537896126, -0.1709171664375552}, 109}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{135, 157}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           136, {3.726110740400243, 1.2081526200133141`}, 127}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{136, 158}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           137, {4.516798882401797, 1.0624680351256575`}, 157}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{137, 159}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           138, {4.315023099240033, 4.96722409719637}, 115}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{138, 160}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           139, {7.55894689311368, 1.9842716217403922`}, 121}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{139, 161}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           140, {6.865739319492095, 3.152314568771599}, 123}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{140, 162}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           141, {7.489800487169169, 5.950104624186122}, 118}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{141, 163}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           142, {4.155106380076669, 8.035299123073724}, 117}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{142, 164}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{143, 67}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           143, {2.959202693279489, 7.324384449573735}, 133}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           144, {6.568425337570232, 6.1243585652737575`}, 119}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{144, 165}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{145, 69}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           145, {5.342330397333743, 7.4273952552367435`}, 164}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           146, {2.2217271883821765`, 6.545403415945012}, 130}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{146, 166}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           147, {6.603148091460458, 2.2631828636342384`}, 124}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{147, 167}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{148, 72}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           148, {7.424772914496592, 4.759419502616346}, 163}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{149, 74}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           149, {6.6929592307795875`, 4.163655026757918}, 165}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           150, {3.147339389362507, 4.950600519767697}, 168}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{150, 169}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{151, 77}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           151, {5.3331821868258205`, 0.929340162905723}, 167}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           152, {5.285748263965032, 2.1730728312673424`}, 162}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{152, 170}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           153, {2.033988006023162, 1.579439002631846}, 158}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{153, 171}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           154, {0.7133095756691578, 4.839428841811975}, 132}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{154, 172}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           155, {2.8153497200250963`, 2.0789117508193193`}, 159}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{155, 173}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{156, 82}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           156, {2.0859609012858935`, 7.745543049709453}, 166}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           157, {4.322639021952219, 0.7062423860891196}, 137}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{157, 174}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{158, 84}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           158, {1.7204445051945476`, 1.3153341623707113`}, 153}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{159, 86}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           159, {2.6514358653037915`, 1.905333471460249}, 155}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           160, {3.9755914312162197`, 5.972082757096645}, 175}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{160, 176}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{161, 89}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           161, {6.63716401574033, 1.0865990570856978`}, 174}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           162, {5.4140915857705485`, 2.0289411130720367`}, 152}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{162, 177}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           163, {7.819347164578028, 4.895540866675412}, 148}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{163, 178}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           164, {5.447845965729235, 7.838041553125211}, 145}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{164, 179}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           165, {6.932281233488518, 4.202644679669444}, 149}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{165, 180}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{166, 94}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           166, {2.215948175687247, 7.453926120053978}, 156}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           167, {5.432993033448205, 0.54003269055055}, 151}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{167, 181}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           168, {2.8741179620888775`, 5.138600174766427}, 150}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{168, 182}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{169, 98}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           169, {3.588521899294652, 6.967969918054858}, 179}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{170, 101}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           170, {5.615405316329153, 3.428244786378947}, 180}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{171, 103}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           171, {1.5719446369288805`, 3.505650232602845}, 182}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           172, {1.9706594213812592`, 6.229932951026287}, 176}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{172, 183}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           173, {3.9988032768910453`, 2.687985791691015}, 177}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{173, 184}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           174, {6.3409119759440635`, 1.3660705595208011`}, 161}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{174, 185}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           175, {3.9773950213581792`, 5.62077643968233}, 160}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{175, 186}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{176, 111}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           176, {1.8871079354000266`, 5.920613587172097}, 172}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{177, 114}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           177, {4.004028390141699, 2.249062500866153}, 173}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{178, 116}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           178, {6.113689608639572, 5.853615230749059}, 186}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           179, {3.915306264604868, 6.913411841674767}, 169}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{179, 187}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           180, {6.002379745677612, 3.2087269192099854`}, 170}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{180, 188}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{181, 122}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           181, {6.3004924070090205`, 0.34144448665239696`}, 185}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           182, {1.842535224509929, 3.278406910948813}, 171}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{182, 189}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{183, 129}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           183, {2.3044989965925624`, 7.457028151064615}, 187}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{184, 131}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           184, {2.4127445464056696`, 3.375007841758308}, 189}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{185, 135}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           185, {6.131946887602325, 0.6049917060894895}, 181}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           186, {6.057487737558238, 6.187445791838247}, 178}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{186, 190}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{187, 142}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           187, {2.516002815717223, 7.082138170969258}, 183}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{188, 144}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           188, {5.718456009338537, 4.9948226029958995`}, 190}], 
           0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           189, {2.695499020621422, 3.320516770766904}, 184}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{189, 191}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           190, {5.852140969234819, 5.260814810567898}, 188}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{190, 192}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{191, 168}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           191, {3.7483538115002255`, 5.018513946801747}, 192}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          ArrowBox[{192, 175}, 0.0594207467043506]}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          ArrowBox[BezierCurveBox[{
           192, {3.947569788775328, 4.683142367142434}, 191}], 
           0.0594207467043506]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0594207467043506], DiskBox[2, 0.0594207467043506], 
         DiskBox[3, 0.0594207467043506], DiskBox[4, 0.0594207467043506], 
         DiskBox[5, 0.0594207467043506], DiskBox[6, 0.0594207467043506], 
         DiskBox[7, 0.0594207467043506], DiskBox[8, 0.0594207467043506], 
         DiskBox[9, 0.0594207467043506], DiskBox[10, 0.0594207467043506], 
         DiskBox[11, 0.0594207467043506], DiskBox[12, 0.0594207467043506], 
         DiskBox[13, 0.0594207467043506], DiskBox[14, 0.0594207467043506], 
         DiskBox[15, 0.0594207467043506], DiskBox[16, 0.0594207467043506], 
         DiskBox[17, 0.0594207467043506], DiskBox[18, 0.0594207467043506], 
         DiskBox[19, 0.0594207467043506], DiskBox[20, 0.0594207467043506], 
         DiskBox[21, 0.0594207467043506], DiskBox[22, 0.0594207467043506], 
         DiskBox[23, 0.0594207467043506], DiskBox[24, 0.0594207467043506], 
         DiskBox[25, 0.0594207467043506], DiskBox[26, 0.0594207467043506], 
         DiskBox[27, 0.0594207467043506], DiskBox[28, 0.0594207467043506], 
         DiskBox[29, 0.0594207467043506], DiskBox[30, 0.0594207467043506], 
         DiskBox[31, 0.0594207467043506], DiskBox[32, 0.0594207467043506], 
         DiskBox[33, 0.0594207467043506], DiskBox[34, 0.0594207467043506], 
         DiskBox[35, 0.0594207467043506], DiskBox[36, 0.0594207467043506], 
         DiskBox[37, 0.0594207467043506], DiskBox[38, 0.0594207467043506], 
         DiskBox[39, 0.0594207467043506], DiskBox[40, 0.0594207467043506], 
         DiskBox[41, 0.0594207467043506], DiskBox[42, 0.0594207467043506], 
         DiskBox[43, 0.0594207467043506], DiskBox[44, 0.0594207467043506], 
         DiskBox[45, 0.0594207467043506], DiskBox[46, 0.0594207467043506], 
         DiskBox[47, 0.0594207467043506], DiskBox[48, 0.0594207467043506], 
         DiskBox[49, 0.0594207467043506], DiskBox[50, 0.0594207467043506], 
         DiskBox[51, 0.0594207467043506], DiskBox[52, 0.0594207467043506], 
         DiskBox[53, 0.0594207467043506], DiskBox[54, 0.0594207467043506], 
         DiskBox[55, 0.0594207467043506], DiskBox[56, 0.0594207467043506], 
         DiskBox[57, 0.0594207467043506], DiskBox[58, 0.0594207467043506], 
         DiskBox[59, 0.0594207467043506], DiskBox[60, 0.0594207467043506], 
         DiskBox[61, 0.0594207467043506], DiskBox[62, 0.0594207467043506], 
         DiskBox[63, 0.0594207467043506], DiskBox[64, 0.0594207467043506], 
         DiskBox[65, 0.0594207467043506], DiskBox[66, 0.0594207467043506], 
         DiskBox[67, 0.0594207467043506], DiskBox[68, 0.0594207467043506], 
         DiskBox[69, 0.0594207467043506], DiskBox[70, 0.0594207467043506], 
         DiskBox[71, 0.0594207467043506], DiskBox[72, 0.0594207467043506], 
         DiskBox[73, 0.0594207467043506], DiskBox[74, 0.0594207467043506], 
         DiskBox[75, 0.0594207467043506], DiskBox[76, 0.0594207467043506], 
         DiskBox[77, 0.0594207467043506], DiskBox[78, 0.0594207467043506], 
         DiskBox[79, 0.0594207467043506], DiskBox[80, 0.0594207467043506], 
         DiskBox[81, 0.0594207467043506], DiskBox[82, 0.0594207467043506], 
         DiskBox[83, 0.0594207467043506], DiskBox[84, 0.0594207467043506], 
         DiskBox[85, 0.0594207467043506], DiskBox[86, 0.0594207467043506], 
         DiskBox[87, 0.0594207467043506], DiskBox[88, 0.0594207467043506], 
         DiskBox[89, 0.0594207467043506], DiskBox[90, 0.0594207467043506], 
         DiskBox[91, 0.0594207467043506], DiskBox[92, 0.0594207467043506], 
         DiskBox[93, 0.0594207467043506], DiskBox[94, 0.0594207467043506], 
         DiskBox[95, 0.0594207467043506], DiskBox[96, 0.0594207467043506], 
         DiskBox[97, 0.0594207467043506], DiskBox[98, 0.0594207467043506], 
         DiskBox[99, 0.0594207467043506], DiskBox[100, 0.0594207467043506], 
         DiskBox[101, 0.0594207467043506], DiskBox[102, 0.0594207467043506], 
         DiskBox[103, 0.0594207467043506], DiskBox[104, 0.0594207467043506], 
         DiskBox[105, 0.0594207467043506], DiskBox[106, 0.0594207467043506], 
         DiskBox[107, 0.0594207467043506], DiskBox[108, 0.0594207467043506], 
         DiskBox[109, 0.0594207467043506], DiskBox[110, 0.0594207467043506], 
         DiskBox[111, 0.0594207467043506], DiskBox[112, 0.0594207467043506], 
         DiskBox[113, 0.0594207467043506], DiskBox[114, 0.0594207467043506], 
         DiskBox[115, 0.0594207467043506], DiskBox[116, 0.0594207467043506], 
         DiskBox[117, 0.0594207467043506], DiskBox[118, 0.0594207467043506], 
         DiskBox[119, 0.0594207467043506], DiskBox[120, 0.0594207467043506], 
         DiskBox[121, 0.0594207467043506], DiskBox[122, 0.0594207467043506], 
         DiskBox[123, 0.0594207467043506], DiskBox[124, 0.0594207467043506], 
         DiskBox[125, 0.0594207467043506], DiskBox[126, 0.0594207467043506], 
         DiskBox[127, 0.0594207467043506], DiskBox[128, 0.0594207467043506], 
         DiskBox[129, 0.0594207467043506], DiskBox[130, 0.0594207467043506], 
         DiskBox[131, 0.0594207467043506], DiskBox[132, 0.0594207467043506], 
         DiskBox[133, 0.0594207467043506], DiskBox[134, 0.0594207467043506], 
         DiskBox[135, 0.0594207467043506], DiskBox[136, 0.0594207467043506], 
         DiskBox[137, 0.0594207467043506], DiskBox[138, 0.0594207467043506], 
         DiskBox[139, 0.0594207467043506], DiskBox[140, 0.0594207467043506], 
         DiskBox[141, 0.0594207467043506], DiskBox[142, 0.0594207467043506], 
         DiskBox[143, 0.0594207467043506], DiskBox[144, 0.0594207467043506], 
         DiskBox[145, 0.0594207467043506], DiskBox[146, 0.0594207467043506], 
         DiskBox[147, 0.0594207467043506], DiskBox[148, 0.0594207467043506], 
         DiskBox[149, 0.0594207467043506], DiskBox[150, 0.0594207467043506], 
         DiskBox[151, 0.0594207467043506], DiskBox[152, 0.0594207467043506], 
         DiskBox[153, 0.0594207467043506], DiskBox[154, 0.0594207467043506], 
         DiskBox[155, 0.0594207467043506], DiskBox[156, 0.0594207467043506], 
         DiskBox[157, 0.0594207467043506], DiskBox[158, 0.0594207467043506], 
         DiskBox[159, 0.0594207467043506], DiskBox[160, 0.0594207467043506], 
         DiskBox[161, 0.0594207467043506], DiskBox[162, 0.0594207467043506], 
         DiskBox[163, 0.0594207467043506], DiskBox[164, 0.0594207467043506], 
         DiskBox[165, 0.0594207467043506], DiskBox[166, 0.0594207467043506], 
         DiskBox[167, 0.0594207467043506], DiskBox[168, 0.0594207467043506], 
         DiskBox[169, 0.0594207467043506], DiskBox[170, 0.0594207467043506], 
         DiskBox[171, 0.0594207467043506], DiskBox[172, 0.0594207467043506], 
         DiskBox[173, 0.0594207467043506], DiskBox[174, 0.0594207467043506], 
         DiskBox[175, 0.0594207467043506], DiskBox[176, 0.0594207467043506], 
         DiskBox[177, 0.0594207467043506], DiskBox[178, 0.0594207467043506], 
         DiskBox[179, 0.0594207467043506], DiskBox[180, 0.0594207467043506], 
         DiskBox[181, 0.0594207467043506], DiskBox[182, 0.0594207467043506], 
         DiskBox[183, 0.0594207467043506], DiskBox[184, 0.0594207467043506], 
         DiskBox[185, 0.0594207467043506], DiskBox[186, 0.0594207467043506], 
         DiskBox[187, 0.0594207467043506], DiskBox[188, 0.0594207467043506], 
         DiskBox[189, 0.0594207467043506], DiskBox[190, 0.0594207467043506], 
         DiskBox[191, 0.0594207467043506], 
         DiskBox[192, 0.0594207467043506]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.894564455272914*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"70296ccb-6aa7-476e-bbfe-22e31c00a1c0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Legended", "[", 
  RowBox[{
   RowBox[{"CayleyGraphBuilder", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"HadamardGate", "[", 
        RowBox[{"2", ",", "1"}], "]"}], ",", 
       RowBox[{"PhaseGate", "[", 
        RowBox[{"2", ",", "2"}], "]"}], ",", 
       RowBox[{"CNOTGate", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Directive", "[", 
        RowBox[{
         TemplateBox[<|"color" -> RGBColor[0.8901960784313725, 0.25, 0]|>,
          "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", "Thick"}], "]"}], ",", 
       RowBox[{"Directive", "[", 
        RowBox[{
         TemplateBox[<|"color" -> RGBColor[0.24720000000000014`, 0.63, 0.6]|>,
          
          "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}]}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"LineLegend", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Directive", "[", 
         RowBox[{
          TemplateBox[<|"color" -> RGBColor[0.8901960784313725, 0.25, 0]|>,
           "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"Black", ",", "Thick"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{
          TemplateBox[<|"color" -> RGBColor[0.24720000000000014`, 0.63, 0.6]|>,
           "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(H\), \(1\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(2\)]\)\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(C\), \(2, 1\)]\)\>\""}], "}"}]}], "]"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.8945647134778767`*^9, {3.8945651902231407`*^9, 3.894565238420989*^9}, {
   3.894567172480198*^9, 3.894567176964754*^9}, {3.894567207379943*^9, 
   3.894567314799312*^9}},
 CellLabel->
  "In[445]:=",ExpressionUUID->"38e9696c-fc99-4dab-b445-fd047e4215b0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics", 
     DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 
           1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 
            1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 
           0, 0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, 1, 
           0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {
           0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0,
            0, -1, 0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0,
             1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0,
            0, 1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, -1, 
           0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 
           0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
            2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
            0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}}, {{{1, 2}, {1, 3}, {1, 4}, {5, 3}, {5, 6}, {
           5, 7}, {8, 9}, {8, 7}, {8, 2}, {2, 1}, {2, 5}, {2, 8}, {3, 5}, {3, 
           10}, {3, 11}, {4, 12}, {4, 11}, {4, 1}, {6, 10}, {6, 13}, {6, 
           14}, {7, 15}, {7, 14}, {7, 5}, {9, 8}, {9, 15}, {9, 16}, {10, 6}, {
           10, 17}, {10, 18}, {11, 19}, {11, 18}, {11, 3}, {12, 4}, {12, 
           19}, {12, 20}, {13, 17}, {13, 2}, {13, 21}, {14, 22}, {14, 21}, {
           14, 6}, {15, 7}, {15, 22}, {15, 23}, {16, 24}, {16, 23}, {16, 9}, {
           17, 13}, {17, 1}, {17, 25}, {18, 26}, {18, 25}, {18, 10}, {19, 
           11}, {19, 26}, {19, 27}, {20, 28}, {20, 27}, {20, 12}, {21, 29}, {
           21, 8}, {21, 13}, {22, 14}, {22, 29}, {22, 28}, {23, 30}, {23, 
           28}, {23, 15}, {24, 16}, {24, 30}, {24, 26}, {25, 31}, {25, 4}, {
           25, 17}, {26, 18}, {26, 31}, {26, 24}, {27, 32}, {27, 24}, {27, 
           19}, {28, 20}, {28, 32}, {28, 22}, {29, 21}, {29, 9}, {29, 32}, {
           30, 23}, {30, 20}, {30, 31}, {31, 25}, {31, 12}, {31, 30}, {32, 
           27}, {32, 16}, {32, 29}}, Null, {1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 
           3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 
           1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 
           2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 
           3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3}}, {
          EdgeStyle -> {
            DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
               1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, -1], 0}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 
               1, 0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 
               0, -1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, -1}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0,
                1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1,
                0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}},
                3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, -1], 0}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, -1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 
               0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {
               0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, -1], 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, -1], 0}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 
               0}, {0, 0, 0, -1}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1,
                0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1,
                0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, 1], 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 
               0}, {0, 0, 0, 1}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
               0, -1}, {0, 0, -1, 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0, 0, 
               0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, -1}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {
               0, 0, 0, -1}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 
               1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, 1], 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
               0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 
               0, -1, 0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 
               0}, {0, 0, 0, 1}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, 1], 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {
               0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0,
                1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}},
                3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, 1], 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, 1], 0}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, 1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
               1}, {0, 0, 1, 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 
               0, -1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, -1], 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, 1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, -1], 0}, {0, 0, 0, 
                 Complex[0, 1]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, 1], 0}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 
               1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
               0, -1}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, 1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
               0}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
               0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
               0}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, 1], 0}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
                 Complex[0, 1], 0}, {0, 0, 0, 
                 Complex[0, -1]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 
               0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 
               0, -1, 0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
               1}, {0, 0, -1, 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, -1]}, {0, 0, 
                 Complex[0, 1], 0}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
               0, -1}, {0, 0, 1, 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 
               0, -1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, -1], 0}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 
               0, -1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, 1}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, -1], 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0, 0, 
               0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
               0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1,
                0}}, 3] -> {
               Directive[
                RGBColor[0.24720000000000014`, 0.63, 0.6], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 
               0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
                 2^Rational[-1, 2]}}, 2] -> {
               Directive[
                GrayLevel[0], 
                Thickness[Large]]}, 
             DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
                0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 
               0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 1}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
                 Complex[0, 1]}, {0, 0, 
                 Complex[0, -1], 0}}, {{
                2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}, {
                0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
                 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}, 
             DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
               0, -1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
                2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
                0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
                0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
               Directive[
                RGBColor[0.8901960784313725, 0.25, 0], 
                Thickness[Large]]}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[CompressedData["
1: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
hgrysd8/hpGsmFDf8z+L5NdcKbPdP5IUA+w=
         "], {{
           Arrowheads[0.024140283398950878`], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{1, {3.416028252515871, 1.7453333780324127`}, 2}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{1, 3}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{1, {2.4184159606888582`, 2.380139632649832}, 4}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              2, {3.0772000049405324`, 1.5958690278057537`}, 1}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{2, 5}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{2, {3.29948653214984, 0.6294789025317481}, 8}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{3, {3.23854064798336, 2.0872719971667757`}, 5}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{3, 10}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              3, {2.4812960858685815`, 2.9272192114254763`}, 11}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{4, {2.651129615433339, 2.6988981701636963`}, 1}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{4, 11}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              4, {1.455554723085131, 2.6708763617007945`}, 12}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              5, {2.8430532416609484`, 2.0907144937643296`}, 3}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{5, 6}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{5, {2.871216652956293, 0.8869466854499842}, 7}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              6, {2.981164168508788, 1.7465899750978302`}, 10}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{6, 13}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              6, {2.7323062084996343`, 0.46521167076514947`}, 14}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              7, {2.5466959335164843`, 1.1017766876225144`}, 5}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{7, 14}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              7, {1.9548569695293057`, 0.08280700931709804}, 15}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{8, {3.021309875276211, 0.8356528972727343}, 2}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{8, 7}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              8, {2.2776359300940525`, 0.1499635141365451}, 9}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              9, {2.2939873655695417`, 0.5190601862971994}, 8}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{9, 15}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{9, {1.187514792724701, 0.6028562238704379}, 16}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              10, {3.3893182174339636`, 1.6405253105249424`}, 6}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{10, 17}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{10, {2.82915074419761, 2.611920343300305}, 18}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              11, {2.7321918466293433`, 3.2161656924774342`}, 3}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{11, 18}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              11, {1.5986932055087166`, 3.2087419607625596`}, 19}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              12, {1.4395982663902713`, 3.067235307422203}, 4}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{12, 19}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              12, {0.5638680443546491, 2.2759865431888833`}, 20}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{13, 2}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              13, {3.2428114023445493`, 1.2950478971386639`}, 17}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              13, {3.113492234646298, 0.22045430958506307`}, 21}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              14, {2.4284632579478562`, 0.7569991989099711}, 6}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{14, 21}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              14, {1.542202771921662, -0.11068917964861273`}, 22}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              15, {1.7900901718406401`, 0.418184382753078}, 7}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{15, 22}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              15, {0.829412151954507, 0.20077189270977905`}, 23}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{16, {1.436897541311947, 0.8741612026159586}, 9}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{16, 23}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              16, {0.6561458439811717, 1.6486219268990192`}, 24}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{17, 1}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              17, {3.619595561872229, 1.3008954435001587`}, 13}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              17, {2.82673732587701, 2.0722435846543266`}, 25}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              18, {3.1069305380667926`, 2.8608514920053536`}, 10}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{18, 25}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              18, {2.0352211588557028`, 2.94713116273439}, 26}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              19, {1.5646628766596733`, 3.5940459062947707`}, 11}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{19, 26}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              19, {0.7787049918908471, 2.7661379367290664`}, 27}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              20, {0.2811221806915936, 2.553888191126965}, 12}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{20, 27}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              20, {0.21112995222873313`, 1.4014077246701966`}, 28}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{21, 8}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              21, {2.8776835183771228`, 0.5128336786223562}, 13}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              21, {1.874423992095495, -0.030967063300249172`}, 29}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              22, {1.5040274126043935`, 0.29295613114096797`}, 14}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              22, {0.34487019476488695`, 0.27586573611219617`}, 28}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{22, 29}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              23, {1.0526665671185262`, 0.4780574698064723}, 15}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{23, 28}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              23, {0.3356982833376517, 1.2309012055842825`}, 30}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              24, {1.0188648600120518`, 1.6895575749959113`}, 16}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              24, {0.9737895834741391, 2.7763977578676107`}, 26}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{24, 30}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{25, 4}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              25, {3.062570755793156, 2.3864302529508525`}, 17}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              25, {1.9066301127263912`, 2.3874342290478663`}, 31}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{26, {2.017863566014249, 3.317482735711806}, 18}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{26, {1.264976337789238, 2.550053451458166}, 24}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{26, 31}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              27, {0.47474892003230496`, 3.008965471040413}, 19}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{27, 24}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              27, {0.5264717307575305, 1.8358080231368634`}, 32}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              28, {-0.17652901354284287`, 1.3900281162487165`}, 20}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              28, {0.5991820732419744, 0.5635878399311421}, 22}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{28, 32}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{29, 9}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              29, {1.9833011997835215`, 0.3783059763681118}, 21}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             BezierCurveBox[{29, {0.70795112472349, 0.6201702546021409}, 32}],
              0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{30, 20}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              30, {0.6992633688060705, 1.2322167553624375`}, 23}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              30, {0.7987307466928213, 2.3065491595181586`}, 31}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{31, 12}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              31, {1.8970454131329169`, 2.759173512405326}, 25}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              31, {1.0534309187266389`, 2.036471648177789}, 30}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[{32, 16}, 0.033543845417953425`], {
             Directive[
              GrayLevel[0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              32, {0.12398974663868877`, 1.7912935417842653`}, 27}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.8901960784313725, 0.25, 0], 
              Thickness[Large]]}, StripOnInput -> False], 
           StyleBox[
            ArrowBox[
             
             BezierCurveBox[{
              32, {0.9915981498740805, 0.9206813357145132}, 29}], 
             0.033543845417953425`], {
             Directive[
              RGBColor[0.24720000000000014`, 0.63, 0.6], 
              Thickness[Large]]}, StripOnInput -> False]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           DiskBox[1, 0.033543845417953425`], 
           DiskBox[2, 0.033543845417953425`], 
           DiskBox[3, 0.033543845417953425`], 
           DiskBox[4, 0.033543845417953425`], 
           DiskBox[5, 0.033543845417953425`], 
           DiskBox[6, 0.033543845417953425`], 
           DiskBox[7, 0.033543845417953425`], 
           DiskBox[8, 0.033543845417953425`], 
           DiskBox[9, 0.033543845417953425`], 
           DiskBox[10, 0.033543845417953425`], 
           DiskBox[11, 0.033543845417953425`], 
           DiskBox[12, 0.033543845417953425`], 
           DiskBox[13, 0.033543845417953425`], 
           DiskBox[14, 0.033543845417953425`], 
           DiskBox[15, 0.033543845417953425`], 
           DiskBox[16, 0.033543845417953425`], 
           DiskBox[17, 0.033543845417953425`], 
           DiskBox[18, 0.033543845417953425`], 
           DiskBox[19, 0.033543845417953425`], 
           DiskBox[20, 0.033543845417953425`], 
           DiskBox[21, 0.033543845417953425`], 
           DiskBox[22, 0.033543845417953425`], 
           DiskBox[23, 0.033543845417953425`], 
           DiskBox[24, 0.033543845417953425`], 
           DiskBox[25, 0.033543845417953425`], 
           DiskBox[26, 0.033543845417953425`], 
           DiskBox[27, 0.033543845417953425`], 
           DiskBox[28, 0.033543845417953425`], 
           DiskBox[29, 0.033543845417953425`], 
           DiskBox[30, 0.033543845417953425`], 
           DiskBox[31, 0.033543845417953425`], 
           DiskBox[32, 0.033543845417953425`]}}]], 
       MouseAppearanceTag["NetworkGraphics"]], AllowKernelInitialization -> 
      False]], {
    FormatType -> TraditionalForm, FrameTicks -> None, 
     DefaultBaseStyle -> {
      "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
       Hue[0.8, 1., 0.6]}}], 
   FormBox[
    FormBox[
     TemplateBox[{
      "\"\\!\\(\\*SubscriptBox[\\(H\\), \\(1\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(P\\), \\(2\\)]\\)\"", 
       "\"\\!\\(\\*SubscriptBox[\\(C\\), \\(2, 1\\)]\\)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8901960784313725, 0.25, 0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.8901960784313725, 0.25, 0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.63, 0.6], 
                    Thickness[Large]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.24720000000000014`, 0.63, 0.6], 
                    Thickness[Large]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.8901960784313725, 0.25, 0]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   
                   TemplateBox[<|
                    "color" -> RGBColor[0.24720000000000014`, 0.63, 0.6]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}]}], "]"}]& ), Editable -> 
      True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.8945652391438837`*^9, {3.894567261106469*^9, 3.894567316578416*^9}},
 CellLabel->
  "Out[445]=",ExpressionUUID->"95b1a92a-4f1c-49cc-b86e-f9de1c3de44e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simple Cayley Graphs", "Subsubsection",
 CellChangeTimes->{{3.8945648010146*^9, 
  3.89456480394205*^9}},ExpressionUUID->"e45e63f1-c7fd-4d5b-a3f8-\
0b8f51603db9"],

Cell["\<\
The SimpleCayleyGraph[] function gives an uncolored version of a group\
\[CloseCurlyQuote]s Cayley graph.\
\>", "Text",
 CellChangeTimes->{{3.894565655994945*^9, 3.8945656704070663`*^9}, {
  3.89456578081117*^9, 3.89456580458698*^9}, {3.8945658667283773`*^9, 
  3.894565866848673*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"78bc5f59-afd9-443c-b69c-f81ceb135411"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimpleCayleyGraphBuilder", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"HadamardGate", "[", 
     RowBox[{"2", ",", "1"}], "]"}], ",", 
    RowBox[{"PhaseGate", "[", 
     RowBox[{"2", ",", "1"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.894565807725947*^9, 3.894565815518197*^9}},
 CellLabel->
  "In[308]:=",ExpressionUUID->"b2a2f5fe-ebf4-4732-a9d7-54670e2238f6"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 1, 
       0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
       1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 
         0}, {0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{1, 0, 
       0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {-2^Rational[-1, 2], 2^
         Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0,
        1, 0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 1, 0, 0}, {
         Complex[0, 1], 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 1, 0}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 
         0}, {2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1, 
       0, 0}, {-1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1], 0, 0}, {
         Complex[0, 1], 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0,
        0, 1, 0}}, {{2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0,
          0}, {0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 
         0}, {Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2], 0, 
         0}, {2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1, 0, 0}, {
         Complex[0, -1], 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, -1], 0}}, {{0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1], 0, 0}, {-1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, -1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, -1, 0, 0}, {
         Complex[0, 1], 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 1, 0}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[0, 1], 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
         Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {0, 0, 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
         Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1], 0, 0}, {
         Complex[0, -1], 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, -1], 0}}, {{0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1,
        0, 0}, {-1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1], 0, 0}, {
         Complex[0, 1], 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 
         0}, {Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 
         0}, {2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1, 0, 0}, {
         Complex[0, -1], 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
         Complex[0, -1], 0}}, {{0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, -1], 0, 0}, {-1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, -1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 
       0, 0, 1}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0,
          0}, {0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2], 0, 0}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 
         0}, {0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0,
          0}, {2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {0, 0, 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, -1], 0, 0}, {
         Complex[0, -1], 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, -1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, 1], 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, -1}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 1}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        0, 0, 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 
         0}, {-2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0,
          0}, {Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {
       0, 0, 0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2], 0, 
         0}, {0, 0, -2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0,
          0}, {-2^Rational[-1, 2], 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
         Complex[0, -1] 2^Rational[-1, 2], 0, 0}, {-2^Rational[-1, 2], 
         Complex[0, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, -2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, -1], 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2], 0,
          0}, {Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2], 0, 0}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2], 0, 0}, {
        0, 0, -2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        0, 0, Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
         Complex[0, -1], 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 0, 0}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 0, 0}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {0, 0, 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0, 0, 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2], 0, 0}, {
        0, 0, Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, 0, 0, Complex[-1, -1] 2^Rational[-1, 2]}}}, {CompressedData["
1:eJwBEQPu/CFib1JiAgAAAIABAAACAAAAAQIBAwQFBAYCAQIEAwcDCAUEBQkG
CgYLBwMHDAgNCA4JDwkQCgYKEQsSCwIMEwwUDQgNFQ4WDgEPCQ8XEBgQGREa
ERsSCxIcEwwTHRQeFB8VIBUhFg4WIhcdFyMYEBgkGSUZBRoRGiYbJxsoHCkc
Kh0XHSseFB4sHy0fByAVIC4hLyEwIjEiMiMuIzMkNCQ1JRklNiYrJjcnGyc4
KDkoCikcKToqOyo8KyYrPSw+LD8tHy1ALiMuQS8hL0IwQzANMSIxRDJFMkYz
RDMPNCQ0RzVINUk2SjZLN0c3TDhNOE45KDlPOj06UDsqO1E8UjwSPTo9Ez4s
PlM/VD9VQFZAV0FTQVhCWUJaQzBDW0QzRFxFMkVdRl5GFkc3R19INUhgSV1J
GEo2SmFLYktjTGFMGk04TWROZU5mT2dPaFBkUGlRVVFqUjxSa1NBU2xUP1Rt
VVFVHlZAVm5Xb1dwWG5YIFlCWXFaclpzW3RbdVxxXHZdSV13XkZeeF9sX3lg
emB7YUxhfGJLYn1jeGMlZFBkfmVOZX9mfWYnZ09ngGiBaIJpgGkpaoNqhGtw
a4VsX2yGbYdtiG5YbolvV2+KcGtwLXFccYtyWnKMc4pzL3RbdI11jnWPdo12
MXeQd5F4Y3iSeYt5NHpgepN7jHuUfJN8lX1mfZZ+hn6Xf4h/mIBpgJmBaIGa
gpKCOYNqg5uEmoQ7hY+FnIZ+hj6HbYediH+InomdiZ+Kc4qgi3mLoYx7jKKN
do2jjnWOpI+Fj0OQd5ClkaSRRZKCkqaTfJOnlKOUSJWllUqWqJapl6eXTZii
mKqZnpmrmoSarJufm62cppxSnYmdrp6ZnlSfm59WoK+gsKGuoVmimKKxo5Sj
sqSRpLOllaW0ppymXqeXp7Wolqi2qbOpYqq0qmWrtqtnrLCst62xrbiuoa65
r6CvurCssG+xrbFysrqydLOps7u0qrS8tbm1erartr23u7eBuL24g7m1uYe6
srq+u7e7jry+vJC9uL2/vry+wL/Av6jAv8Cv4SMjuw==
       "], Null}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw8m3c41f///80zODh7OGaDlKJCu9e90tDAG6lIA5UkEU0jqSiJ0pBVRCVR
ItoklCjJbNh7ZBbZfV+f6/pdP/+4Hp6vcZ7jcb/f7i407Q9Z7JGSkJB4y5CQ
+N933W2M5HgdOYSkCK1O3xZCzy9xWc8FCkp3srWX8QVQRvHItp1U6O7wvfPQ
hof1S4zyAr4oIKNx7mLdbXwMzt42e8NaLurVMuSnePIhV6r4kBdBwXiy5uWK
21wkeNb6qv6QBOHJZ85/y0TtP9tczXsK6KTeMPD9KACjbqR7S54A9RlGcvbJ
XLhtFepWvKVCf2P2Can/WNhuENOjPucfIQywVpog3882OHD9c6Akpn053JGz
n46tC7+Evt/DQiZVLj6rn4e3z2fYStoxMTRy9aNFnjIiAmZvt9AXoPDW19jI
hSwEruv4MSwUY8m50c2/N/MQrfToUOxuBZhHesrPu86AvhnlcZFnF7Fy+TFf
z2QOggZkhpaq0nDYRXf420IK+NLWm+t1RomYowJ526MykGCW1/juZePTQQnj
Hx0snChy2qq6mVyPaoY4ea4q8jas7/ey4uL6p9jA53YMuCru7AlWVcfhpXUT
d49z4Hp3cq/gvQAZoY4ftGwFyH+712SFJAdZZ9c43HpHxbtDrZ5RE1Skhlo1
FQYpYJ1Lg8Ztn3pCnbDlxmsr4ff7NNuzc8n5loYfDYui4rXugszH8SNEZc1N
6x1/hgjX4MMfvsSMEHXqaQ03UxiI7DNWonqxsY3zRE27jY7HM/o/GhdyYKVm
7xIfwMXWZOdHx8OFeG83/ai3qQocGq8FhJfy0Ro2QO9/LI8B19CCjdM0YMrd
/2l3mCKeyoncj77loeS15iMXOxEM299kU75y8DJdO+jfYSksfJGV1ZEhj1Nt
nofnZ1DxNDPbdNo5KbQfjtgQ9Z2FP4t9FFj0HkLPcFFLbYgsJL7JVEIllVh1
tjy5ZIgFa/f6n0y2EsBzt752TArn48NWHqyWwtKIOW+d3JsJ46ldKRo+f4kP
9l6d/k4s0Ma17N2duXj0PNRUb5ksjFtpFR9yeTiUFrL/uB0L19WS7n0JYON7
dXAtO1qIH1K7pVtqxZjW/bNr5wkhrPbNzJqbJoDp9a1/TVjqOLgE7zPiRXBY
5htYL8/C0INw+2+5alhZbHT/c6oMRqhtf2LeaUBlqfX9tm4WfBN+XM5SFOBH
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
nLXcJQL8D+0K5g8=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01772671749996839], 
         ArrowBox[BezierCurveBox[{
          1, {3.106993651633362, 5.889253394787222}, 2}], 0.0594207467043506],
          ArrowBox[{1, 3}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          2, {2.980686998916953, 6.0382310455419494`}, 1}], 
          0.0594207467043506], ArrowBox[{2, 4}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          3, {2.765776680091295, 4.6496466247052926`}, 7}], 
          0.0594207467043506], ArrowBox[{3, 8}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          4, {4.393647537262297, 5.821138800008731}, 5}], 0.0594207467043506],
          ArrowBox[{4, 6}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          5, {4.402306443634724, 5.379355100504436}, 4}], 0.0594207467043506],
          ArrowBox[{5, 9}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          6, {3.032941210740667, 4.766346158763341}, 10}], 
          0.0594207467043506], ArrowBox[{6, 11}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          7, {2.3872832247420908`, 4.876593524156966}, 3}], 
          0.0594207467043506], ArrowBox[{7, 12}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          8, {4.103511165104381, 5.822204634671903}, 13}], 
          0.0594207467043506], ArrowBox[{8, 14}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          9, {6.011388543166358, 4.71303973068972}, 15}], 0.0594207467043506],
          ArrowBox[{9, 16}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          10, {2.7609637431041216`, 4.718852963051635}, 6}], 
          0.0594207467043506], ArrowBox[{10, 17}, 0.0594207467043506], 
         ArrowBox[{11, 2}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          11, {1.472522034420424, 4.949270211888267}, 18}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          12, {2.6683856809598216`, 3.1125276877343735`}, 19}], 
          0.0594207467043506], ArrowBox[{12, 20}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          13, {3.951998185927893, 5.610644647730335}, 8}], 
          0.0594207467043506], ArrowBox[{13, 21}, 0.0594207467043506], 
         ArrowBox[{14, 1}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          14, {4.487192271940126, 7.158288687490841}, 22}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          15, {5.727542310347898, 4.760580371604716}, 9}], 
          0.0594207467043506], ArrowBox[{15, 23}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          16, {7.353270722131446, 5.266054367279598}, 24}], 
          0.0594207467043506], ArrowBox[{16, 25}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          17, {4.31107573598255, 3.4487976186848552`}, 26}], 
          0.0594207467043506], ArrowBox[{17, 27}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          18, {1.3342461673420272`, 5.307998899443702}, 11}], 
          0.0594207467043506], ArrowBox[{18, 28}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          19, {2.5372008376711914`, 2.8418692874700313`}, 12}], 
          0.0594207467043506], ArrowBox[{19, 29}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          20, {1.8035315283337714`, 1.9908382813492176`}, 30}], 
          0.0594207467043506], ArrowBox[{20, 31}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          21, {4.814108145528895, 3.8614167980711733`}, 32}], 
          0.0594207467043506], ArrowBox[{21, 33}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          22, {4.686752969755776, 6.831941464941445}, 14}], 
          0.0594207467043506], ArrowBox[{22, 34}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          23, {4.663239480829419, 3.078306533109423}, 29}], 
          0.0594207467043506], ArrowBox[{23, 35}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          24, {7.199974006948322, 4.935702405873707}, 16}], 
          0.0594207467043506], ArrowBox[{24, 36}, 0.0594207467043506], 
         ArrowBox[{25, 5}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          25, {5.60811483822828, 6.00700072974538}, 37}], 0.0594207467043506],
          ArrowBox[BezierCurveBox[{
          26, {4.112819164717034, 3.0940804035905747`}, 17}], 
          0.0594207467043506], ArrowBox[{26, 38}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          27, {3.3512536488068285`, 3.4045872206544603`}, 39}], 
          0.0594207467043506], ArrowBox[{27, 40}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          28, {0.924232675408447, 3.3641607273464533`}, 41}], 
          0.0594207467043506], ArrowBox[{28, 42}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          29, {4.467621041389662, 3.4184185360348005`}, 23}], 
          0.0594207467043506], ArrowBox[{29, 43}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          30, {1.434154671925513, 2.001612838000802}, 20}], 
          0.0594207467043506], ArrowBox[{30, 44}, 0.0594207467043506], 
         ArrowBox[{31, 7}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          31, {1.4083634887941399`, 3.9465458333680057`}, 45}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          32, {4.406129304737994, 3.854822465754487}, 21}], 
          0.0594207467043506], ArrowBox[{32, 46}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          33, {5.324301604360464, 4.817559686706582}, 47}], 
          0.0594207467043506], ArrowBox[{33, 48}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          34, {6.7153493191175535`, 6.732388485088358}, 49}], 
          0.0594207467043506], ArrowBox[{34, 50}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          35, {5.537346912685134, 2.958946862099135}, 46}], 
          0.0594207467043506], ArrowBox[{35, 51}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          36, {8.084185026992438, 3.1414738671380253`}, 52}], 
          0.0594207467043506], ArrowBox[{36, 53}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          37, {5.773285629116241, 6.173249282005567}, 25}], 
          0.0594207467043506], ArrowBox[{37, 54}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          38, {4.418606419867839, 2.1312679999789887`}, 43}], 
          0.0594207467043506], ArrowBox[{38, 55}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          39, {3.1114027570976512`, 3.251659603811127}, 27}], 
          0.0594207467043506], ArrowBox[{39, 56}, 0.0594207467043506], 
         ArrowBox[{40, 10}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          40, {1.807143979916989, 4.702955797812493}, 57}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          41, {0.5297087561767594, 3.22495436764235}, 28}], 
          0.0594207467043506], ArrowBox[{41, 58}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          42, {0.1726022850441009, 4.051540371496425}, 59}], 
          0.0594207467043506], ArrowBox[{42, 60}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          43, {4.4193421062789495`, 2.483271866146706}, 38}], 
          0.0594207467043506], ArrowBox[{43, 61}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          44, {3.0284854556194567`, 0.6922686635132081}, 62}], 
          0.0594207467043506], ArrowBox[{44, 63}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          45, {1.660713486514087, 3.9902803261371704`}, 31}], 
          0.0594207467043506], ArrowBox[{45, 64}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          46, {5.272257385397704, 3.1568374887500936`}, 35}], 
          0.0594207467043506], ArrowBox[{46, 65}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          47, {5.06441841594542, 4.655202748084268}, 33}], 
          0.0594207467043506], ArrowBox[{47, 66}, 0.0594207467043506], 
         ArrowBox[{48, 13}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          48, {4.360915056076711, 6.6597994482969325`}, 67}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          49, {6.400242472089891, 6.462788146198992}, 34}], 
          0.0594207467043506], ArrowBox[{49, 68}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          50, {6.383447286444843, 7.714162143159557}, 69}], 
          0.0594207467043506], ArrowBox[{50, 70}, 0.0594207467043506], 
         ArrowBox[{51, 15}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          51, {6.627885671958783, 4.776776352522001}, 68}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          52, {7.677968415405501, 3.2663314834680204`}, 36}], 
          0.0594207467043506], ArrowBox[{52, 71}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          53, {8.474175373216749, 4.044331250065319}, 72}], 
          0.0594207467043506], ArrowBox[{53, 73}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          54, {6.265483861079723, 5.12746721846163}, 74}], 
          0.0594207467043506], ArrowBox[{54, 75}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          55, {6.496510032375392, 2.201572706607301}, 71}], 
          0.0594207467043506], ArrowBox[{55, 76}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          56, {3.986659739992845, 1.4797373487024912`}, 77}], 
          0.0594207467043506], ArrowBox[{56, 78}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          57, {2.0490068342132495`, 4.957467484601265}, 40}], 
          0.0594207467043506], ArrowBox[{57, 79}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          58, {2.2690549751312155`, 2.2735473590475674`}, 61}], 
          0.0594207467043506], ArrowBox[{58, 80}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          59, {-0.10967117442292394`, 4.072237249199657}, 42}], 
          0.0594207467043506], ArrowBox[{59, 81}, 0.0594207467043506], 
         ArrowBox[{60, 18}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          60, {0.4957801446408617, 6.144940947137619}, 82}], 
          0.0594207467043506], ArrowBox[{61, 19}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          61, {2.3192947613794668`, 1.9352147571639267`}, 58}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          62, {2.929237755598557, 0.2836456848289166}, 44}], 
          0.0594207467043506], ArrowBox[{62, 83}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          63, {2.146043868776791, 0.6253021662058472}, 84}], 
          0.0594207467043506], ArrowBox[{63, 85}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          64, {2.484177583653103, 3.2118489490124054`}, 86}], 
          0.0594207467043506], ArrowBox[{64, 87}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          65, {4.799613520237362, 1.1519735953298595`}, 83}], 
          0.0594207467043506], ArrowBox[{65, 88}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          66, {6.705166395947398, 3.255215248603705}, 89}], 
          0.0594207467043506], ArrowBox[{66, 90}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          67, {4.7149293749055925`, 6.721451103152537}, 48}], 
          0.0594207467043506], ArrowBox[{67, 91}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          68, {6.891116785041886, 4.546803911007486}, 51}], 
          0.0594207467043506], ArrowBox[{68, 92}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          69, {6.262467919220289, 7.451754357992011}, 50}], 
          0.0594207467043506], ArrowBox[{69, 93}, 0.0594207467043506], 
         ArrowBox[{70, 22}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          70, {4.273973218018547, 7.794309473234552}, 94}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          71, {6.416375645349498, 1.8956049460835678`}, 55}], 
          0.0594207467043506], ArrowBox[{71, 95}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          72, {8.195834373434085, 4.07400062992202}, 53}], 
          0.0594207467043506], ArrowBox[{72, 96}, 0.0594207467043506], 
         ArrowBox[{73, 24}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          73, {7.583407445954577, 5.957146827947953}, 93}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          74, {5.893553164487688, 4.9201931514575685`}, 54}], 
          0.0594207467043506], ArrowBox[{74, 97}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          75, {4.59653524855095, 5.904101488086927}, 98}], 
          0.0594207467043506], ArrowBox[{75, 99}, 0.0594207467043506], 
         ArrowBox[{76, 26}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          76, {6.043944252423588, 3.237821862843885}, 97}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          77, {3.6451272696418906`, 1.4338564379859546`}, 56}], 
          0.0594207467043506], ArrowBox[{77, 100}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          78, {4.454036911159197, 2.477844736606348}, 101}], 
          0.0594207467043506], ArrowBox[{78, 102}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          79, {1.0682360676813474`, 4.083462573799781}, 103}], 
          0.0594207467043506], ArrowBox[{79, 104}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          80, {2.632559884450753, 1.1855634119453522`}, 100}], 
          0.0594207467043506], ArrowBox[{80, 105}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          81, {0.8050923041433885, 2.1482139549323436`}, 85}], 
          0.0594207467043506], ArrowBox[{81, 106}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          82, {0.8531992113422552, 5.964797202936019}, 60}], 
          0.0594207467043506], ArrowBox[{82, 107}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          83, {4.475983252444592, 1.210457815755638}, 65}], 
          0.0594207467043506], ArrowBox[{83, 108}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          84, {2.01400851012388, 0.35673309438958817`}, 63}], 
          0.0594207467043506], ArrowBox[{84, 109}, 0.0594207467043506], 
         ArrowBox[{85, 30}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          85, {0.44764307983430396`, 1.948861319326843}, 81}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          86, {2.1018958133039574`, 2.989980517921911}, 64}], 
          0.0594207467043506], ArrowBox[{86, 110}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          87, {2.1468586696251837`, 5.136723735798658}, 111}], 
          0.0594207467043506], ArrowBox[{87, 112}, 0.0594207467043506], 
         ArrowBox[{88, 32}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          88, {3.9254087915437306`, 1.924057650774927}, 110}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          89, {6.441495321218948, 2.9825911501643385`}, 66}], 
          0.0594207467043506], ArrowBox[{89, 113}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          90, {5.649515884946091, 3.3176005751555753`}, 114}], 
          0.0594207467043506], ArrowBox[{90, 115}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          91, {5.926372463478717, 7.329619608711593}, 116}], 
          0.0594207467043506], ArrowBox[{91, 117}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          92, {7.853343387136666, 3.8969535529755497`}, 113}], 
          0.0594207467043506], ArrowBox[{92, 118}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          93, {7.938627262564152, 6.157136869187344}, 73}], 
          0.0594207467043506], ArrowBox[{93, 119}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          94, {4.2826597495333445`, 8.188546155984962}, 70}], 
          0.0594207467043506], ArrowBox[{94, 120}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          95, {6.090045326296745, 0.6656243785305245}, 108}], 
          0.0594207467043506], ArrowBox[{95, 121}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          96, {7.817201611961717, 1.9957767973671705`}, 122}], 
          0.0594207467043506], ArrowBox[{96, 123}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          97, {6.236438006297761, 3.0143311903821615`}, 76}], 
          0.0594207467043506], ArrowBox[{97, 124}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          98, {4.487684724447417, 6.173340234343787}, 75}], 
          0.0594207467043506], ArrowBox[{98, 125}, 0.0594207467043506], 
         ArrowBox[{99, 37}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          99, {3.9795973297294616`, 6.95430494013854}, 120}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          100, {2.436054378419162, 0.8291092463280331}, 80}], 
          0.0594207467043506], ArrowBox[{100, 126}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          101, {4.288227372926779, 2.2653253336075236`}, 78}], 
          0.0594207467043506], ArrowBox[{101, 127}, 0.0594207467043506], 
         ArrowBox[{102, 39}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          102, {3.5828957911028834`, 4.257999993717344}, 125}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          103, {0.6682016052438547, 4.103509855335099}, 79}], 
          0.0594207467043506], ArrowBox[{103, 128}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          104, {0.9135079938798922, 6.020436047020481}, 129}], 
          0.0594207467043506], ArrowBox[{104, 130}, 0.0594207467043506], 
         ArrowBox[{105, 41}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          105, {0.9367939693136013, 2.14120119638049}, 128}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          106, {1.2074633153776027`, 3.1655137737673607`}, 131}], 
          0.0594207467043506], ArrowBox[{106, 132}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          107, {1.6849346077643417`, 5.975706081694345}, 112}], 
          0.0594207467043506], ArrowBox[{107, 133}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          108, {5.88575436270168, 1.0453387075365939`}, 95}], 
          0.0594207467043506], ArrowBox[{108, 134}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          109, {4.153734745194619, 0.22341390947187278`}, 135}], 
          0.0594207467043506], ArrowBox[{109, 136}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          110, {3.8074337827799143`, 2.1892886931479576`}, 88}], 
          0.0594207467043506], ArrowBox[{110, 137}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          111, {2.325837053018677, 4.898917198514919}, 87}], 
          0.0594207467043506], ArrowBox[{111, 138}, 0.0594207467043506], 
         ArrowBox[{112, 45}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          112, {1.3008061511115374`, 6.006209534024257}, 107}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          113, {7.436776167182789, 3.9009422856455007`}, 92}], 
          0.0594207467043506], ArrowBox[{113, 139}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          114, {5.384011218275494, 3.2845895212143454`}, 90}], 
          0.0594207467043506], ArrowBox[{114, 140}, 0.0594207467043506], 
         ArrowBox[{115, 47}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          115, {4.101481345101204, 4.607967127201288}, 138}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          116, {5.718930530995664, 6.967036464127249}, 91}], 
          0.0594207467043506], ArrowBox[{116, 141}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          117, {4.122633302403877, 7.887635251286967}, 142}], 
          0.0594207467043506], ArrowBox[{117, 143}, 0.0594207467043506], 
         ArrowBox[{118, 49}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          118, {7.290579712129123, 5.84205140697876}, 141}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          119, {6.9364587496890655`, 6.109804072736114}, 144}], 
          0.0594207467043506], ArrowBox[{119, 145}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          120, {4.1461364615843825`, 7.299837573730778}, 99}], 
          0.0594207467043506], ArrowBox[{120, 146}, 0.0594207467043506], 
         ArrowBox[{121, 52}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          121, {7.400807273162778, 2.0328756530398753`}, 139}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          122, {7.463057446970143, 2.185428237819047}, 96}], 
          0.0594207467043506], ArrowBox[{122, 147}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          123, {7.020008169645972, 2.8082807970068497`}, 140}], 
          0.0594207467043506], ArrowBox[{123, 148}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          124, {6.979604665013657, 2.221099027427415}, 147}], 
          0.0594207467043506], ArrowBox[{124, 149}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          125, {3.9887359815674737`, 4.262406949867651}, 102}], 
          0.0594207467043506], ArrowBox[{125, 150}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          126, {4.244996219984143, 0.29685564188175834`}, 134}], 
          0.0594207467043506], ArrowBox[{126, 151}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          127, {3.932213783790784, 0.8847506608622939}, 136}], 
          0.0594207467043506], ArrowBox[{127, 152}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          128, {1.1165238600243366`, 2.227427935930398}, 105}], 
          0.0594207467043506], ArrowBox[{128, 153}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          129, {1.1047974363426951`, 6.00493692882483}, 104}], 
          0.0594207467043506], ArrowBox[{129, 154}, 0.0594207467043506], 
         ArrowBox[{130, 57}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          130, {1.9193918871493993`, 6.81278387061228}, 146}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          131, {1.0506248548426236`, 2.8308179136084815`}, 106}], 
          0.0594207467043506], ArrowBox[{131, 155}, 0.0594207467043506], 
         ArrowBox[{132, 59}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          132, {0.308336353136883, 4.964753987157774}, 154}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          133, {2.8650922516630506`, 7.723742357806061}, 143}], 
          0.0594207467043506], ArrowBox[{133, 156}, 0.0594207467043506], 
         ArrowBox[{134, 62}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          134, {4.200773335495463, 0.13964541521852744`}, 126}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          135, {4.136469537896126, -0.1709171664375552}, 109}], 
          0.0594207467043506], ArrowBox[{135, 157}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          136, {3.726110740400243, 1.2081526200133141`}, 127}], 
          0.0594207467043506], ArrowBox[{136, 158}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          137, {4.516798882401797, 1.0624680351256575`}, 157}], 
          0.0594207467043506], ArrowBox[{137, 159}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          138, {4.315023099240033, 4.96722409719637}, 115}], 
          0.0594207467043506], ArrowBox[{138, 160}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          139, {7.55894689311368, 1.9842716217403922`}, 121}], 
          0.0594207467043506], ArrowBox[{139, 161}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          140, {6.865739319492095, 3.152314568771599}, 123}], 
          0.0594207467043506], ArrowBox[{140, 162}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          141, {7.489800487169169, 5.950104624186122}, 118}], 
          0.0594207467043506], ArrowBox[{141, 163}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          142, {4.155106380076669, 8.035299123073724}, 117}], 
          0.0594207467043506], ArrowBox[{142, 164}, 0.0594207467043506], 
         ArrowBox[{143, 67}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          143, {2.959202693279489, 7.324384449573735}, 133}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          144, {6.568425337570232, 6.1243585652737575`}, 119}], 
          0.0594207467043506], ArrowBox[{144, 165}, 0.0594207467043506], 
         ArrowBox[{145, 69}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          145, {5.342330397333743, 7.4273952552367435`}, 164}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          146, {2.2217271883821765`, 6.545403415945012}, 130}], 
          0.0594207467043506], ArrowBox[{146, 166}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          147, {6.603148091460458, 2.2631828636342384`}, 124}], 
          0.0594207467043506], ArrowBox[{147, 167}, 0.0594207467043506], 
         ArrowBox[{148, 72}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          148, {7.424772914496592, 4.759419502616346}, 163}], 
          0.0594207467043506], ArrowBox[{149, 74}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          149, {6.6929592307795875`, 4.163655026757918}, 165}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          150, {3.147339389362507, 4.950600519767697}, 168}], 
          0.0594207467043506], ArrowBox[{150, 169}, 0.0594207467043506], 
         ArrowBox[{151, 77}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          151, {5.3331821868258205`, 0.929340162905723}, 167}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          152, {5.285748263965032, 2.1730728312673424`}, 162}], 
          0.0594207467043506], ArrowBox[{152, 170}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          153, {2.033988006023162, 1.579439002631846}, 158}], 
          0.0594207467043506], ArrowBox[{153, 171}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          154, {0.7133095756691578, 4.839428841811975}, 132}], 
          0.0594207467043506], ArrowBox[{154, 172}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          155, {2.8153497200250963`, 2.0789117508193193`}, 159}], 
          0.0594207467043506], ArrowBox[{155, 173}, 0.0594207467043506], 
         ArrowBox[{156, 82}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          156, {2.0859609012858935`, 7.745543049709453}, 166}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          157, {4.322639021952219, 0.7062423860891196}, 137}], 
          0.0594207467043506], ArrowBox[{157, 174}, 0.0594207467043506], 
         ArrowBox[{158, 84}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          158, {1.7204445051945476`, 1.3153341623707113`}, 153}], 
          0.0594207467043506], ArrowBox[{159, 86}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          159, {2.6514358653037915`, 1.905333471460249}, 155}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          160, {3.9755914312162197`, 5.972082757096645}, 175}], 
          0.0594207467043506], ArrowBox[{160, 176}, 0.0594207467043506], 
         ArrowBox[{161, 89}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          161, {6.63716401574033, 1.0865990570856978`}, 174}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          162, {5.4140915857705485`, 2.0289411130720367`}, 152}], 
          0.0594207467043506], ArrowBox[{162, 177}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          163, {7.819347164578028, 4.895540866675412}, 148}], 
          0.0594207467043506], ArrowBox[{163, 178}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          164, {5.447845965729235, 7.838041553125211}, 145}], 
          0.0594207467043506], ArrowBox[{164, 179}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          165, {6.932281233488518, 4.202644679669444}, 149}], 
          0.0594207467043506], ArrowBox[{165, 180}, 0.0594207467043506], 
         ArrowBox[{166, 94}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          166, {2.215948175687247, 7.453926120053978}, 156}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          167, {5.432993033448205, 0.54003269055055}, 151}], 
          0.0594207467043506], ArrowBox[{167, 181}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          168, {2.8741179620888775`, 5.138600174766427}, 150}], 
          0.0594207467043506], ArrowBox[{168, 182}, 0.0594207467043506], 
         ArrowBox[{169, 98}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          169, {3.588521899294652, 6.967969918054858}, 179}], 
          0.0594207467043506], ArrowBox[{170, 101}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          170, {5.615405316329153, 3.428244786378947}, 180}], 
          0.0594207467043506], ArrowBox[{171, 103}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          171, {1.5719446369288805`, 3.505650232602845}, 182}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          172, {1.9706594213812592`, 6.229932951026287}, 176}], 
          0.0594207467043506], ArrowBox[{172, 183}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          173, {3.9988032768910453`, 2.687985791691015}, 177}], 
          0.0594207467043506], ArrowBox[{173, 184}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          174, {6.3409119759440635`, 1.3660705595208011`}, 161}], 
          0.0594207467043506], ArrowBox[{174, 185}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          175, {3.9773950213581792`, 5.62077643968233}, 160}], 
          0.0594207467043506], ArrowBox[{175, 186}, 0.0594207467043506], 
         ArrowBox[{176, 111}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          176, {1.8871079354000266`, 5.920613587172097}, 172}], 
          0.0594207467043506], ArrowBox[{177, 114}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          177, {4.004028390141699, 2.249062500866153}, 173}], 
          0.0594207467043506], ArrowBox[{178, 116}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          178, {6.113689608639572, 5.853615230749059}, 186}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          179, {3.915306264604868, 6.913411841674767}, 169}], 
          0.0594207467043506], ArrowBox[{179, 187}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          180, {6.002379745677612, 3.2087269192099854`}, 170}], 
          0.0594207467043506], ArrowBox[{180, 188}, 0.0594207467043506], 
         ArrowBox[{181, 122}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          181, {6.3004924070090205`, 0.34144448665239696`}, 185}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          182, {1.842535224509929, 3.278406910948813}, 171}], 
          0.0594207467043506], ArrowBox[{182, 189}, 0.0594207467043506], 
         ArrowBox[{183, 129}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          183, {2.3044989965925624`, 7.457028151064615}, 187}], 
          0.0594207467043506], ArrowBox[{184, 131}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          184, {2.4127445464056696`, 3.375007841758308}, 189}], 
          0.0594207467043506], ArrowBox[{185, 135}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          185, {6.131946887602325, 0.6049917060894895}, 181}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          186, {6.057487737558238, 6.187445791838247}, 178}], 
          0.0594207467043506], ArrowBox[{186, 190}, 0.0594207467043506], 
         ArrowBox[{187, 142}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          187, {2.516002815717223, 7.082138170969258}, 183}], 
          0.0594207467043506], ArrowBox[{188, 144}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          188, {5.718456009338537, 4.9948226029958995`}, 190}], 
          0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          189, {2.695499020621422, 3.320516770766904}, 184}], 
          0.0594207467043506], ArrowBox[{189, 191}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          190, {5.852140969234819, 5.260814810567898}, 188}], 
          0.0594207467043506], ArrowBox[{190, 192}, 0.0594207467043506], 
         ArrowBox[{191, 168}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          191, {3.7483538115002255`, 5.018513946801747}, 192}], 
          0.0594207467043506], ArrowBox[{192, 175}, 0.0594207467043506], 
         ArrowBox[BezierCurveBox[{
          192, {3.947569788775328, 4.683142367142434}, 191}], 
          0.0594207467043506]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0594207467043506], DiskBox[2, 0.0594207467043506], 
         DiskBox[3, 0.0594207467043506], DiskBox[4, 0.0594207467043506], 
         DiskBox[5, 0.0594207467043506], DiskBox[6, 0.0594207467043506], 
         DiskBox[7, 0.0594207467043506], DiskBox[8, 0.0594207467043506], 
         DiskBox[9, 0.0594207467043506], DiskBox[10, 0.0594207467043506], 
         DiskBox[11, 0.0594207467043506], DiskBox[12, 0.0594207467043506], 
         DiskBox[13, 0.0594207467043506], DiskBox[14, 0.0594207467043506], 
         DiskBox[15, 0.0594207467043506], DiskBox[16, 0.0594207467043506], 
         DiskBox[17, 0.0594207467043506], DiskBox[18, 0.0594207467043506], 
         DiskBox[19, 0.0594207467043506], DiskBox[20, 0.0594207467043506], 
         DiskBox[21, 0.0594207467043506], DiskBox[22, 0.0594207467043506], 
         DiskBox[23, 0.0594207467043506], DiskBox[24, 0.0594207467043506], 
         DiskBox[25, 0.0594207467043506], DiskBox[26, 0.0594207467043506], 
         DiskBox[27, 0.0594207467043506], DiskBox[28, 0.0594207467043506], 
         DiskBox[29, 0.0594207467043506], DiskBox[30, 0.0594207467043506], 
         DiskBox[31, 0.0594207467043506], DiskBox[32, 0.0594207467043506], 
         DiskBox[33, 0.0594207467043506], DiskBox[34, 0.0594207467043506], 
         DiskBox[35, 0.0594207467043506], DiskBox[36, 0.0594207467043506], 
         DiskBox[37, 0.0594207467043506], DiskBox[38, 0.0594207467043506], 
         DiskBox[39, 0.0594207467043506], DiskBox[40, 0.0594207467043506], 
         DiskBox[41, 0.0594207467043506], DiskBox[42, 0.0594207467043506], 
         DiskBox[43, 0.0594207467043506], DiskBox[44, 0.0594207467043506], 
         DiskBox[45, 0.0594207467043506], DiskBox[46, 0.0594207467043506], 
         DiskBox[47, 0.0594207467043506], DiskBox[48, 0.0594207467043506], 
         DiskBox[49, 0.0594207467043506], DiskBox[50, 0.0594207467043506], 
         DiskBox[51, 0.0594207467043506], DiskBox[52, 0.0594207467043506], 
         DiskBox[53, 0.0594207467043506], DiskBox[54, 0.0594207467043506], 
         DiskBox[55, 0.0594207467043506], DiskBox[56, 0.0594207467043506], 
         DiskBox[57, 0.0594207467043506], DiskBox[58, 0.0594207467043506], 
         DiskBox[59, 0.0594207467043506], DiskBox[60, 0.0594207467043506], 
         DiskBox[61, 0.0594207467043506], DiskBox[62, 0.0594207467043506], 
         DiskBox[63, 0.0594207467043506], DiskBox[64, 0.0594207467043506], 
         DiskBox[65, 0.0594207467043506], DiskBox[66, 0.0594207467043506], 
         DiskBox[67, 0.0594207467043506], DiskBox[68, 0.0594207467043506], 
         DiskBox[69, 0.0594207467043506], DiskBox[70, 0.0594207467043506], 
         DiskBox[71, 0.0594207467043506], DiskBox[72, 0.0594207467043506], 
         DiskBox[73, 0.0594207467043506], DiskBox[74, 0.0594207467043506], 
         DiskBox[75, 0.0594207467043506], DiskBox[76, 0.0594207467043506], 
         DiskBox[77, 0.0594207467043506], DiskBox[78, 0.0594207467043506], 
         DiskBox[79, 0.0594207467043506], DiskBox[80, 0.0594207467043506], 
         DiskBox[81, 0.0594207467043506], DiskBox[82, 0.0594207467043506], 
         DiskBox[83, 0.0594207467043506], DiskBox[84, 0.0594207467043506], 
         DiskBox[85, 0.0594207467043506], DiskBox[86, 0.0594207467043506], 
         DiskBox[87, 0.0594207467043506], DiskBox[88, 0.0594207467043506], 
         DiskBox[89, 0.0594207467043506], DiskBox[90, 0.0594207467043506], 
         DiskBox[91, 0.0594207467043506], DiskBox[92, 0.0594207467043506], 
         DiskBox[93, 0.0594207467043506], DiskBox[94, 0.0594207467043506], 
         DiskBox[95, 0.0594207467043506], DiskBox[96, 0.0594207467043506], 
         DiskBox[97, 0.0594207467043506], DiskBox[98, 0.0594207467043506], 
         DiskBox[99, 0.0594207467043506], DiskBox[100, 0.0594207467043506], 
         DiskBox[101, 0.0594207467043506], DiskBox[102, 0.0594207467043506], 
         DiskBox[103, 0.0594207467043506], DiskBox[104, 0.0594207467043506], 
         DiskBox[105, 0.0594207467043506], DiskBox[106, 0.0594207467043506], 
         DiskBox[107, 0.0594207467043506], DiskBox[108, 0.0594207467043506], 
         DiskBox[109, 0.0594207467043506], DiskBox[110, 0.0594207467043506], 
         DiskBox[111, 0.0594207467043506], DiskBox[112, 0.0594207467043506], 
         DiskBox[113, 0.0594207467043506], DiskBox[114, 0.0594207467043506], 
         DiskBox[115, 0.0594207467043506], DiskBox[116, 0.0594207467043506], 
         DiskBox[117, 0.0594207467043506], DiskBox[118, 0.0594207467043506], 
         DiskBox[119, 0.0594207467043506], DiskBox[120, 0.0594207467043506], 
         DiskBox[121, 0.0594207467043506], DiskBox[122, 0.0594207467043506], 
         DiskBox[123, 0.0594207467043506], DiskBox[124, 0.0594207467043506], 
         DiskBox[125, 0.0594207467043506], DiskBox[126, 0.0594207467043506], 
         DiskBox[127, 0.0594207467043506], DiskBox[128, 0.0594207467043506], 
         DiskBox[129, 0.0594207467043506], DiskBox[130, 0.0594207467043506], 
         DiskBox[131, 0.0594207467043506], DiskBox[132, 0.0594207467043506], 
         DiskBox[133, 0.0594207467043506], DiskBox[134, 0.0594207467043506], 
         DiskBox[135, 0.0594207467043506], DiskBox[136, 0.0594207467043506], 
         DiskBox[137, 0.0594207467043506], DiskBox[138, 0.0594207467043506], 
         DiskBox[139, 0.0594207467043506], DiskBox[140, 0.0594207467043506], 
         DiskBox[141, 0.0594207467043506], DiskBox[142, 0.0594207467043506], 
         DiskBox[143, 0.0594207467043506], DiskBox[144, 0.0594207467043506], 
         DiskBox[145, 0.0594207467043506], DiskBox[146, 0.0594207467043506], 
         DiskBox[147, 0.0594207467043506], DiskBox[148, 0.0594207467043506], 
         DiskBox[149, 0.0594207467043506], DiskBox[150, 0.0594207467043506], 
         DiskBox[151, 0.0594207467043506], DiskBox[152, 0.0594207467043506], 
         DiskBox[153, 0.0594207467043506], DiskBox[154, 0.0594207467043506], 
         DiskBox[155, 0.0594207467043506], DiskBox[156, 0.0594207467043506], 
         DiskBox[157, 0.0594207467043506], DiskBox[158, 0.0594207467043506], 
         DiskBox[159, 0.0594207467043506], DiskBox[160, 0.0594207467043506], 
         DiskBox[161, 0.0594207467043506], DiskBox[162, 0.0594207467043506], 
         DiskBox[163, 0.0594207467043506], DiskBox[164, 0.0594207467043506], 
         DiskBox[165, 0.0594207467043506], DiskBox[166, 0.0594207467043506], 
         DiskBox[167, 0.0594207467043506], DiskBox[168, 0.0594207467043506], 
         DiskBox[169, 0.0594207467043506], DiskBox[170, 0.0594207467043506], 
         DiskBox[171, 0.0594207467043506], DiskBox[172, 0.0594207467043506], 
         DiskBox[173, 0.0594207467043506], DiskBox[174, 0.0594207467043506], 
         DiskBox[175, 0.0594207467043506], DiskBox[176, 0.0594207467043506], 
         DiskBox[177, 0.0594207467043506], DiskBox[178, 0.0594207467043506], 
         DiskBox[179, 0.0594207467043506], DiskBox[180, 0.0594207467043506], 
         DiskBox[181, 0.0594207467043506], DiskBox[182, 0.0594207467043506], 
         DiskBox[183, 0.0594207467043506], DiskBox[184, 0.0594207467043506], 
         DiskBox[185, 0.0594207467043506], DiskBox[186, 0.0594207467043506], 
         DiskBox[187, 0.0594207467043506], DiskBox[188, 0.0594207467043506], 
         DiskBox[189, 0.0594207467043506], DiskBox[190, 0.0594207467043506], 
         DiskBox[191, 0.0594207467043506], 
         DiskBox[192, 0.0594207467043506]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8945658170596523`*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"98423730-5186-471f-9b2b-25e6013a3553"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SimpleCayleyGraphBuilder", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"PhaseGate", "[", 
     RowBox[{"2", ",", "1"}], "]"}], ",", 
    RowBox[{"PhaseGate", "[", 
     RowBox[{"2", ",", "2"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.894565858540708*^9, 3.8945658601931973`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"97adbacf-585d-440d-8890-e622ee9a3ea2"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
       0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
        0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
       0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
       0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 
       0, -1, 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, -1}}}, {{{1, 2}, {1, 3}, {4, 3}, {4, 
       5}, {2, 6}, {2, 7}, {3, 7}, {3, 8}, {5, 8}, {5, 9}, {6, 10}, {6, 11}, {
       7, 11}, {7, 12}, {8, 12}, {8, 13}, {9, 13}, {9, 10}, {10, 1}, {10, 
       4}, {11, 4}, {11, 14}, {12, 14}, {12, 15}, {13, 15}, {13, 1}, {14, 
       5}, {14, 16}, {15, 16}, {15, 2}, {16, 9}, {16, 6}}, Null}]]}, 
    TagBox[
     GraphicsGroupBox[
      GraphicsComplexBox[{{0.8629461489863826, 1.039773194882207}, {
       0.08507506216677241, 1.6915874627833194`}, {0.7471993213821423, 
       0.03280578224134478}, {1.4246503529772547`, 0.7137424960774214}, {
       2.3849068744982898`, 0.6846287588846507}, {0.7613387609677345, 
       2.3770083504101236`}, {0., 0.6966290623828699}, {1.7089527975683887`, 
       0.}, {2.4685886544575473`, 1.6812308024414893`}, {1.5664352797846113`, 
       1.813771878200979}, {0.5633617973356907, 1.4141278999695648`}, {
       0.9028838522039229, 0.5630599276176316}, {1.9051393325930295`, 
       0.9632233240979616}, {1.6073222222524248`, 1.3378008061383582`}, {
       1.0453902867923128`, 1.6635010874362481`}, {1.722058207222081, 
       2.3449660781101107`}}, {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[{{1, 2}, {1, 3}, {2, 6}, {2, 7}, {3, 7}, {3, 8}, {4, 3}, {4,
           5}, {5, 8}, {5, 9}, {6, 10}, {6, 11}, {7, 11}, {7, 12}, {8, 12}, {
          8, 13}, {9, 10}, {9, 13}, {10, 1}, {10, 4}, {11, 4}, {11, 14}, {12, 
          14}, {12, 15}, {13, 1}, {13, 15}, {14, 5}, {14, 16}, {15, 2}, {15, 
          16}, {16, 6}, {16, 9}}, 0.02630336557244181]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.02630336557244181], DiskBox[2, 0.02630336557244181], 
         DiskBox[3, 0.02630336557244181], DiskBox[4, 0.02630336557244181], 
         DiskBox[5, 0.02630336557244181], DiskBox[6, 0.02630336557244181], 
         DiskBox[7, 0.02630336557244181], DiskBox[8, 0.02630336557244181], 
         DiskBox[9, 0.02630336557244181], DiskBox[10, 0.02630336557244181], 
         DiskBox[11, 0.02630336557244181], DiskBox[12, 0.02630336557244181], 
         DiskBox[13, 0.02630336557244181], DiskBox[14, 0.02630336557244181], 
         DiskBox[15, 0.02630336557244181], 
         DiskBox[16, 0.02630336557244181]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8945658604526663`*^9},
 CellLabel->
  "Out[309]=",ExpressionUUID->"2e0b1e07-31be-44c0-bdb4-4d57d2261a3e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Undirected Cayley Graphs", "Subsubsection",
 CellChangeTimes->{{3.8945647714801483`*^9, 
  3.894564775855179*^9}},ExpressionUUID->"2ade80db-8067-4724-b5b8-\
c6a2dd56bf25"],

Cell["\<\
To replace pairs of oppositely-directed edges, which connect the same two \
vertices, with a single undirected edge the UndirectedCayleyGraphBuilder[] \
function is called.\
\>", "Text",
 CellChangeTimes->{{3.894564820740906*^9, 3.8945648815075274`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"16ae4533-497c-41ab-a9ee-25c5f7e150dc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UndirectedCayleyGraphBuilder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"CNOTGate", "[", 
      RowBox[{"2", ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
     RowBox[{"PhaseGate", "[", 
      RowBox[{"2", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      TemplateBox[<|
       "color" -> RGBColor[
         0.00784313725490196, 0.5098039215686274, 0.9294117647058824]|>,
       "RGBColorSwatchTemplate"], "}"}], ",", 
     RowBox[{"{", 
      TemplateBox[<|
       "color" -> RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]|>,
       
       "RGBColorSwatchTemplate"], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.894564901061043*^9, 3.894564911105885*^9}},
 CellLabel->
  "In[300]:=",ExpressionUUID->"74e6a192-6e08-4bb5-a8b4-dcc2e62f64e9"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}, {0, 1, 0, 0}}, {{1, 0, 
       0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
       1}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, 1], 0}, {0, 
         Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, 1], 0}, {0, 1, 0, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 
       0, -1, 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 
       0, -1, 0}, {0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, -1, 0}, {0, 
         Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}, {
       0, 1, 0, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
       0, 1}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, -1], 0}, {0, 
         Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, -1], 0}, {0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {
        0, 0, 
         Complex[0, -1], 0}, {0, 
         Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, -1], 0}, {0, 1, 0, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
        0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 1, 0}, {0, 
         Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 0}, {
       0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 1, 0}, {0, 
         Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
       0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
         Complex[0, 1], 0}, {0, 
         Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, 1], 0}, {0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
        0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, -1, 0}, {0, 
         Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, -1]}}}, {{{1, 3}, {4, 6}, {2, 4}, {3, 8}, {5, 9}, {6, 
       11}, {7, 12}, {8, 14}, {9, 15}, {10, 16}, {11, 2}, {12, 18}, {13, 
       19}, {14, 1}, {15, 21}, {16, 22}, {17, 23}, {18, 24}, {19, 25}, {20, 
       26}, {21, 5}, {22, 27}, {23, 28}, {24, 7}, {25, 29}, {26, 30}, {27, 
       10}, {28, 31}, {29, 13}, {30, 32}, {31, 17}, {32, 20}}, {{1, 2}, {4, 
       5}, {2, 1}, {3, 7}, {5, 4}, {6, 10}, {7, 3}, {8, 13}, {9, 12}, {10, 
       6}, {11, 17}, {12, 9}, {13, 8}, {14, 20}, {15, 19}, {16, 18}, {17, 
       11}, {18, 16}, {19, 15}, {20, 14}, {21, 26}, {22, 25}, {23, 24}, {24, 
       23}, {25, 22}, {26, 21}, {27, 30}, {28, 29}, {29, 28}, {30, 27}, {31, 
       32}, {32, 31}}, {1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 
       1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
        1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2}}, {
      EdgeStyle -> {UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {
            0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, -1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}, {0, -1, 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {
           0, 0, 0, 1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}, {0, -1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 0}, {0, -1, 0,
            0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, 
           1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, 1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}, {0, 
             Complex[0, -1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}, {0, 1, 0, 
           0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}, {0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 
            0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}, {0, 1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}, {0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}, {0, 
             Complex[0, -1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 0}, {0, -1, 0, 
           0}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, -1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}, {0, 1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}, {0, -1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}, {0, 1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}, {0, 1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}, {0, -1, 0, 
           0}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, -1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}, {0, -1, 0,
            0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 1}}, 
           1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}, {0, 
             Complex[0, 1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}, {0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}, {0, 
             Complex[0, -1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}, {0, -1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}, {0, -1, 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 0, 
            0, -1}, {0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, -1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}, {0, 1, 0, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}, {0, 1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}, {0, 
             Complex[0, 1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 0}, {0, -1, 0, 
           0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}, {0, 1, 0, 
           0}}, {{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, 1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}, {0, 
             Complex[0, 1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}, {0, 1, 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {
            0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, 1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0,
            1}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}, {0, -1, 0, 0}}, 
           1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}, {0, 1, 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}, {0, 
             Complex[0, 1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}, {0, -1, 0, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 
            0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}, {0, -1, 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, 1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}, {0, 1, 0, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 
           1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}, {0, 
             Complex[0, -1], 0, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}, {0, 1, 0, 
           0}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}, {0, 
             Complex[0, 1], 0, 0}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 0, 
            0, -1}, {0, 0, 
             Complex[0, -1], 0}, {0, 
             Complex[0, 1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}, {0, 1, 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}, {0, 1, 0, 0}}, 
           1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 
           0, 0, -1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, -1}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 0}, {0, 1, 0,
            0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, -1}}, 
           1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}, {0, 
             Complex[0, -1], 0, 0}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 0.9294117647058824]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}, {0, 1, 0, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[
            0.00784313725490196, 0.5098039215686274, 
             0.9294117647058824]}}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
p8BtsTaajrYCKVzCRXSME9G8bf6Ojv8DPNzQdA==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.02310651450492542], 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            1, {1.1318142103487971`, 1.5594125221561852`}, 2}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            1, {1.4571821316738873`, 1.848280682760707}, 2}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{1, 3}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{2, 4}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            3, {1.8449857164369279`, -0.02367034436294572}, 7}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            3, {1.7963754007135522`, 0.17147530315837056`}, 7}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{3, 8}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            4, {0.15842038595142457`, 2.001410476629363}, 5}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            4, {-0.13938082584097217`, 1.99514871764816}, 5}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{4, 6}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{5, 9}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            6, {0.7162549575665652, 3.399253729792926}, 10}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            6, {0.7621336088472576, 3.192599749513018}, 10}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{6, 11}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{7, 12}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            8, {3.2525267357476966`, 0.4047297853480326}, 13}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            8, {3.29709116269926, 0.19808959880278904`}, 13}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{8, 14}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            9, {0.5851471089156541, 0.5246065203156263}, 12}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            9, {0.44037280462703265`, 0.37513657791653526`}, 12}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{9, 15}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{10, 16}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            11, {2.0671490743702403`, 3.1659831765695285`}, 17}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            11, {2.0242577089785234`, 2.721629800767091}, 17}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{11, 2}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{12, 18}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{13, 19}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            14, {2.5824332709349074`, 1.8907044515759281`}, 20}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            14, {2.9745013133462668`, 1.8256745196556747`}, 20}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{14, 1}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            15, {1.990159304733937, 0.8738142333080471}, 19}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            15, {1.9467404666829065`, 0.42974535394115787`}, 19}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{15, 21}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            16, {1.430656243180244, 1.7081818024640678`}, 18}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            16, {1.0380719979090405`, 1.7728654962723098`}, 18}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{16, 22}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{17, 23}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{18, 24}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{19, 25}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{20, 26}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            21, {1.3126459593603303`, 2.3605852341123517`}, 26}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            21, {1.630645837426227, 2.041359474394417}, 26}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{21, 5}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            22, {2.8811155708778955`, 2.0425056225981226`}, 25}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            22, {2.5544310392807628`, 1.7536005858092762`}, 25}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{22, 27}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            23, {2.6993993899898947`, 1.2359858061536673`}, 24}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            23, {2.3820781696225035`, 1.5556886351842114`}, 24}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{23, 28}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{24, 7}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{25, 29}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{26, 30}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            27, {2.1706292515318055`, 3.623541896066566}, 30}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            27, {2.2174354581049003`, 3.427744573170206}, 30}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{27, 10}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            28, {4.152306037701016, 1.5977744060665182`}, 29}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            28, {3.854612904795964, 1.5919572708815903`}, 29}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{28, 31}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{29, 13}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{30, 32}, 0.037084137646778814`]}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            31, {3.4313469425339007`, 3.06988124108257}, 32}], 
            0.037084137646778814`]}}, 
         {RGBColor[
          0.00784313725490196, 0.5098039215686274, 0.9294117647058824], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            31, {3.576567133645834, 3.2186824359225694`}, 32}], 
            0.037084137646778814`]}}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{31, 17}, 0.037084137646778814`]}, 
         {RGBColor[0.05, 0.6900000000000001, 0.027450980392156862`], 
          ArrowBox[{32, 20}, 0.037084137646778814`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.037084137646778814], DiskBox[2, 0.037084137646778814], 
         DiskBox[3, 0.037084137646778814], DiskBox[4, 0.037084137646778814], 
         DiskBox[5, 0.037084137646778814], DiskBox[6, 0.037084137646778814], 
         DiskBox[7, 0.037084137646778814], DiskBox[8, 0.037084137646778814], 
         DiskBox[9, 0.037084137646778814], DiskBox[10, 0.037084137646778814], 
         DiskBox[11, 0.037084137646778814], DiskBox[12, 0.037084137646778814],
          DiskBox[13, 0.037084137646778814], 
         DiskBox[14, 0.037084137646778814], DiskBox[15, 0.037084137646778814],
          DiskBox[16, 0.037084137646778814], 
         DiskBox[17, 0.037084137646778814], DiskBox[18, 0.037084137646778814],
          DiskBox[19, 0.037084137646778814], 
         DiskBox[20, 0.037084137646778814], DiskBox[21, 0.037084137646778814],
          DiskBox[22, 0.037084137646778814], 
         DiskBox[23, 0.037084137646778814], DiskBox[24, 0.037084137646778814],
          DiskBox[25, 0.037084137646778814], 
         DiskBox[26, 0.037084137646778814], DiskBox[27, 0.037084137646778814],
          DiskBox[28, 0.037084137646778814], 
         DiskBox[29, 0.037084137646778814], DiskBox[30, 0.037084137646778814],
          DiskBox[31, 0.037084137646778814], 
         DiskBox[32, 0.037084137646778814]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8945649034976377`*^9, 3.8945649119528522`*^9}},
 CellLabel->
  "Out[300]=",ExpressionUUID->"09f4a5ca-5112-4a2e-b620-cb546ea77ee5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UndirectedCayleyGraphBuilder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardGate", "[", 
      RowBox[{"1", ",", "1"}], "]"}], ",", 
     RowBox[{"PhaseGate", "[", 
      RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Directive", "[", 
      RowBox[{
       TemplateBox[<|
        "color" -> RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`]|>,
        "RGBColorSwatchTemplate"], ",", "Dashed"}], "]"}], ",", 
     RowBox[{"Directive", "[", 
      RowBox[{
       TemplateBox[<|"color" -> RGBColor[0.24720000000000014`, 0.24, 0.6]|>,
        "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}]}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{3.894565295776361*^9},
 CellLabel->
  "In[302]:=",ExpressionUUID->"41bc04d6-b11c-44a3-920e-971160a4b85c"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0}, {0, 
       1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{1, 0}, {0, 
         Complex[0, 1]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{1, 0}, {
       0, -1}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 1}, {1, 
       0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 1}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1]}, {1, 0}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
          Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {-1, 
       0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1]}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, -1}, {1, 
       0}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
         Complex[0, -1], 0}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1]}, {-1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, -1}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1]}, {1, 0}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[0, 1], 0}, {0, 
         Complex[0, -1]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
         Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1]}, {
         Complex[0, -1], 0}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {-1,
        0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1]}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0}, {0, 1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{-2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
         Complex[0, -1], 0}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, -1]}, {-1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-1, 0}, {0, 
       1}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, -1]}, {
         Complex[0, -1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, 1], 0}, {0, -1}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-1, 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0}, {0, 1}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
         Complex[0, -1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
         Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
          Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0}, {0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, -1], 0}, {0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
         Complex[0, -1], 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}}, {Null, CompressedData["
1:eJwBEQPu/CFib1JiAgAAAIABAAACAAAAAQIBAwQFBAYCAQIEAwcDCAUEBQkG
CgYLBwMHDAgNCA4JDwkQCgYKEQsSCwIMEwwUDQgNFQ4WDgEPCQ8XEBgQGREa
ERsSCxIcEwwTHRQeFB8VIBUhFg4WIhcdFyMYEBgkGSUZBRoRGiYbJxsoHCkc
Kh0XHSseFB4sHy0fByAVIC4hLyEwIjEiMiMuIzMkNCQ1JRklNiYrJjcnGyc4
KDkoCikcKToqOyo8KyYrPSw+LD8tHy1ALiMuQS8hL0IwQzANMSIxRDJFMkYz
RDMPNCQ0RzVINUk2SjZLN0c3TDhNOE45KDlPOj06UDsqO1E8UjwSPTo9Ez4s
PlM/VD9VQFZAV0FTQVhCWUJaQzBDW0QzRFxFMkVdRl5GFkc3R19INUhgSV1J
GEo2SmFLYktjTGFMGk04TWROZU5mT2dPaFBkUGlRVVFqUjxSa1NBU2xUP1Rt
VVFVHlZAVm5Xb1dwWG5YIFlCWXFaclpzW3RbdVxxXHZdSV13XkZeeF9sX3lg
emB7YUxhfGJLYn1jeGMlZFBkfmVOZX9mfWYnZ09ngGiBaIJpgGkpaoNqhGtw
a4VsX2yGbYdtiG5YbolvV2+KcGtwLXFccYtyWnKMc4pzL3RbdI11jnWPdo12
MXeQd5F4Y3iSeYt5NHpgepN7jHuUfJN8lX1mfZZ+hn6Xf4h/mIBpgJmBaIGa
gpKCOYNqg5uEmoQ7hY+FnIZ+hj6HbYediH+InomdiZ+Kc4qgi3mLoYx7jKKN
do2jjnWOpI+Fj0OQd5ClkaSRRZKCkqaTfJOnlKOUSJWllUqWqJapl6eXTZii
mKqZnpmrmoSarJufm62cppxSnYmdrp6ZnlSfm59WoK+gsKGuoVmimKKxo5Sj
sqSRpLOllaW0ppymXqeXp7Wolqi2qbOpYqq0qmWrtqtnrLCst62xrbiuoa65
r6CvurCssG+xrbFysrqydLOps7u0qrS8tbm1erartr23u7eBuL24g7m1uYe6
srq+u7e7jry+vJC9uL2/vry+wL/Av6jAv8Cv4SMjuw==
       "], CompressedData["
1:eJxTTMoPSmJkYGBoABKMTKNwICEAAlMEaQ==
       "]}, {
      EdgeStyle -> {
        UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {-1, 
            0}}, {{-2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, -1}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 1}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{1, 0}, {0, 
             Complex[0, 1]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{-1, 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, -1}, {1, 0}}, {{0, -1}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, 1}, {-1, 
           0}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{1, 0}, {0, 
             Complex[0, -1]}}, {{1, 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 1}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0}, {0, 1}}, 1] -> {
          
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, {{
             Complex[0, 1], 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, -1}, {-1, 
           0}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, 1}, {1, 0}}, {{0, 1}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, {{
             Complex[0, -1], 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {-1, 0}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{0, -1}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, {{0, 
             Complex[0, 1]}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, -1}, {-1, 0}}, {{0, -1}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, -1}, {
             Complex[0, 1], 0}}, {{0, -1}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-1, 0}, {0, -1}}, {{-1, 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {1, 0}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{-1, 0}, {0, 
             Complex[0, 1]}}, {{-1, 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, 1}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-1, 0}, {0, 
           1}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, -1}, {
             Complex[0, -1], 0}}, {{0, -1}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{0, 1}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{1, 0}, {0, 
           1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {-1, 0}}, 1] -> {
          
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, -1}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0}, {0, -1}}, 1] -> {
          
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, 1}, {1, 
           0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {-1, 0}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{1, 0}, {
            0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, {{0, 
             Complex[0, -1]}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{1, 0}, {
           0, -1}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, 1}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, {{
             Complex[0, 1], 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 1}, {
             Complex[0, -1], 0}}, {{0, 1}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, 1}, {-1, 0}}, {{0, 1}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{-1, 0}, {0, 
             Complex[0, -1]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{-1, 0}, {0, 
             Complex[0, -1]}}, {{-1, 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{1, 0}, {0, -1}}, {{1, 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, -1}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-1, 0}, {0, 1}}, {{-1, 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, -1}, {1, 
           0}}, {{2^
             Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 1}, {
             Complex[0, 1], 0}}, {{0, 1}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{1, 0}, {0, 
             Complex[0, 1]}}, {{1, 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-1, 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, {{0, 
             Complex[0, 1]}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, {{0, 
             Complex[0, -1]}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {-1, 
            0}}, {{-2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-1, 0}, {
           0, -1}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {1, 0}}, {{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, -1}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^
              Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{-1, 0}, {0, 
             Complex[0, 1]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, -1}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{1, 0}, {0, 1}}, {{1, 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, -1}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
            
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-1, 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, {{
             Complex[0, -1], 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {1, 0}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^
              Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {1, 0}}, {{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{1, 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, 
         UndirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{
             Complex[0, 1], 0}, {0, 1}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}, UndirectedEdge[{{1, 0}, {0, 
             Complex[0, -1]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, 
         UndirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[0, -1], 0}, {0, 1}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[
            0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
            
            Dashing[{Small, Small}]]}, UndirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.24, 0.6], 
            Thickness[Large]]}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
A9SGHPwH+MZqkQ==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            1, {3.2170757667550256`, 2.1459692869047786`}, 2}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            1, {3.08528738523889, 1.991781735900751}, 2}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{1, 3}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{1, 14}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{2, 4}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{2, 11}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            3, {4.524472174603855, 2.6930599277628753`}, 7}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            3, {4.5240298863624355`, 2.2403074571364736`}, 7}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{3, 8}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            4, {2.4960484682995765`, 3.1953171290473166`}, 5}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            4, {2.891109869202677, 3.4237213626323046`}, 5}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{4, 6}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{5, 9}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{5, 25}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            6, {4.123757799190507, 2.456534782372137}, 10}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            6, {4.287963315530368, 2.2288002966593576`}, 10}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{6, 11}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{7, 12}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{7, 31}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            8, {2.8006456464821206`, 3.3239774774419177`}, 13}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            8, {3.080995878341635, 3.2963059998548}, 13}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{8, 14}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            9, {2.6448953100084953`, 5.290956610954708}, 15}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            9, {2.7801827447987013`, 5.019049494452578}, 15}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{9, 16}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{10, 17}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{10, 40}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            11, {4.82931656126875, 1.1723906243417437`}, 18}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            11, {4.6232417979487685`, 0.8414448741996093}, 18}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            12, {5.919349494974646, 3.3204167705125784`}, 19}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            12, {6.20376548843042, 3.3643748074207536`}, 19}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{12, 20}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{13, 21}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{13, 48}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            14, {1.4001226194634007`, 2.794666020124417}, 22}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            14, {1.5605884433365917`, 3.1528949508547304`}, 22}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{15, 23}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{15, 51}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            16, {1.5218727157442886`, 6.165804574376013}, 24}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            16, {1.9030813797160433`, 6.187631351025476}, 24}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{16, 25}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            17, {4.662152915998843, 4.242035021862437}, 26}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            17, {5.078290007003415, 4.25043090196764}, 26}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{17, 27}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{18, 28}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{18, 60}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{19, 29}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{19, 61}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            20, {7.404874581436647, 3.1921100638640807`}, 30}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            20, {7.567700277291701, 2.855666754969099}, 30}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{20, 31}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            21, {4.162602255664255, 5.018272597191371}, 32}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            21, {4.381197479302987, 4.655190561748911}, 32}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{21, 33}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{22, 34}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{22, 70}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            23, {4.825164146517358, 5.040696158886723}, 29}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            23, {4.619798608648033, 4.689488995176697}, 29}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{23, 35}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{24, 36}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{24, 73}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            25, {1.7818743275594924`, 4.140680028395636}, 37}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            25, {1.5245480764733697`, 4.1767488652788005`}, 37}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{26, 38}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{26, 76}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            27, {5.200037840795617, 3.4210062635860234`}, 39}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            27, {5.471440394771498, 3.283363290704276}, 39}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{27, 40}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            28, {6.580667097372644, 1.545133546206644}, 41}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            28, {6.896216907123236, 1.2683024461194017`}, 41}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{28, 42}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{29, 43}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{30, 44}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{30, 85}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            31, {5.883381104669868, 1.9309180849510514`}, 45}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            31, {5.728702929869344, 2.1221949015092703`}, 45}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{32, 46}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{32, 88}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            33, {3.119298082229559, 4.962347240659842}, 47}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            33, {3.392905299951996, 4.795142310409527}, 47}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{33, 48}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            34, {0.5787507762501548, 4.966792417793743}, 49}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            34, {0.987663113498745, 4.829664439707856}, 49}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{34, 50}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            35, {4.524869538649797, 6.026405140624006}, 46}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            35, {4.525643441178213, 5.670505696615526}, 46}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{35, 51}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            36, {3.042140239837655, 7.9458359816202675`}, 52}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            36, {3.143743079965793, 7.524080607662155}, 52}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{36, 53}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{37, 54}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{37, 99}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            38, {5.747644650009752, 5.143495690303866}, 43}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            38, {5.466976387167104, 4.944581373252282}, 43}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{38, 55}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{39, 56}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{39, 102}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            40, {4.901341459879636, 1.3392770514158385`}, 57}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            40, {4.545541962522126, 1.395653863013029}, 57}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{41, 58}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{41, 105}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            42, {6.407843735408281, 0.600268982429969}, 59}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            42, {6.548448701591701, 0.3319124469681543}, 59}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{42, 60}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{43, 61}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            44, {7.895657450341786, 4.896264621084801}, 62}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            44, {8.306441171398472, 5.024773950102062}, 62}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{44, 63}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{45, 64}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{45, 112}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{46, 65}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{47, 66}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{47, 115}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            48, {1.9567778699103318`, 3.1093539767163194`}, 67}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            48, {1.7030562018617952`, 3.3896053573633327`}, 67}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{49, 68}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{49, 118}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            50, {-0.09696097643070194, 4.091070272402152}, 69}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            50, {0.19510169086569662`, 4.123346937223701}, 69}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{50, 70}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            51, {2.333055738037914, 5.927357341967227}, 68}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            51, {2.402859644126043, 6.271541620166363}, 68}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{52, 71}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{52, 121}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            53, {2.0571955860895916`, 7.884666995075605}, 72}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            53, {2.194175146540397, 7.618110292943056}, 72}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{53, 73}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            54, {2.241879275658384, 5.133277526341588}, 74}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            54, {2.6277983140826984`, 4.919175318639441}, 74}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{54, 75}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            55, {4.6360380784058, 6.966988043068884}, 71}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            55, {4.9722899372966305`, 7.031560838776266}, 71}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{55, 76}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            56, {6.549974797308923, 5.066910902143717}, 77}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            56, {6.789349471119331, 4.794976481848414}, 77}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{56, 78}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{57, 79}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{57, 130}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            58, {6.839658328988758, 3.254466053687314}, 61}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            58, {7.1106851018971815`, 3.4761530943581396`}, 61}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{58, 80}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{59, 81}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{59, 132}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            60, {4.366640894857266, -0.19215983567791353`}, 82}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            60, {4.3590238666606735`, 0.2153202394314682}, 82}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{62, 83}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{62, 134}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            63, {8.417494752483767, 4.1120101085611545`}, 84}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            63, {8.709586188515628, 4.140855730861826}, 84}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{63, 85}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            64, {5.9716171226071255`, 3.307150709576636}, 86}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            64, {6.3654947058517655`, 3.0925673716079216`}, 86}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{64, 87}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            65, {6.590385694307997, 6.310253781342929}, 83}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            65, {6.674323907088767, 5.987140520745893}, 83}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{65, 88}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            66, {3.7550183202459766`, 6.9107161251418745`}, 89}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            66, {4.1117261721313465`, 6.8533234077135186`}, 89}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{66, 90}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{67, 91}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{67, 143}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{68, 92}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{69, 93}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{69, 145}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            70, {0.9361517880450624, 2.1457688743184296`}, 94}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            70, {0.5679622794236874, 1.9532838958473255`}, 94}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{71, 95}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{72, 96}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{72, 148}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            73, {0.8245120410097153, 6.055939835064527}, 93}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            73, {0.4631632678403525, 6.26565376602323}, 93}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{74, 97}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{74, 149}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            75, {2.406486119050948, 3.2386200252342165`}, 98}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            75, {2.2368347167258835`, 3.0103575167538223`}, 98}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{75, 99}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            76, {3.971631967214844, 5.923440183605256}, 97}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            76, {4.086088806046259, 6.2023729280232365`}, 97}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{77, 100}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{77, 151}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            78, {5.472325964065735, 4.924245069154308}, 101}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            78, {5.750337517561979, 4.884633740475073}, 101}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{78, 102}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            79, {5.914309505321909, 1.109262606606016}, 103}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            79, {6.130615951901406, 0.7455982171871112}, 103}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{79, 104}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            80, {7.572052505409504, 4.122722275361043}, 100}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            80, {7.986157083578259, 4.145890380046367}, 100}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{80, 105}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            81, {7.782074215808192, 2.174079936535967}, 85}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            81, {8.145133033726802, 1.9653088412298432`}, 85}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{81, 106}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{82, 107}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{82, 156}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{83, 108}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{84, 109}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{84, 158}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{86, 110}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{86, 159}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            87, {4.535734044040006, 2.0229694587177676`}, 111}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            87, {4.669831729204264, 2.2904317157922156`}, 111}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{87, 112}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            88, {6.347925116193015, 5.234517083251863}, 110}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            88, {6.181497246246143, 4.996793222983837}, 110}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{89, 113}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{89, 161}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            90, {4.407561534151208, 6.036201818321108}, 114}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            90, {4.571396611595549, 5.816060744903138}, 114}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{90, 115}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            91, {0.5376965357481635, 4.042988331632051}, 116}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            91, {0.9574101250295904, 4.049130017334565}, 116}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{91, 117}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            92, {2.5005690114868275`, 7.493864843277064}, 113}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            92, {2.7199574553857304`, 7.1255657014191565`}, 113}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{92, 118}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{93, 119}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{94, 120}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{94, 166}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            95, {6.264028983649976, 7.554287053559139}, 108}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            95, {6.053853059322072, 7.168507728352856}, 108}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{95, 121}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            96, {4.228237070338917, 8.395279019021265}, 122}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            96, {4.231876913646032, 7.990133278523109}, 122}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{96, 123}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{97, 124}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{98, 125}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{98, 169}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            99, {1.8308643208071627`, 2.1256025107281054`}, 120}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            99, {1.4417645955999452`, 2.0942398554840147`}, 120}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{100, 126}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{101, 127}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{101, 170}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            102, {4.370157044635217, 3.2269883525592835`}, 125}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            102, {4.150141484546977, 3.5805625764231412`}, 125}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{103, 128}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{103, 171}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            104, {4.274547225939683, 0.06018173435504067}, 129}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            104, {4.269780334537496, 0.23126735348259161`}, 129}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{104, 130}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            105, {7.6789378877457635`, 2.119744206742188}, 128}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            105, {7.496997708040005, 2.2215673933737836`}, 128}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            106, {6.719142856672487, 2.044844844634469}, 131}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            106, {7.101259306897933, 2.0601992002802416`}, 131}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{106, 132}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            107, {3.9708674608673995`, 1.1202519615019932`}, 112}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            107, {4.1618765263417306`, 0.7594508567376341}, 112}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{107, 133}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{108, 134}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            109, {7.7023995951191235`, 6.0913894270865425`}, 135}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            109, {8.070561154324166, 6.276962164928841}, 135}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{109, 136}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{110, 137}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{111, 138}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{111, 176}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{113, 139}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{114, 140}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{114, 177}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            115, {4.060495473368133, 4.023559186259541}, 138}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            115, {3.642299122883548, 4.031395916399268}, 138}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{116, 141}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{116, 178}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            117, {1.008203630142207, 2.1153222956453557`}, 142}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            117, {0.8327690402079929, 2.0657304675687937`}, 142}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{117, 143}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            118, {1.1071796487179055`, 5.9863760869827525`}, 141}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            118, {0.9171778904658847, 6.0974443261464035`}, 141}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            119, {1.0293098530772837`, 5.376163281949595}, 144}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            119, {1.1913762378548838`, 5.042618027409246}, 144}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{119, 145}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{120, 146}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            121, {4.362778397896493, 8.022152628062697}, 139}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            121, {4.357005445582157, 8.184869122476611}, 139}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{122, 147}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{122, 181}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            123, {3.9965221380560276`, 7.39340407602765}, 140}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            123, {3.800725729847788, 7.0543598618301235`}, 140}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{123, 148}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            124, {4.390989982990466, 7.425557737896691}, 147}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            124, {4.57742070914231, 7.0740981452516705`}, 147}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{124, 149}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{125, 150}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            126, {7.517587152412281, 6.092020797684439}, 134}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            126, {7.709038984130478, 6.11334547897786}, 134}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{126, 151}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            127, {7.203576027082372, 5.440323186584628}, 136}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            127, {7.048566432829794, 5.074320768411435}, 136}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{127, 152}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{128, 153}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{129, 154}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{129, 183}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            130, {3.036815301361962, 0.3447264264336411}, 146}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            130, {3.1352910073088442`, 0.7492020172183984}, 146}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{131, 155}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{131, 184}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            132, {5.568925122026903, 0.294059377516866}, 154}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            132, {5.47177021570448, 0.7147212022903984}, 154}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            133, {1.7908762802532463`, 1.1841871702518303`}, 143}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            133, {2.096202060362535, 1.4727471923130373`}, 143}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{133, 156}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{135, 157}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{135, 185}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{136, 158}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            137, {6.826886135774731, 6.131536569133516}, 157}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            137, {7.218272571663101, 6.155085342044467}, 157}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{137, 159}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{138, 160}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{139, 161}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{140, 162}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{141, 163}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{142, 164}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{142, 187}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{144, 165}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{144, 188}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            145, {0.7086161225364357, 3.342434972942129}, 164}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            145, {0.2987364669350652, 3.213308911912748}, 164}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{146, 166}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{147, 167}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            148, {2.023474724469417, 6.651032792676569}, 163}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            148, {1.703737757732002, 6.929944285541374}, 163}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            149, {2.854183866832613, 6.094223230574137}, 165}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            149, {2.703524695914242, 6.2831760927930445`}, 165}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            150, {4.061582598689144, 2.5504541524035154`}, 168}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            150, {4.058313615042607, 2.192958222038436}, 168}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{150, 169}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            151, {6.375412660133128, 6.678101146480205}, 167}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            151, {6.686181966924802, 6.9554288526066115`}, 167}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            152, {5.397335543578018, 6.102223338078589}, 162}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            152, {5.537646713137472, 6.240938850993676}, 162}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{152, 170}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            153, {7.631114290637552, 3.4034472778033167`}, 158}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            153, {8.041027478827788, 3.2665973704035305`}, 158}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{153, 171}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{154, 172}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            155, {6.853990281736274, 4.098108455534848}, 159}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            155, {7.112622612225345, 4.067425155844632}, 159}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{155, 173}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            156, {2.1526999852939683`, 0.2958269108127046}, 166}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            156, {2.2962663373023258`, 0.5714553632402563}, 166}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{157, 174}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            160, {2.892589795539959, 3.089419462184501}, 175}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            160, {3.15901823236216, 3.3011968325647127`}, 175}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{160, 176}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            161, {5.639768734950417, 7.917283414822588}, 174}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            161, {5.54334299477364, 7.508491494920271}, 174}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{162, 177}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{163, 178}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{164, 179}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{165, 180}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{167, 181}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{168, 182}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{168, 191}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            169, {2.0124143439892235`, 1.9395763661673473`}, 179}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            169, {1.9334936046969853`, 2.255333205740463}, 179}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            170, {4.061094558055215, 5.5311929560527595`}, 180}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            170, {4.062600731612038, 5.983202125605063}, 180}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            171, {6.207340713644063, 1.9552999482645546`}, 182}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            171, {6.273464619060087, 2.303517581244908}, 182}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            172, {3.6545226742958445`, 1.2309580964939029`}, 176}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            172, {3.9921831121038136`, 1.288648719172714}, 176}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{172, 183}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            173, {5.779758542477707, 4.839099793107456}, 177}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            173, {6.182044611794414, 5.0625105956399965`}, 177}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{173, 184}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{174, 185}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{175, 186}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{175, 192}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            178, {1.75249803195448, 4.934800704207028}, 186}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            178, {1.4829037208258227`, 4.708968954161844}, 186}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{179, 187}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{180, 188}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            181, {6.460213745751867, 7.9205103785020565`}, 185}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            181, {6.327895913757278, 7.62822012566002}, 185}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{182, 189}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            183, {2.3455564589258766`, 0.6890690197704019}, 187}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            183, {2.552436101561303, 1.0785477446627418`}, 187}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            184, {5.9840943788131975`, 2.9390444403999454`}, 189}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            184, {5.8463160560772645`, 3.2169974733630156`}, 189}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{186, 190}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            188, {2.6770647287523337`, 4.898526463414662}, 190}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            188, {2.3901691814814745`, 4.852268317224532}, 190}], 
            0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{189, 191}, 0.0603436310695544]}}, 
         {RGBColor[0.24720000000000014`, 0.24, 0.6], Thickness[Large], 
          {Arrowheads[0.], ArrowBox[{190, 192}, 0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            191, {3.781099755537851, 3.177979943841337}, 192}], 
            0.0603436310695544]}}, 
         {RGBColor[
          0.8901960784313725, 0.011764705882352941`, 0.49019607843137253`], 
          Dashing[{Small, Small}], 
          {Arrowheads[0.], 
           ArrowBox[BezierCurveBox[{
            191, {3.9854580074615416`, 3.530072704329332}, 192}], 
            0.0603436310695544]}}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0603436310695544], DiskBox[2, 0.0603436310695544], 
         DiskBox[3, 0.0603436310695544], DiskBox[4, 0.0603436310695544], 
         DiskBox[5, 0.0603436310695544], DiskBox[6, 0.0603436310695544], 
         DiskBox[7, 0.0603436310695544], DiskBox[8, 0.0603436310695544], 
         DiskBox[9, 0.0603436310695544], DiskBox[10, 0.0603436310695544], 
         DiskBox[11, 0.0603436310695544], DiskBox[12, 0.0603436310695544], 
         DiskBox[13, 0.0603436310695544], DiskBox[14, 0.0603436310695544], 
         DiskBox[15, 0.0603436310695544], DiskBox[16, 0.0603436310695544], 
         DiskBox[17, 0.0603436310695544], DiskBox[18, 0.0603436310695544], 
         DiskBox[19, 0.0603436310695544], DiskBox[20, 0.0603436310695544], 
         DiskBox[21, 0.0603436310695544], DiskBox[22, 0.0603436310695544], 
         DiskBox[23, 0.0603436310695544], DiskBox[24, 0.0603436310695544], 
         DiskBox[25, 0.0603436310695544], DiskBox[26, 0.0603436310695544], 
         DiskBox[27, 0.0603436310695544], DiskBox[28, 0.0603436310695544], 
         DiskBox[29, 0.0603436310695544], DiskBox[30, 0.0603436310695544], 
         DiskBox[31, 0.0603436310695544], DiskBox[32, 0.0603436310695544], 
         DiskBox[33, 0.0603436310695544], DiskBox[34, 0.0603436310695544], 
         DiskBox[35, 0.0603436310695544], DiskBox[36, 0.0603436310695544], 
         DiskBox[37, 0.0603436310695544], DiskBox[38, 0.0603436310695544], 
         DiskBox[39, 0.0603436310695544], DiskBox[40, 0.0603436310695544], 
         DiskBox[41, 0.0603436310695544], DiskBox[42, 0.0603436310695544], 
         DiskBox[43, 0.0603436310695544], DiskBox[44, 0.0603436310695544], 
         DiskBox[45, 0.0603436310695544], DiskBox[46, 0.0603436310695544], 
         DiskBox[47, 0.0603436310695544], DiskBox[48, 0.0603436310695544], 
         DiskBox[49, 0.0603436310695544], DiskBox[50, 0.0603436310695544], 
         DiskBox[51, 0.0603436310695544], DiskBox[52, 0.0603436310695544], 
         DiskBox[53, 0.0603436310695544], DiskBox[54, 0.0603436310695544], 
         DiskBox[55, 0.0603436310695544], DiskBox[56, 0.0603436310695544], 
         DiskBox[57, 0.0603436310695544], DiskBox[58, 0.0603436310695544], 
         DiskBox[59, 0.0603436310695544], DiskBox[60, 0.0603436310695544], 
         DiskBox[61, 0.0603436310695544], DiskBox[62, 0.0603436310695544], 
         DiskBox[63, 0.0603436310695544], DiskBox[64, 0.0603436310695544], 
         DiskBox[65, 0.0603436310695544], DiskBox[66, 0.0603436310695544], 
         DiskBox[67, 0.0603436310695544], DiskBox[68, 0.0603436310695544], 
         DiskBox[69, 0.0603436310695544], DiskBox[70, 0.0603436310695544], 
         DiskBox[71, 0.0603436310695544], DiskBox[72, 0.0603436310695544], 
         DiskBox[73, 0.0603436310695544], DiskBox[74, 0.0603436310695544], 
         DiskBox[75, 0.0603436310695544], DiskBox[76, 0.0603436310695544], 
         DiskBox[77, 0.0603436310695544], DiskBox[78, 0.0603436310695544], 
         DiskBox[79, 0.0603436310695544], DiskBox[80, 0.0603436310695544], 
         DiskBox[81, 0.0603436310695544], DiskBox[82, 0.0603436310695544], 
         DiskBox[83, 0.0603436310695544], DiskBox[84, 0.0603436310695544], 
         DiskBox[85, 0.0603436310695544], DiskBox[86, 0.0603436310695544], 
         DiskBox[87, 0.0603436310695544], DiskBox[88, 0.0603436310695544], 
         DiskBox[89, 0.0603436310695544], DiskBox[90, 0.0603436310695544], 
         DiskBox[91, 0.0603436310695544], DiskBox[92, 0.0603436310695544], 
         DiskBox[93, 0.0603436310695544], DiskBox[94, 0.0603436310695544], 
         DiskBox[95, 0.0603436310695544], DiskBox[96, 0.0603436310695544], 
         DiskBox[97, 0.0603436310695544], DiskBox[98, 0.0603436310695544], 
         DiskBox[99, 0.0603436310695544], DiskBox[100, 0.0603436310695544], 
         DiskBox[101, 0.0603436310695544], DiskBox[102, 0.0603436310695544], 
         DiskBox[103, 0.0603436310695544], DiskBox[104, 0.0603436310695544], 
         DiskBox[105, 0.0603436310695544], DiskBox[106, 0.0603436310695544], 
         DiskBox[107, 0.0603436310695544], DiskBox[108, 0.0603436310695544], 
         DiskBox[109, 0.0603436310695544], DiskBox[110, 0.0603436310695544], 
         DiskBox[111, 0.0603436310695544], DiskBox[112, 0.0603436310695544], 
         DiskBox[113, 0.0603436310695544], DiskBox[114, 0.0603436310695544], 
         DiskBox[115, 0.0603436310695544], DiskBox[116, 0.0603436310695544], 
         DiskBox[117, 0.0603436310695544], DiskBox[118, 0.0603436310695544], 
         DiskBox[119, 0.0603436310695544], DiskBox[120, 0.0603436310695544], 
         DiskBox[121, 0.0603436310695544], DiskBox[122, 0.0603436310695544], 
         DiskBox[123, 0.0603436310695544], DiskBox[124, 0.0603436310695544], 
         DiskBox[125, 0.0603436310695544], DiskBox[126, 0.0603436310695544], 
         DiskBox[127, 0.0603436310695544], DiskBox[128, 0.0603436310695544], 
         DiskBox[129, 0.0603436310695544], DiskBox[130, 0.0603436310695544], 
         DiskBox[131, 0.0603436310695544], DiskBox[132, 0.0603436310695544], 
         DiskBox[133, 0.0603436310695544], DiskBox[134, 0.0603436310695544], 
         DiskBox[135, 0.0603436310695544], DiskBox[136, 0.0603436310695544], 
         DiskBox[137, 0.0603436310695544], DiskBox[138, 0.0603436310695544], 
         DiskBox[139, 0.0603436310695544], DiskBox[140, 0.0603436310695544], 
         DiskBox[141, 0.0603436310695544], DiskBox[142, 0.0603436310695544], 
         DiskBox[143, 0.0603436310695544], DiskBox[144, 0.0603436310695544], 
         DiskBox[145, 0.0603436310695544], DiskBox[146, 0.0603436310695544], 
         DiskBox[147, 0.0603436310695544], DiskBox[148, 0.0603436310695544], 
         DiskBox[149, 0.0603436310695544], DiskBox[150, 0.0603436310695544], 
         DiskBox[151, 0.0603436310695544], DiskBox[152, 0.0603436310695544], 
         DiskBox[153, 0.0603436310695544], DiskBox[154, 0.0603436310695544], 
         DiskBox[155, 0.0603436310695544], DiskBox[156, 0.0603436310695544], 
         DiskBox[157, 0.0603436310695544], DiskBox[158, 0.0603436310695544], 
         DiskBox[159, 0.0603436310695544], DiskBox[160, 0.0603436310695544], 
         DiskBox[161, 0.0603436310695544], DiskBox[162, 0.0603436310695544], 
         DiskBox[163, 0.0603436310695544], DiskBox[164, 0.0603436310695544], 
         DiskBox[165, 0.0603436310695544], DiskBox[166, 0.0603436310695544], 
         DiskBox[167, 0.0603436310695544], DiskBox[168, 0.0603436310695544], 
         DiskBox[169, 0.0603436310695544], DiskBox[170, 0.0603436310695544], 
         DiskBox[171, 0.0603436310695544], DiskBox[172, 0.0603436310695544], 
         DiskBox[173, 0.0603436310695544], DiskBox[174, 0.0603436310695544], 
         DiskBox[175, 0.0603436310695544], DiskBox[176, 0.0603436310695544], 
         DiskBox[177, 0.0603436310695544], DiskBox[178, 0.0603436310695544], 
         DiskBox[179, 0.0603436310695544], DiskBox[180, 0.0603436310695544], 
         DiskBox[181, 0.0603436310695544], DiskBox[182, 0.0603436310695544], 
         DiskBox[183, 0.0603436310695544], DiskBox[184, 0.0603436310695544], 
         DiskBox[185, 0.0603436310695544], DiskBox[186, 0.0603436310695544], 
         DiskBox[187, 0.0603436310695544], DiskBox[188, 0.0603436310695544], 
         DiskBox[189, 0.0603436310695544], DiskBox[190, 0.0603436310695544], 
         DiskBox[191, 0.0603436310695544], 
         DiskBox[192, 0.0603436310695544]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.8945652987897778`*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"b23cdbde-9839-48fd-b265-961e11caa809"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Normalized Cayley Graphs", "Subsubsection",
 CellChangeTimes->{{3.89456478389489*^9, 
  3.894564788095934*^9}},ExpressionUUID->"3e102a88-b5d8-4d16-928a-\
6d70753bcfc3"],

Cell[TextData[{
 "We incorporate functions to quotient a Cayley graph by an element which \
acts as a phase on the group. Examples are given with the Clifford group, and \
Clifford subgroups, where we quotient by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", "HP", ")"}], "3"], "."}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "964a0688-66c8-4843-bb32-39581261b3a6"]
}], "Text",
 CellChangeTimes->{{3.894565316449295*^9, 3.894565371414751*^9}, {
  3.894565413387332*^9, 3.8945654467404127`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"84f23204-e494-489e-b168-945fd00016a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormedCayleyGraphBuilder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardGate", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"PhaseGate", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      TemplateBox[<|"color" -> RGBColor[0., 0., 0.]|>,
       "RGBColorSwatchTemplate"], "}"}], ",", 
     RowBox[{"{", 
      TemplateBox[<|
       "color" -> RGBColor[
         0.996078431372549, 0.3607843137254902, 0.027450980392156862`]|>,
       "RGBColorSwatchTemplate"], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.894565526268364*^9},
 CellLabel->
  "In[303]:=",ExpressionUUID->"7d8b2a30-d15e-4b80-a740-2f64c7971196"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, -1}}, {{1, 
       0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, {{1, 1, 0, 0}, {
         Complex[0, 1], 
         Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
         Complex[0, 1], 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 
         Complex[0, 1], 0, 0}, {1, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, 1, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
       0, -1}}, {{1, 
         Complex[0, -1], 0, 0}, {
         Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, -1], 1}}, {{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 
       0, -1, 1}}, {{1, 
         Complex[0, 1], 0, 0}, {
         Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, 1], 1}}, {{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 
       0, 1, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 
         Complex[0, -1], 0, 0}, {1, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, 1, 
         Complex[0, 1]}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1,
        0}}, {{1, 1, 0, 0}, {
         Complex[0, -1], 
         Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
         Complex[0, -1], 
         Complex[0, 1]}}, {{1, 
         Complex[0, 1], 0, 0}, {-1, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, -1, 
         Complex[0, 1]}}, {{1, -1, 0, 0}, {
         Complex[0, 1], 
         Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
         Complex[0, 1], 
         Complex[0, 1]}}, {{1, 
         Complex[0, -1], 0, 0}, {
         Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, 1], -1}}, {{0, 
         Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 1, 0}}, {{0, 
         Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 
         Complex[0, 1], 0, 0}, {
         Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, -1], -1}}, {{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 
       1, -1}, {0, 0, -1, -1}}, {{1, -1, 0, 0}, {
         Complex[0, -1], 
         Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
         Complex[0, -1], 
         Complex[0, -1]}}, {{1, 
         Complex[0, -1], 0, 0}, {-1, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, -1, 
         Complex[0, -1]}}, {{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0,
        1, 0}}}, {{{1, 2}, {1, 3}, {4, 5}, {4, 6}, {2, 1}, {2, 4}, {3, 7}, {3,
        8}, {5, 4}, {5, 9}, {6, 10}, {6, 11}, {7, 3}, {7, 12}, {8, 13}, {8, 
       14}, {9, 14}, {9, 15}, {10, 6}, {10, 16}, {11, 12}, {11, 2}, {12, 
       11}, {12, 17}, {13, 8}, {13, 18}, {14, 9}, {14, 1}, {15, 19}, {15, 
       20}, {16, 20}, {16, 21}, {17, 22}, {17, 23}, {18, 23}, {18, 24}, {19, 
       15}, {19, 13}, {20, 16}, {20, 5}, {21, 24}, {21, 22}, {22, 17}, {22, 
       10}, {23, 18}, {23, 7}, {24, 21}, {24, 19}}, Null, {1, 2, 1, 2, 1, 2, 
       1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
        1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2}}, {
      EdgeStyle -> {
        DirectedEdge[{{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {0, 
           0, -1, -1}}, {{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1,
            0}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 0, -1, 
           1}}, {{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, {{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, {{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, {{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, {{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 
           0, 0, 1}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 0, 1, 
           1}}, {{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, {{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 
           1, -1}}, {{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 0, -1, 1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 
           1, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, {{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, {{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 0, 1, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, {{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 
           0, 1, -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, -1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, {{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {
           0, 0, -1, -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 0, -1, 
           1}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {0, 
           0, -1, -1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, {{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, {{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0,
            0, -1, 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, {{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {
           0, 0, 1, 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, {{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {0, 
           0, -1, -1}}, {{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{0, -1, 0, 0}, {1, 0, 0, 0}, {0,
            0, 0, -1}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 0, 1, 
           1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, {{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
Jbrj37fvaPgPe8TnJbe/+R/17drs
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.02343182390762282], 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           1, {1.2048132670868141`, 2.602312386715088}, 2}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{1, 3}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           2, {0.9047698871859424, 2.4721211707862993`}, 1}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{2, 4}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           3, {0.2764374307552838, 2.105706141773132}, 7}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{3, 8}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           4, {2.6032593509406183`, 2.4051292649434677`}, 5}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{4, 6}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           5, {2.819915194919955, 2.1101673910413883`}, 4}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{5, 9}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           6, {2.6316146447227506`, 0.7108768332982103}, 10}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{6, 11}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           7, {-0.09921548788095673, 2.1639911591801235`}, 3}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{7, 12}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           8, {1.4036950205202858`, 3.2004088601600107`}, 13}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{8, 14}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           9, {2.166162581239544, 3.3722451008023824`}, 14}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{9, 15}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           10, {2.4248211878047083`, 0.4567992371831846}, 6}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{10, 16}, 0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{11, 2}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           11, {0.8272256813602945, 0.7451979600594573}, 12}], 
           0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           12, {0.700339874590102, 1.0134127343764103`}, 11}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{12, 17}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           13, {1.1974956291670298`, 2.946019795493135}, 8}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{13, 18}, 0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{14, 1}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           14, {2.230632060429647, 3.752478822672503}, 9}], 
           0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           15, {3.1327479217120877`, 2.645583992280982}, 19}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{15, 20}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           16, {3.556073565643211, 1.5479033684114194`}, 20}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{16, 21}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           17, {1.6636830129652058`, 0.2878230723550304}, 22}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{17, 23}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           18, {1.230415560175098, 1.2552821845685462`}, 23}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{18, 24}, 0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{19, 13}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           19, {3.0062989261363198`, 2.915277043091886}, 15}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{20, 5}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           20, {3.9321019779804893`, 1.4885672666870504`}, 16}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{21, 22}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           21, {2.6234101746978884`, 1.0570172981406372`}, 24}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{22, 10}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           22, {1.5991661087965305`, -0.09165239910689933}, 17}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{23, 7}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           23, {1.013601651835421, 1.5485440579582215`}, 18}], 
           0.03593782614059052]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{24, 19}, 0.03593782614059052]}, 
         {RGBColor[0., 0., 0.], 
          ArrowBox[BezierCurveBox[{
           24, {2.924894374571982, 1.1864326911074454`}, 21}], 
           0.03593782614059052]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03593782614059052], DiskBox[2, 0.03593782614059052], 
         DiskBox[3, 0.03593782614059052], DiskBox[4, 0.03593782614059052], 
         DiskBox[5, 0.03593782614059052], DiskBox[6, 0.03593782614059052], 
         DiskBox[7, 0.03593782614059052], DiskBox[8, 0.03593782614059052], 
         DiskBox[9, 0.03593782614059052], DiskBox[10, 0.03593782614059052], 
         DiskBox[11, 0.03593782614059052], DiskBox[12, 0.03593782614059052], 
         DiskBox[13, 0.03593782614059052], DiskBox[14, 0.03593782614059052], 
         DiskBox[15, 0.03593782614059052], DiskBox[16, 0.03593782614059052], 
         DiskBox[17, 0.03593782614059052], DiskBox[18, 0.03593782614059052], 
         DiskBox[19, 0.03593782614059052], DiskBox[20, 0.03593782614059052], 
         DiskBox[21, 0.03593782614059052], DiskBox[22, 0.03593782614059052], 
         DiskBox[23, 0.03593782614059052], 
         DiskBox[24, 0.03593782614059052]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.894565527907423*^9},
 CellLabel->
  "Out[303]=",ExpressionUUID->"bdfc24a5-9a28-4861-be0a-9f543044b4d5"]
}, Open  ]],

Cell["\<\
An undirected version of the normed graph is available with the \
NormedUndirectedCayleyGraphBuilder[] function.\
\>", "Text",
 CellChangeTimes->{{3.894565549625702*^9, 3.8945655683538723`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"33ef7d5f-2d27-48a6-980d-af0919cd47f4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NormedUndirectedCayleyGraphBuilder", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"HadamardGate", "[", 
      RowBox[{"2", ",", "1"}], "]"}], ",", 
     RowBox[{"PhaseGate", "[", 
      RowBox[{"2", ",", "1"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      TemplateBox[<|"color" -> RGBColor[0., 0., 0.]|>,
       "RGBColorSwatchTemplate"], "}"}], ",", 
     RowBox[{"{", 
      TemplateBox[<|
       "color" -> RGBColor[
         0.996078431372549, 0.3607843137254902, 0.027450980392156862`]|>,
       "RGBColorSwatchTemplate"], "}"}]}], "}"}]}], "]"}]], "Input",
 CellLabel->
  "In[307]:=",ExpressionUUID->"474a687b-382c-45fc-8704-78e5db4f559e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, -1}}, {{1, 
       0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, {{1, 1, 0, 0}, {
         Complex[0, 1], 
         Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
         Complex[0, 1], 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 
         Complex[0, 1], 0, 0}, {1, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, 1, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
       0, -1}}, {{1, 
         Complex[0, -1], 0, 0}, {
         Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, -1], 1}}, {{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 
       0, -1, 1}}, {{1, 
         Complex[0, 1], 0, 0}, {
         Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, 1], 1}}, {{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 
       0, 1, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 
         Complex[0, -1], 0, 0}, {1, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, 1, 
         Complex[0, 1]}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1,
        0}}, {{1, 1, 0, 0}, {
         Complex[0, -1], 
         Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
         Complex[0, -1], 
         Complex[0, 1]}}, {{1, 
         Complex[0, 1], 0, 0}, {-1, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, -1, 
         Complex[0, 1]}}, {{1, -1, 0, 0}, {
         Complex[0, 1], 
         Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
         Complex[0, 1], 
         Complex[0, 1]}}, {{1, 
         Complex[0, -1], 0, 0}, {
         Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, 1], -1}}, {{0, 
         Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 1, 0}}, {{0, 
         Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 
         Complex[0, 1], 0, 0}, {
         Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, -1], -1}}, {{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 
       1, -1}, {0, 0, -1, -1}}, {{1, -1, 0, 0}, {
         Complex[0, -1], 
         Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
         Complex[0, -1], 
         Complex[0, -1]}}, {{1, 
         Complex[0, -1], 0, 0}, {-1, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 
         Complex[0, -1]}, {0, 0, -1, 
         Complex[0, -1]}}, {{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0,
        1, 0}}}, {{{15, 20}, {9, 15}, {24, 19}, {22, 10}, {5, 9}, {20, 5}, {
       14, 1}, {1, 3}, {21, 22}, {17, 23}, {18, 24}, {13, 18}, {19, 13}, {16, 
       21}, {10, 16}, {11, 2}, {8, 14}, {3, 8}, {2, 4}, {23, 7}, {6, 11}, {4, 
       6}, {12, 17}, {7, 12}}, {{17, 22}, {9, 14}, {15, 19}, {1, 2}, {21, 
       24}, {18, 23}, {16, 20}, {8, 13}, {4, 5}, {3, 7}, {6, 10}, {11, 
       12}}}, {EdgeStyle -> {
        DirectedEdge[{{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 0, -1, 
           1}}, {{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         UndirectedEdge[{{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1,
            0}}, {{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {0, 
           0, -1, -1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, UndirectedEdge[{{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, {{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, {{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 
           0, 0, 1}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 0, 1, 
           1}}, {{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, {{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 
           1, -1}}, {{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 
           1, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, 
         UndirectedEdge[{{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 0, -1,
            1}}, {{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 0, 1, 
           1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, {{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, UndirectedEdge[{{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         UndirectedEdge[{{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {0, 0, 1,
            1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, UndirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, {{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         UndirectedEdge[{{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0, 0, -1, 1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, {{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 
           0, 1, -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, 1]}}, {{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {
           0, 0, -1, -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{0, 1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, {{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, UndirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, 1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, 1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], -1}}, {{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, UndirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, {{1, 1, 0, 0}, {-1, 1, 0, 0}, {0, 0, 1, 1}, {0,
            0, -1, 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, -1], -1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, UndirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {-1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, -1, 
             Complex[0, 1]}}, {{0, 
             Complex[0, 1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, {{1, -1, 0, 0}, {1, 1, 0, 0}, {0, 0, 1, -1}, {
           0, 0, 1, 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, 1], 0, 0}, {1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 1, 
             Complex[0, -1]}}, {{1, 
             Complex[0, 1], 0, 0}, {
             Complex[0, 1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, -1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         UndirectedEdge[{{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {0, 
           0, -1, -1}}, {{0, -1, 0, 0}, {1, 0, 0, 0}, {0, 0, 0, -1}, {0, 0, 1,
            0}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, UndirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, {{1, 1, 0, 0}, {
             Complex[0, 1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, 1}, {0, 0, 
             Complex[0, 1], 
             Complex[0, -1]}}, 1] -> {{
            RGBColor[0., 0., 0.]}}, 
         UndirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 1, 0, 0}, {1, -1, 0, 0}, {0, 0, 1, 1}, {0, 0, 1, -1}}, 
           1] -> {{
            RGBColor[0., 0., 0.]}}, DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, {{1, 
             Complex[0, -1], 0, 0}, {1, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 1, 
             Complex[0, 1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, 
             Complex[0, -1], 0, 0}, {-1, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, -1, 
             Complex[0, -1]}}, {{1, 
             Complex[0, -1], 0, 0}, {
             Complex[0, -1], 1, 0, 0}, {0, 0, 1, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 1}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{0, 
             Complex[0, -1], 0, 0}, {1, 0, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{0, -1, 0, 0}, {1, 0, 0, 0}, {0,
            0, 0, -1}, {0, 0, 1, 0}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 0.027450980392156862`]}}, 
         DirectedEdge[{{1, -1, 0, 0}, {-1, -1, 0, 0}, {0, 0, 1, -1}, {0, 
           0, -1, -1}}, {{1, -1, 0, 0}, {
             Complex[0, -1], 
             Complex[0, -1], 0, 0}, {0, 0, 1, -1}, {0, 0, 
             Complex[0, -1], 
             Complex[0, -1]}}, 2] -> {{
            RGBColor[
            0.996078431372549, 0.3607843137254902, 
             0.027450980392156862`]}}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQ/S/Wd2Fu/0P7OFWxhzJMnA67tgWuCE/+Zj/tGlOs
53Y2B4ZpPl1tiX32y0U7K3+aMzl8elB7eooVs8MMmfeimgfZHMRiJMQmJ3I5
zIj4Wiz/l8Nhe1zS433CzA5L7RvVPq38Z88ABe8Dmv+f//nRvicrgP/Dtpf2
9/ynsf7cy+ywgnX2KvMsFodJMssmlkpxOwgv4d4cMYvDYXZt/UvW92/tm0SL
9hy/9NV+nUuXWkPXP3un75P8vG4+t293qjpqr/LW/q7X5yUR97/b8x4/p7t1
z3d7q0ybjItJX+2LVxnVdYhzO/DLyKodesvhsJfdT1DuLrPD7+e5zHa3+Rxm
JMnqeQd/smd7cvnORq6vcHfOOjLx64rk7/ZSnI+s9k5/aM8hYJfTIsbiMOea
Gt+r09/tf01aV/vtEZ8DR0a6WK8fk8OqL74fZyziclgQ5FzConrJXmNHZN/s
eBYHhnOvwrtX1dkvOJnx7D/TI/sv+TxxzNUX7Y9MWvJc+zjQ390c7YuOPLQH
AEfFqiU=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[
         0.023382401294408082`], 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{1, 2}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{1, 3}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{2, 4}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{3, 7}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{3, 8}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{4, 5}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{4, 6}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{5, 9}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{6, 10}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{6, 11}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{7, 12}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{8, 13}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{8, 14}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{9, 14}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{9, 15}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{10, 16}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{11, 12}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{11, 2}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{12, 17}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{13, 18}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{14, 1}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{15, 19}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{15, 20}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{16, 20}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{16, 21}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{17, 22}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{17, 23}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{18, 23}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{18, 24}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{19, 13}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{20, 5}, 0.036110112988579926`]}, 
         {RGBColor[0., 0., 0.], 
          {Arrowheads[0.], ArrowBox[{21, 24}, 0.036110112988579926`]}}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{21, 22}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{22, 10}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{23, 7}, 0.036110112988579926`]}, 
         {RGBColor[
          0.996078431372549, 0.3607843137254902, 0.027450980392156862`], 
          ArrowBox[{24, 19}, 0.036110112988579926`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.036110112988579926], DiskBox[2, 0.036110112988579926], 
         DiskBox[3, 0.036110112988579926], DiskBox[4, 0.036110112988579926], 
         DiskBox[5, 0.036110112988579926], DiskBox[6, 0.036110112988579926], 
         DiskBox[7, 0.036110112988579926], DiskBox[8, 0.036110112988579926], 
         DiskBox[9, 0.036110112988579926], DiskBox[10, 0.036110112988579926], 
         DiskBox[11, 0.036110112988579926], DiskBox[12, 0.036110112988579926],
          DiskBox[13, 0.036110112988579926], 
         DiskBox[14, 0.036110112988579926], DiskBox[15, 0.036110112988579926],
          DiskBox[16, 0.036110112988579926], 
         DiskBox[17, 0.036110112988579926], DiskBox[18, 0.036110112988579926],
          DiskBox[19, 0.036110112988579926], 
         DiskBox[20, 0.036110112988579926], DiskBox[21, 0.036110112988579926],
          DiskBox[22, 0.036110112988579926], 
         DiskBox[23, 0.036110112988579926], 
         DiskBox[24, 0.036110112988579926]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{3.894565577377141*^9, 3.894565642235371*^9},
 CellLabel->
  "Out[307]=",ExpressionUUID->"4e5d8129-c58e-425a-918c-a4644e10f748"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Quotienting Cayley Graphs", "Section",
 CellChangeTimes->{{3.894565680028673*^9, 
  3.894565685958541*^9}},ExpressionUUID->"1b229524-d161-49d8-8d56-\
ce488f8a8bdd"],

Cell["\<\
We can quotient a Cayley graph by the stabilizer subgroup of a chosen state \
using the CayleyGraphQuotient13[] function (note a version in Mathematica 12 \
is available with CayleyGraphQuotient12[]). First, the user generates a \
Cayley graph to quotient. This serves as the first input to the function.  \
Next a quantum state is chosen, which serves as the second input to the \
function.\
\>", "Text",
 CellChangeTimes->{{3.894566945342482*^9, 3.8945670554794483`*^9}},
 Background->RGBColor[
  0.87, 0.94, 1],ExpressionUUID->"a356afcf-ed2f-4f50-91bb-6a28410c0b43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cayleyGraph", " ", "=", " ", 
  RowBox[{"CayleyGraphBuilder", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"HadamardGate", "[", 
       RowBox[{"1", ",", "1"}], "]"}], ",", 
      RowBox[{"PhaseGate", "[", 
       RowBox[{"1", ",", "1"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0.8901960784313725, 0.25, 0]|>,
         "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0.24720000000000014`, 0.63, 0.6]|>,
         "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CayleyGraphQuotient13", "[", 
  RowBox[{"cayleyGraph", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}], "}"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.894567057558831*^9, 3.8945671208324757`*^9}},
 CellLabel->
  "In[439]:=",ExpressionUUID->"6425f17b-bee9-4d2a-aaf6-3c5e5812bd6e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0}, {0, 
       1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{1, 0}, {0, 
         Complex[0, 1]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{1, 0}, {
       0, -1}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 1}, {1, 
       0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 1}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1]}, {1, 0}}, {{
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
          Rational[-1, 2]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {-1, 
       0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, 1]}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, -1}, {1, 
       0}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
         Complex[0, -1], 0}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1]}, {-1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, -1}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1]}, {1, 0}}, {{
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        Complex[1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[0, 1], 0}, {0, 
         Complex[0, -1]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
         Complex[0, 1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, 1]}, {
         Complex[0, -1], 0}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {-1,
        0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{0, 
         Complex[0, -1]}, {
         Complex[0, 1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0}, {0, 1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, 1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{-2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
        Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
         Complex[0, -1], 0}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{0, 
         Complex[0, -1]}, {-1, 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, 1], 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
        Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-1, 0}, {0, 
       1}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        0, Complex[1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{0, 
         Complex[0, -1]}, {
         Complex[0, -1], 0}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, 1], 0}, {0, -1}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-1, 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0}, {0, 1}}, {{
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
        2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, 1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
         Complex[0, -1] 2^Rational[-1, 2]}}, {{
        Complex[0, 1] 
         2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
         Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
          Rational[-1, 2], 2^Rational[-1, 2]}}, {{
        0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0}, {0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
         Complex[0, -1], 0}, {0, 
         Complex[0, 1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
        Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
         Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{-1, 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[0, -1], 0}, {0, -1}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}}, {{
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
         2^Rational[-1, 2]}, {
        Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
        Complex[-1, 1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
        Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
         Complex[0, -1], 0}, {0, 
         Complex[0, -1]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]]}, {
         Complex[
          Rational[-1, 2], 
          Rational[-1, 2]], 
         Complex[
          Rational[1, 2], 
          Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
        0, Complex[-1, -1] 2^Rational[-1, 2]}}}, {CompressedData["
1:eJwBEQPu/CFib1JiAgAAAIABAAACAAAAAQIBAwQFBAYCAQIEAwcDCAUEBQkG
CgYLBwMHDAgNCA4JDwkQCgYKEQsSCwIMEwwUDQgNFQ4WDgEPCQ8XEBgQGREa
ERsSCxIcEwwTHRQeFB8VIBUhFg4WIhcdFyMYEBgkGSUZBRoRGiYbJxsoHCkc
Kh0XHSseFB4sHy0fByAVIC4hLyEwIjEiMiMuIzMkNCQ1JRklNiYrJjcnGyc4
KDkoCikcKToqOyo8KyYrPSw+LD8tHy1ALiMuQS8hL0IwQzANMSIxRDJFMkYz
RDMPNCQ0RzVINUk2SjZLN0c3TDhNOE45KDlPOj06UDsqO1E8UjwSPTo9Ez4s
PlM/VD9VQFZAV0FTQVhCWUJaQzBDW0QzRFxFMkVdRl5GFkc3R19INUhgSV1J
GEo2SmFLYktjTGFMGk04TWROZU5mT2dPaFBkUGlRVVFqUjxSa1NBU2xUP1Rt
VVFVHlZAVm5Xb1dwWG5YIFlCWXFaclpzW3RbdVxxXHZdSV13XkZeeF9sX3lg
emB7YUxhfGJLYn1jeGMlZFBkfmVOZX9mfWYnZ09ngGiBaIJpgGkpaoNqhGtw
a4VsX2yGbYdtiG5YbolvV2+KcGtwLXFccYtyWnKMc4pzL3RbdI11jnWPdo12
MXeQd5F4Y3iSeYt5NHpgepN7jHuUfJN8lX1mfZZ+hn6Xf4h/mIBpgJmBaIGa
gpKCOYNqg5uEmoQ7hY+FnIZ+hj6HbYediH+InomdiZ+Kc4qgi3mLoYx7jKKN
do2jjnWOpI+Fj0OQd5ClkaSRRZKCkqaTfJOnlKOUSJWllUqWqJapl6eXTZii
mKqZnpmrmoSarJufm62cppxSnYmdrp6ZnlSfm59WoK+gsKGuoVmimKKxo5Sj
sqSRpLOllaW0ppymXqeXp7Wolqi2qbOpYqq0qmWrtqtnrLCst62xrbiuoa65
r6CvurCssG+xrbFysrqydLOps7u0qrS8tbm1erartr23u7eBuL24g7m1uYe6
srq+u7e7jry+vJC9uL2/vry+wL/Av6jAv8Cv4SMjuw==
       "], Null, CompressedData["
1:eJxTTMoPSmJkYGBoABKMTKNwICEAAlMEaQ==
       "]}, {
      EdgeStyle -> {
        DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^Rational[-1, 2]}}, {{-1, 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
            
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {
             Complex[0, -1], 0}}, {{0, 1}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 1}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, 1]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{0, -1}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {1, 0}}, {{0, -1}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0}, {0, 
           1}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{1, 0}, {0, -1}}, 1] -> {
          
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-1, 0}, {0, 
           1}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {-1, 0}}, {{0, -1}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0}, {
           0, -1}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {1, 0}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, -1}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{-1, 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, 1}, {-1, 
           0}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {-1, 
            0}}, {{-2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {-1, 0}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 1}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{0, 1}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-1, 0}, {
           0, -1}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {-1, 0}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, -1]}}, {{-1, 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, -1]}}, {{1, 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, {{0, 
             Complex[0, 1]}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {
             Complex[0, 1], 0}}, {{0, 1}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, -1}}, {{1, 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {1, 0}}, {{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, {{
             Complex[0, 1], 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, {{0, 
             Complex[0, 1]}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {
             Complex[0, 1], 0}}, {{0, -1}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 1}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {-1, 
            0}}, {{-2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {1, 0}}, {{0, 1}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, -1], 0}}, {{0, 
             Complex[0, -1]}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {
             Complex[0, -1], 0}}, {{0, -1}, {1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, {{
             Complex[0, -1], 0}, {0, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, -1}}, {{-1, 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, 1}, {1, 
           0}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, -1}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{0, -1}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {1, 0}}, {{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{1, 0}, {
            0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, -1]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^
              Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {1, 0}}, {{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, -1}, {1, 
           0}}, {{2^
             Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 1}}, {{1, 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, -1]}}, {{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, -1}}, {{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, -1}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, -1}, {-1, 
           0}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-1, 0}, {0, 1}}, {{-1, 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, -1}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {
             Complex[0, 1], 0}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {
             Complex[0, -1], 0}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 1}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, -1]}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{1, 0}, {0, 1}}, 1] -> {
          
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, 1]}}, {{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{0, 1}, {-1, 0}}, 1] -> {
          
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{-1, 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{-1, 0}, {0, 
             Complex[0, 1]}}, {{-1, 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, {{
             Complex[0, 1], 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{0, 
             Complex[0, 1]}, {-1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, 
           2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[0, -1], 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^
              Rational[-1, 2], 2^
             Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{0, 
             Complex[0, -1]}, {
             Complex[0, 1], 0}}, {{0, 
             Complex[0, -1]}, {-1, 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, 0}, {0, 
             Complex[0, 1]}}, {{1, 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{0, Complex[1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 
             2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], 
             Complex[0, -1] 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, -1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, {{
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{Complex[1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], -2^
              Rational[-1, 2]}, {-2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}}, {{
            2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, -1]}}, {{
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], -2^Rational[-1, 2]}, {-2^Rational[-1, 2], -2^
              Rational[-1, 2]}}, {{2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{-2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{0, 1}, {-1, 0}}, {{0, 1}, {
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, 1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, 1], 0}, {0, 
             Complex[0, 1]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-1, 0}, {0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], -2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, 1] 2^Rational[-1, 2], 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], -2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, 1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[-1, -1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            2^Rational[-1, 2], Complex[0, -1] 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], Complex[0, 1] 2^Rational[-1, 2]}}, {{1, 0}, {0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, -1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{-2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{2^Rational[-1, 2], 2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, 1] 2^Rational[-1, 2]}}, {{
            Complex[-1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[0, -1], 0}, {0, 
             Complex[0, 1]}}, {{
             Complex[0, -1], 0}, {0, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, -1] 2^Rational[-1, 2], 2^
             Rational[-1, 2]}, {-2^Rational[-1, 2], Complex[0, 1] 
             2^Rational[-1, 2]}}, {{
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {
            Complex[0, -1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}}, {{
            Complex[0, 1] 2^Rational[-1, 2], Complex[0, -1] 
             2^Rational[-1, 2]}, {2^Rational[-1, 2], 2^Rational[-1, 2]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, -1] 2^Rational[-1, 2], 0}}, {{
            0, Complex[-1, 1] 2^Rational[-1, 2]}, {
            Complex[1, 1] 2^Rational[-1, 2], 0}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{Complex[1, -1] 2^Rational[-1, 2], 0}, {
            0, Complex[-1, -1] 2^Rational[-1, 2]}}, {{
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[-1, 2], 
              Rational[-1, 2]]}, {
             Complex[
              Rational[1, 2], 
              Rational[-1, 2]], 
             Complex[
              Rational[1, 2], 
              Rational[1, 2]]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw8m3c41f///80zODh7OGaDlKJCu9e90tDAG6lIA5UkEU0jqSiJ0pBVRCVR
ItoklCjJbNh7ZBbZfV+f6/pdP/+4Hp6vcZ7jcb/f7i407Q9Z7JGSkJB4y5CQ
+N933W2M5HgdOYSkCK1O3xZCzy9xWc8FCkp3srWX8QVQRvHItp1U6O7wvfPQ
hof1S4zyAr4oIKNx7mLdbXwMzt42e8NaLurVMuSnePIhV6r4kBdBwXiy5uWK
21wkeNb6qv6QBOHJZ85/y0TtP9tczXsK6KTeMPD9KACjbqR7S54A9RlGcvbJ
XLhtFepWvKVCf2P2Can/WNhuENOjPucfIQywVpog3882OHD9c6Akpn053JGz
n46tC7+Evt/DQiZVLj6rn4e3z2fYStoxMTRy9aNFnjIiAmZvt9AXoPDW19jI
hSwEruv4MSwUY8m50c2/N/MQrfToUOxuBZhHesrPu86AvhnlcZFnF7Fy+TFf
z2QOggZkhpaq0nDYRXf420IK+NLWm+t1RomYowJ526MykGCW1/juZePTQQnj
Hx0snChy2qq6mVyPaoY4ea4q8jas7/ey4uL6p9jA53YMuCru7AlWVcfhpXUT
d49z4Hp3cq/gvQAZoY4ftGwFyH+712SFJAdZZ9c43HpHxbtDrZ5RE1Skhlo1
FQYpYJ1Lg8Ztn3pCnbDlxmsr4ff7NNuzc8n5loYfDYui4rXugszH8SNEZc1N
6x1/hgjX4MMfvsSMEHXqaQ03UxiI7DNWonqxsY3zRE27jY7HM/o/GhdyYKVm
7xIfwMXWZOdHx8OFeG83/ai3qQocGq8FhJfy0Ro2QO9/LI8B19CCjdM0YMrd
/2l3mCKeyoncj77loeS15iMXOxEM299kU75y8DJdO+jfYSksfJGV1ZEhj1Nt
nofnZ1DxNDPbdNo5KbQfjtgQ9Z2FP4t9FFj0HkLPcFFLbYgsJL7JVEIllVh1
tjy5ZIgFa/f6n0y2EsBzt752TArn48NWHqyWwtKIOW+d3JsJ46ldKRo+f4kP
9l6d/k4s0Ma17N2duXj0PNRUb5ksjFtpFR9yeTiUFrL/uB0L19WS7n0JYON7
dXAtO1qIH1K7pVtqxZjW/bNr5wkhrPbNzJqbJoDp9a1/TVjqOLgE7zPiRXBY
5htYL8/C0INw+2+5alhZbHT/c6oMRqhtf2LeaUBlqfX9tm4WfBN+XM5SFOBH
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
nLXcJQL8D+0K5g8=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.01772671749996839], 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {3.106993651633362, 5.889253394787222}, 2}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{1, 3}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {2.980686998916953, 6.0382310455419494`}, 1}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{2, 4}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           3, {2.765776680091295, 4.6496466247052926`}, 7}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{3, 8}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           4, {4.393647537262297, 5.821138800008731}, 5}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{4, 6}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           5, {4.402306443634724, 5.379355100504436}, 4}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{5, 9}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           6, {3.032941210740667, 4.766346158763341}, 10}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{6, 11}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           7, {2.3872832247420908`, 4.876593524156966}, 3}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{7, 12}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           8, {4.103511165104381, 5.822204634671903}, 13}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{8, 14}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           9, {6.011388543166358, 4.71303973068972}, 15}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{9, 16}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           10, {2.7609637431041216`, 4.718852963051635}, 6}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{10, 17}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{11, 2}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           11, {1.472522034420424, 4.949270211888267}, 18}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           12, {2.6683856809598216`, 3.1125276877343735`}, 19}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{12, 20}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           13, {3.951998185927893, 5.610644647730335}, 8}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{13, 21}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{14, 1}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           14, {4.487192271940126, 7.158288687490841}, 22}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           15, {5.727542310347898, 4.760580371604716}, 9}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{15, 23}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           16, {7.353270722131446, 5.266054367279598}, 24}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{16, 25}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           17, {4.31107573598255, 3.4487976186848552`}, 26}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{17, 27}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           18, {1.3342461673420272`, 5.307998899443702}, 11}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{18, 28}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           19, {2.5372008376711914`, 2.8418692874700313`}, 12}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{19, 29}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           20, {1.8035315283337714`, 1.9908382813492176`}, 30}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{20, 31}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           21, {4.814108145528895, 3.8614167980711733`}, 32}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{21, 33}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           22, {4.686752969755776, 6.831941464941445}, 14}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{22, 34}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           23, {4.663239480829419, 3.078306533109423}, 29}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{23, 35}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           24, {7.199974006948322, 4.935702405873707}, 16}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{24, 36}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{25, 5}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           25, {5.60811483822828, 6.00700072974538}, 37}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           26, {4.112819164717034, 3.0940804035905747`}, 17}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{26, 38}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           27, {3.3512536488068285`, 3.4045872206544603`}, 39}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{27, 40}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           28, {0.924232675408447, 3.3641607273464533`}, 41}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{28, 42}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           29, {4.467621041389662, 3.4184185360348005`}, 23}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{29, 43}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           30, {1.434154671925513, 2.001612838000802}, 20}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{30, 44}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{31, 7}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           31, {1.4083634887941399`, 3.9465458333680057`}, 45}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           32, {4.406129304737994, 3.854822465754487}, 21}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{32, 46}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           33, {5.324301604360464, 4.817559686706582}, 47}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{33, 48}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           34, {6.7153493191175535`, 6.732388485088358}, 49}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{34, 50}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           35, {5.537346912685134, 2.958946862099135}, 46}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{35, 51}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           36, {8.084185026992438, 3.1414738671380253`}, 52}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{36, 53}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           37, {5.773285629116241, 6.173249282005567}, 25}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{37, 54}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           38, {4.418606419867839, 2.1312679999789887`}, 43}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{38, 55}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           39, {3.1114027570976512`, 3.251659603811127}, 27}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{39, 56}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{40, 10}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           40, {1.807143979916989, 4.702955797812493}, 57}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           41, {0.5297087561767594, 3.22495436764235}, 28}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{41, 58}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           42, {0.1726022850441009, 4.051540371496425}, 59}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{42, 60}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           43, {4.4193421062789495`, 2.483271866146706}, 38}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{43, 61}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           44, {3.0284854556194567`, 0.6922686635132081}, 62}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{44, 63}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           45, {1.660713486514087, 3.9902803261371704`}, 31}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{45, 64}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           46, {5.272257385397704, 3.1568374887500936`}, 35}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{46, 65}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           47, {5.06441841594542, 4.655202748084268}, 33}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{47, 66}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{48, 13}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           48, {4.360915056076711, 6.6597994482969325`}, 67}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           49, {6.400242472089891, 6.462788146198992}, 34}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{49, 68}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           50, {6.383447286444843, 7.714162143159557}, 69}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{50, 70}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{51, 15}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           51, {6.627885671958783, 4.776776352522001}, 68}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           52, {7.677968415405501, 3.2663314834680204`}, 36}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{52, 71}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           53, {8.474175373216749, 4.044331250065319}, 72}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{53, 73}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           54, {6.265483861079723, 5.12746721846163}, 74}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{54, 75}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           55, {6.496510032375392, 2.201572706607301}, 71}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{55, 76}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           56, {3.986659739992845, 1.4797373487024912`}, 77}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{56, 78}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           57, {2.0490068342132495`, 4.957467484601265}, 40}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{57, 79}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           58, {2.2690549751312155`, 2.2735473590475674`}, 61}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{58, 80}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           59, {-0.10967117442292394`, 4.072237249199657}, 42}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{59, 81}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{60, 18}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           60, {0.4957801446408617, 6.144940947137619}, 82}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{61, 19}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           61, {2.3192947613794668`, 1.9352147571639267`}, 58}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           62, {2.929237755598557, 0.2836456848289166}, 44}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{62, 83}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           63, {2.146043868776791, 0.6253021662058472}, 84}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{63, 85}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           64, {2.484177583653103, 3.2118489490124054`}, 86}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{64, 87}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           65, {4.799613520237362, 1.1519735953298595`}, 83}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{65, 88}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           66, {6.705166395947398, 3.255215248603705}, 89}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{66, 90}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           67, {4.7149293749055925`, 6.721451103152537}, 48}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{67, 91}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           68, {6.891116785041886, 4.546803911007486}, 51}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{68, 92}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           69, {6.262467919220289, 7.451754357992011}, 50}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{69, 93}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{70, 22}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           70, {4.273973218018547, 7.794309473234552}, 94}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           71, {6.416375645349498, 1.8956049460835678`}, 55}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{71, 95}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           72, {8.195834373434085, 4.07400062992202}, 53}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{72, 96}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{73, 24}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           73, {7.583407445954577, 5.957146827947953}, 93}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           74, {5.893553164487688, 4.9201931514575685`}, 54}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{74, 97}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           75, {4.59653524855095, 5.904101488086927}, 98}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{75, 99}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{76, 26}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           76, {6.043944252423588, 3.237821862843885}, 97}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           77, {3.6451272696418906`, 1.4338564379859546`}, 56}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{77, 100}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           78, {4.454036911159197, 2.477844736606348}, 101}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{78, 102}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           79, {1.0682360676813474`, 4.083462573799781}, 103}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{79, 104}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           80, {2.632559884450753, 1.1855634119453522`}, 100}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{80, 105}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           81, {0.8050923041433885, 2.1482139549323436`}, 85}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{81, 106}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           82, {0.8531992113422552, 5.964797202936019}, 60}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{82, 107}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           83, {4.475983252444592, 1.210457815755638}, 65}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{83, 108}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           84, {2.01400851012388, 0.35673309438958817`}, 63}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{84, 109}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{85, 30}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           85, {0.44764307983430396`, 1.948861319326843}, 81}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           86, {2.1018958133039574`, 2.989980517921911}, 64}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{86, 110}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           87, {2.1468586696251837`, 5.136723735798658}, 111}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{87, 112}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{88, 32}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           88, {3.9254087915437306`, 1.924057650774927}, 110}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           89, {6.441495321218948, 2.9825911501643385`}, 66}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{89, 113}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           90, {5.649515884946091, 3.3176005751555753`}, 114}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{90, 115}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           91, {5.926372463478717, 7.329619608711593}, 116}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{91, 117}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           92, {7.853343387136666, 3.8969535529755497`}, 113}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{92, 118}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           93, {7.938627262564152, 6.157136869187344}, 73}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{93, 119}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           94, {4.2826597495333445`, 8.188546155984962}, 70}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{94, 120}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           95, {6.090045326296745, 0.6656243785305245}, 108}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{95, 121}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           96, {7.817201611961717, 1.9957767973671705`}, 122}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{96, 123}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           97, {6.236438006297761, 3.0143311903821615`}, 76}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{97, 124}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           98, {4.487684724447417, 6.173340234343787}, 75}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{98, 125}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{99, 37}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           99, {3.9795973297294616`, 6.95430494013854}, 120}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           100, {2.436054378419162, 0.8291092463280331}, 80}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{100, 126}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           101, {4.288227372926779, 2.2653253336075236`}, 78}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{101, 127}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{102, 39}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           102, {3.5828957911028834`, 4.257999993717344}, 125}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           103, {0.6682016052438547, 4.103509855335099}, 79}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{103, 128}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           104, {0.9135079938798922, 6.020436047020481}, 129}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{104, 130}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{105, 41}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           105, {0.9367939693136013, 2.14120119638049}, 128}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           106, {1.2074633153776027`, 3.1655137737673607`}, 131}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{106, 132}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           107, {1.6849346077643417`, 5.975706081694345}, 112}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{107, 133}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           108, {5.88575436270168, 1.0453387075365939`}, 95}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{108, 134}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           109, {4.153734745194619, 0.22341390947187278`}, 135}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{109, 136}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           110, {3.8074337827799143`, 2.1892886931479576`}, 88}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{110, 137}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           111, {2.325837053018677, 4.898917198514919}, 87}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{111, 138}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{112, 45}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           112, {1.3008061511115374`, 6.006209534024257}, 107}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           113, {7.436776167182789, 3.9009422856455007`}, 92}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{113, 139}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           114, {5.384011218275494, 3.2845895212143454`}, 90}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{114, 140}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{115, 47}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           115, {4.101481345101204, 4.607967127201288}, 138}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           116, {5.718930530995664, 6.967036464127249}, 91}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{116, 141}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           117, {4.122633302403877, 7.887635251286967}, 142}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{117, 143}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{118, 49}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           118, {7.290579712129123, 5.84205140697876}, 141}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           119, {6.9364587496890655`, 6.109804072736114}, 144}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{119, 145}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           120, {4.1461364615843825`, 7.299837573730778}, 99}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{120, 146}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{121, 52}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           121, {7.400807273162778, 2.0328756530398753`}, 139}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           122, {7.463057446970143, 2.185428237819047}, 96}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{122, 147}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           123, {7.020008169645972, 2.8082807970068497`}, 140}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{123, 148}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           124, {6.979604665013657, 2.221099027427415}, 147}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{124, 149}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           125, {3.9887359815674737`, 4.262406949867651}, 102}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{125, 150}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           126, {4.244996219984143, 0.29685564188175834`}, 134}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{126, 151}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           127, {3.932213783790784, 0.8847506608622939}, 136}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{127, 152}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           128, {1.1165238600243366`, 2.227427935930398}, 105}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{128, 153}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           129, {1.1047974363426951`, 6.00493692882483}, 104}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{129, 154}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{130, 57}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           130, {1.9193918871493993`, 6.81278387061228}, 146}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           131, {1.0506248548426236`, 2.8308179136084815`}, 106}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{131, 155}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{132, 59}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           132, {0.308336353136883, 4.964753987157774}, 154}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           133, {2.8650922516630506`, 7.723742357806061}, 143}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{133, 156}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{134, 62}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           134, {4.200773335495463, 0.13964541521852744`}, 126}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           135, {4.136469537896126, -0.1709171664375552}, 109}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{135, 157}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           136, {3.726110740400243, 1.2081526200133141`}, 127}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{136, 158}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           137, {4.516798882401797, 1.0624680351256575`}, 157}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{137, 159}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           138, {4.315023099240033, 4.96722409719637}, 115}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{138, 160}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           139, {7.55894689311368, 1.9842716217403922`}, 121}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{139, 161}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           140, {6.865739319492095, 3.152314568771599}, 123}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{140, 162}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           141, {7.489800487169169, 5.950104624186122}, 118}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{141, 163}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           142, {4.155106380076669, 8.035299123073724}, 117}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{142, 164}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{143, 67}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           143, {2.959202693279489, 7.324384449573735}, 133}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           144, {6.568425337570232, 6.1243585652737575`}, 119}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{144, 165}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{145, 69}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           145, {5.342330397333743, 7.4273952552367435`}, 164}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           146, {2.2217271883821765`, 6.545403415945012}, 130}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{146, 166}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           147, {6.603148091460458, 2.2631828636342384`}, 124}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{147, 167}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{148, 72}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           148, {7.424772914496592, 4.759419502616346}, 163}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{149, 74}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           149, {6.6929592307795875`, 4.163655026757918}, 165}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           150, {3.147339389362507, 4.950600519767697}, 168}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{150, 169}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{151, 77}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           151, {5.3331821868258205`, 0.929340162905723}, 167}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           152, {5.285748263965032, 2.1730728312673424`}, 162}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{152, 170}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           153, {2.033988006023162, 1.579439002631846}, 158}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{153, 171}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           154, {0.7133095756691578, 4.839428841811975}, 132}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{154, 172}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           155, {2.8153497200250963`, 2.0789117508193193`}, 159}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{155, 173}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{156, 82}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           156, {2.0859609012858935`, 7.745543049709453}, 166}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           157, {4.322639021952219, 0.7062423860891196}, 137}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{157, 174}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{158, 84}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           158, {1.7204445051945476`, 1.3153341623707113`}, 153}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{159, 86}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           159, {2.6514358653037915`, 1.905333471460249}, 155}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           160, {3.9755914312162197`, 5.972082757096645}, 175}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{160, 176}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{161, 89}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           161, {6.63716401574033, 1.0865990570856978`}, 174}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           162, {5.4140915857705485`, 2.0289411130720367`}, 152}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{162, 177}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           163, {7.819347164578028, 4.895540866675412}, 148}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{163, 178}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           164, {5.447845965729235, 7.838041553125211}, 145}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{164, 179}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           165, {6.932281233488518, 4.202644679669444}, 149}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{165, 180}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{166, 94}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           166, {2.215948175687247, 7.453926120053978}, 156}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           167, {5.432993033448205, 0.54003269055055}, 151}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{167, 181}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           168, {2.8741179620888775`, 5.138600174766427}, 150}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{168, 182}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{169, 98}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           169, {3.588521899294652, 6.967969918054858}, 179}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{170, 101}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           170, {5.615405316329153, 3.428244786378947}, 180}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{171, 103}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           171, {1.5719446369288805`, 3.505650232602845}, 182}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           172, {1.9706594213812592`, 6.229932951026287}, 176}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{172, 183}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           173, {3.9988032768910453`, 2.687985791691015}, 177}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{173, 184}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           174, {6.3409119759440635`, 1.3660705595208011`}, 161}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{174, 185}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           175, {3.9773950213581792`, 5.62077643968233}, 160}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{175, 186}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{176, 111}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           176, {1.8871079354000266`, 5.920613587172097}, 172}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{177, 114}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           177, {4.004028390141699, 2.249062500866153}, 173}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{178, 116}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           178, {6.113689608639572, 5.853615230749059}, 186}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           179, {3.915306264604868, 6.913411841674767}, 169}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{179, 187}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           180, {6.002379745677612, 3.2087269192099854`}, 170}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{180, 188}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{181, 122}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           181, {6.3004924070090205`, 0.34144448665239696`}, 185}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           182, {1.842535224509929, 3.278406910948813}, 171}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{182, 189}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{183, 129}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           183, {2.3044989965925624`, 7.457028151064615}, 187}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{184, 131}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           184, {2.4127445464056696`, 3.375007841758308}, 189}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{185, 135}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           185, {6.131946887602325, 0.6049917060894895}, 181}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           186, {6.057487737558238, 6.187445791838247}, 178}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{186, 190}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{187, 142}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           187, {2.516002815717223, 7.082138170969258}, 183}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{188, 144}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           188, {5.718456009338537, 4.9948226029958995`}, 190}], 
           0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           189, {2.695499020621422, 3.320516770766904}, 184}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{189, 191}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           190, {5.852140969234819, 5.260814810567898}, 188}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{190, 192}, 0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{191, 168}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           191, {3.7483538115002255`, 5.018513946801747}, 192}], 
           0.0594207467043506]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{192, 175}, 0.0594207467043506]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           192, {3.947569788775328, 4.683142367142434}, 191}], 
           0.0594207467043506]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0594207467043506], DiskBox[2, 0.0594207467043506], 
         DiskBox[3, 0.0594207467043506], DiskBox[4, 0.0594207467043506], 
         DiskBox[5, 0.0594207467043506], DiskBox[6, 0.0594207467043506], 
         DiskBox[7, 0.0594207467043506], DiskBox[8, 0.0594207467043506], 
         DiskBox[9, 0.0594207467043506], DiskBox[10, 0.0594207467043506], 
         DiskBox[11, 0.0594207467043506], DiskBox[12, 0.0594207467043506], 
         DiskBox[13, 0.0594207467043506], DiskBox[14, 0.0594207467043506], 
         DiskBox[15, 0.0594207467043506], DiskBox[16, 0.0594207467043506], 
         DiskBox[17, 0.0594207467043506], DiskBox[18, 0.0594207467043506], 
         DiskBox[19, 0.0594207467043506], DiskBox[20, 0.0594207467043506], 
         DiskBox[21, 0.0594207467043506], DiskBox[22, 0.0594207467043506], 
         DiskBox[23, 0.0594207467043506], DiskBox[24, 0.0594207467043506], 
         DiskBox[25, 0.0594207467043506], DiskBox[26, 0.0594207467043506], 
         DiskBox[27, 0.0594207467043506], DiskBox[28, 0.0594207467043506], 
         DiskBox[29, 0.0594207467043506], DiskBox[30, 0.0594207467043506], 
         DiskBox[31, 0.0594207467043506], DiskBox[32, 0.0594207467043506], 
         DiskBox[33, 0.0594207467043506], DiskBox[34, 0.0594207467043506], 
         DiskBox[35, 0.0594207467043506], DiskBox[36, 0.0594207467043506], 
         DiskBox[37, 0.0594207467043506], DiskBox[38, 0.0594207467043506], 
         DiskBox[39, 0.0594207467043506], DiskBox[40, 0.0594207467043506], 
         DiskBox[41, 0.0594207467043506], DiskBox[42, 0.0594207467043506], 
         DiskBox[43, 0.0594207467043506], DiskBox[44, 0.0594207467043506], 
         DiskBox[45, 0.0594207467043506], DiskBox[46, 0.0594207467043506], 
         DiskBox[47, 0.0594207467043506], DiskBox[48, 0.0594207467043506], 
         DiskBox[49, 0.0594207467043506], DiskBox[50, 0.0594207467043506], 
         DiskBox[51, 0.0594207467043506], DiskBox[52, 0.0594207467043506], 
         DiskBox[53, 0.0594207467043506], DiskBox[54, 0.0594207467043506], 
         DiskBox[55, 0.0594207467043506], DiskBox[56, 0.0594207467043506], 
         DiskBox[57, 0.0594207467043506], DiskBox[58, 0.0594207467043506], 
         DiskBox[59, 0.0594207467043506], DiskBox[60, 0.0594207467043506], 
         DiskBox[61, 0.0594207467043506], DiskBox[62, 0.0594207467043506], 
         DiskBox[63, 0.0594207467043506], DiskBox[64, 0.0594207467043506], 
         DiskBox[65, 0.0594207467043506], DiskBox[66, 0.0594207467043506], 
         DiskBox[67, 0.0594207467043506], DiskBox[68, 0.0594207467043506], 
         DiskBox[69, 0.0594207467043506], DiskBox[70, 0.0594207467043506], 
         DiskBox[71, 0.0594207467043506], DiskBox[72, 0.0594207467043506], 
         DiskBox[73, 0.0594207467043506], DiskBox[74, 0.0594207467043506], 
         DiskBox[75, 0.0594207467043506], DiskBox[76, 0.0594207467043506], 
         DiskBox[77, 0.0594207467043506], DiskBox[78, 0.0594207467043506], 
         DiskBox[79, 0.0594207467043506], DiskBox[80, 0.0594207467043506], 
         DiskBox[81, 0.0594207467043506], DiskBox[82, 0.0594207467043506], 
         DiskBox[83, 0.0594207467043506], DiskBox[84, 0.0594207467043506], 
         DiskBox[85, 0.0594207467043506], DiskBox[86, 0.0594207467043506], 
         DiskBox[87, 0.0594207467043506], DiskBox[88, 0.0594207467043506], 
         DiskBox[89, 0.0594207467043506], DiskBox[90, 0.0594207467043506], 
         DiskBox[91, 0.0594207467043506], DiskBox[92, 0.0594207467043506], 
         DiskBox[93, 0.0594207467043506], DiskBox[94, 0.0594207467043506], 
         DiskBox[95, 0.0594207467043506], DiskBox[96, 0.0594207467043506], 
         DiskBox[97, 0.0594207467043506], DiskBox[98, 0.0594207467043506], 
         DiskBox[99, 0.0594207467043506], DiskBox[100, 0.0594207467043506], 
         DiskBox[101, 0.0594207467043506], DiskBox[102, 0.0594207467043506], 
         DiskBox[103, 0.0594207467043506], DiskBox[104, 0.0594207467043506], 
         DiskBox[105, 0.0594207467043506], DiskBox[106, 0.0594207467043506], 
         DiskBox[107, 0.0594207467043506], DiskBox[108, 0.0594207467043506], 
         DiskBox[109, 0.0594207467043506], DiskBox[110, 0.0594207467043506], 
         DiskBox[111, 0.0594207467043506], DiskBox[112, 0.0594207467043506], 
         DiskBox[113, 0.0594207467043506], DiskBox[114, 0.0594207467043506], 
         DiskBox[115, 0.0594207467043506], DiskBox[116, 0.0594207467043506], 
         DiskBox[117, 0.0594207467043506], DiskBox[118, 0.0594207467043506], 
         DiskBox[119, 0.0594207467043506], DiskBox[120, 0.0594207467043506], 
         DiskBox[121, 0.0594207467043506], DiskBox[122, 0.0594207467043506], 
         DiskBox[123, 0.0594207467043506], DiskBox[124, 0.0594207467043506], 
         DiskBox[125, 0.0594207467043506], DiskBox[126, 0.0594207467043506], 
         DiskBox[127, 0.0594207467043506], DiskBox[128, 0.0594207467043506], 
         DiskBox[129, 0.0594207467043506], DiskBox[130, 0.0594207467043506], 
         DiskBox[131, 0.0594207467043506], DiskBox[132, 0.0594207467043506], 
         DiskBox[133, 0.0594207467043506], DiskBox[134, 0.0594207467043506], 
         DiskBox[135, 0.0594207467043506], DiskBox[136, 0.0594207467043506], 
         DiskBox[137, 0.0594207467043506], DiskBox[138, 0.0594207467043506], 
         DiskBox[139, 0.0594207467043506], DiskBox[140, 0.0594207467043506], 
         DiskBox[141, 0.0594207467043506], DiskBox[142, 0.0594207467043506], 
         DiskBox[143, 0.0594207467043506], DiskBox[144, 0.0594207467043506], 
         DiskBox[145, 0.0594207467043506], DiskBox[146, 0.0594207467043506], 
         DiskBox[147, 0.0594207467043506], DiskBox[148, 0.0594207467043506], 
         DiskBox[149, 0.0594207467043506], DiskBox[150, 0.0594207467043506], 
         DiskBox[151, 0.0594207467043506], DiskBox[152, 0.0594207467043506], 
         DiskBox[153, 0.0594207467043506], DiskBox[154, 0.0594207467043506], 
         DiskBox[155, 0.0594207467043506], DiskBox[156, 0.0594207467043506], 
         DiskBox[157, 0.0594207467043506], DiskBox[158, 0.0594207467043506], 
         DiskBox[159, 0.0594207467043506], DiskBox[160, 0.0594207467043506], 
         DiskBox[161, 0.0594207467043506], DiskBox[162, 0.0594207467043506], 
         DiskBox[163, 0.0594207467043506], DiskBox[164, 0.0594207467043506], 
         DiskBox[165, 0.0594207467043506], DiskBox[166, 0.0594207467043506], 
         DiskBox[167, 0.0594207467043506], DiskBox[168, 0.0594207467043506], 
         DiskBox[169, 0.0594207467043506], DiskBox[170, 0.0594207467043506], 
         DiskBox[171, 0.0594207467043506], DiskBox[172, 0.0594207467043506], 
         DiskBox[173, 0.0594207467043506], DiskBox[174, 0.0594207467043506], 
         DiskBox[175, 0.0594207467043506], DiskBox[176, 0.0594207467043506], 
         DiskBox[177, 0.0594207467043506], DiskBox[178, 0.0594207467043506], 
         DiskBox[179, 0.0594207467043506], DiskBox[180, 0.0594207467043506], 
         DiskBox[181, 0.0594207467043506], DiskBox[182, 0.0594207467043506], 
         DiskBox[183, 0.0594207467043506], DiskBox[184, 0.0594207467043506], 
         DiskBox[185, 0.0594207467043506], DiskBox[186, 0.0594207467043506], 
         DiskBox[187, 0.0594207467043506], DiskBox[188, 0.0594207467043506], 
         DiskBox[189, 0.0594207467043506], DiskBox[190, 0.0594207467043506], 
         DiskBox[191, 0.0594207467043506], 
         DiskBox[192, 0.0594207467043506]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.894567117719056*^9, 3.8945671215179253`*^9}},
 CellLabel->
  "Out[439]=",ExpressionUUID->"0ad2be4d-9d1d-4fb0-bbf9-6066033749b8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1, -1}, {1, 1}}, {{1, 0}, {0, -1}}, {{1, -1}, {
         Complex[0, 1], 
         Complex[0, 1]}}, {{1, -1}, {
         Complex[0, -1], 
         Complex[0, -1]}}, {{1, -1}, {-1, -1}}, {{0, -1}, {1, 0}}}, {{{6, 
       5}, {5, 6}, {5, 4}, {3, 4}, {3, 5}, {4, 3}, {4, 1}, {1, 2}, {1, 3}, {2,
        1}}, Null, {1, 1, 2, 1, 2, 1, 2, 1, 2, 1}}, {
      EdgeStyle -> {DirectedEdge[{{1, -1}, {
             Complex[0, -1], 
             Complex[0, -1]}}, {{1, -1}, {
             Complex[0, 1], 
             Complex[0, 1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, -1}, {
             Complex[0, 1], 
             Complex[0, 1]}}, {{1, -1}, {
             Complex[0, -1], 
             Complex[0, -1]}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, -1}, {-1, -1}}, {{1, -1}, {
             Complex[0, -1], 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{0, -1}, {1, 0}}, {{1, -1}, {-1, -1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, -1}, {1, 1}}, {{1, -1}, {
             Complex[0, 1], 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, DirectedEdge[{{1, -1}, {
             Complex[0, -1], 
             Complex[0, -1]}}, {{1, -1}, {1, 1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0}, {0, -1}}, {{1, -1}, {1, 1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, -1}, {1, 1}}, {{1, 0}, {0, -1}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, -1}, {
             Complex[0, 1], 
             Complex[0, 1]}}, {{1, -1}, {-1, -1}}, 2] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 0.6], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, -1}, {-1, -1}}, {{0, -1}, {1, 0}}, 1] -> {
           Directive[
            RGBColor[0.8901960784313725, 0.25, 0], 
            Thickness[Large]]}}, GraphLayout -> {"Dimension" -> 2}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {3.617785491119614, 0.5098735721607764}, 2}], 
           0.03804425995071126]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{1, 3}, 0.03804425995071126]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {3.6177261190005607`, 0.15044122717383895`}, 1}], 
           0.03804425995071126]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           3, {2.191492354411905, 0.3302159664655692}, 4}], 
           0.03804425995071126]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{3, 5}, 0.03804425995071126]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{4, 1}, 0.03804425995071126]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           4, {1.9743581532947032`, 0.3300042187279602}, 3}], 
           0.03804425995071126]}, 
         {RGBColor[0.24720000000000014`, 0.63, 0.6], Thickness[Large], 
          ArrowBox[{5, 4}, 0.03804425995071126]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           5, {0.5470569591277352, 0.15009981172105522`}, 6}], 
           0.03804425995071126]}, 
         {RGBColor[0.8901960784313725, 0.25, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           6, {0.5471126680788702, 0.5099519538069095}, 5}], 
           0.03804425995071126]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.03804425995071126], DiskBox[2, 0.03804425995071126], 
         DiskBox[3, 0.03804425995071126], DiskBox[4, 0.03804425995071126], 
         DiskBox[5, 0.03804425995071126], DiskBox[6, 0.03804425995071126]}}]],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.894567117719056*^9, 3.894567121704051*^9}},
 CellLabel->
  "Out[440]=",ExpressionUUID->"691bc33c-cb98-4f57-9e9e-13ff40886096"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cayleyGraph", " ", "=", " ", 
  RowBox[{"CayleyGraphBuilder", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PhaseGate", "[", 
       RowBox[{"2", ",", "1"}], "]"}], ",", 
      RowBox[{"PhaseGate", "[", 
       RowBox[{"2", ",", "2"}], "]"}], ",", 
      RowBox[{"CNOTGate", "[", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", "Thick"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{"Red", ",", "Thick"}], "]"}], ",", 
      RowBox[{"Directive", "[", 
       RowBox[{
        TemplateBox[<|"color" -> RGBColor[0.24720000000000014`, 0.63, 1]|>,
         "RGBColorSwatchTemplate"], ",", "Thick"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"CayleyGraphQuotient13", "[", 
  RowBox[{"cayleyGraph", ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0", ",", "0", ",", "1"}], "}"}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.894567145058096*^9, 3.894567154876442*^9}, {
  3.894567352527464*^9, 3.894567422700193*^9}},
 CellLabel->
  "In[456]:=",ExpressionUUID->"25abf9e9-16b9-48da-86ad-6ceb77b0dc9e"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
       0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
       0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0,
        1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0,
        0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0,
        1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 
       0, -1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
       0, 1}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 
       0, -1, 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0,
        0, -1}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
        0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0,
        0, 0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 
       0, 0, 1}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, 1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, 
       1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 
       1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
         Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
       0, 1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, {{1,
        0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
       0, -1}}}, {CompressedData["
1:eJwVxdW10wAAANDG3d0b97RxlxkY4S3AiowGfNxz/Z/fv37A1+v155//AyAA
ATACISiC4QSO4SRIgTTIQDTEQhzMwxwMoCwqoCImYSKGEDIhEQoJkAiJUySl
Uhqt0jptMCZjMCCrsxZrcw5ncxDv8g7vCZZACm/RF98iKgWSL4VyJAeyrnhK
qBAqosZqoqVaolF6rGe6bOSGbNCmaOZmYWUWYJV2ZZc269RO5TTux63d2Cu8
xuPf3zf+FnzG//pt0AVMkIVN2IZShEdd1MdoPMRuMiZuoqZ2OqZTNmRgFuTv
PMrnYirmwiyXEi6tSquWaq23WquHZm7WxvnAn+2zf40v8T3atT1av8M6szv7
vT/7aBAGaqjHcvyM16RM15TO19zP+ZIs/HKv/Xqv1cZt6fbs7f7sn+M+lON7
Pmdxdld47dd4n7d3L8/xTM/2F57jMys=
       "], Null, {1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 
       3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,
        3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 
       2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1,
        2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 
       1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3,
        1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 
       3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2,
        3, 1, 2, 3, 1, 2, 3}}, {
      EdgeStyle -> {
        DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0,
            0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
           0, -1}, {0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, -1, 0, 
            0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {
           0, 0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, -1}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
            0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0,
            0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0,
            0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 
            0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
            0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 
           0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0,
            0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
           0, -1}, {0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {
           0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 
            0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
           0, -1}, {0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {
           0, 0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
            0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
           1}, {0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, -1}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
           1}, {0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
           0, -1}, {0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
            0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {
            0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 1}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {
            0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0,
            0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, -1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 
            0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 
           0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0,
            0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {
           0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, -1}, {0, 0, 1, 0}},
            3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 1}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, -1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
           0, -1}, {0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, -1, 0}, {0, 
           0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, -1, 0}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {0, 0, 1, 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, {{1, 0, 0, 0}, {0, 
             Complex[0, 1], 0, 0}, {0, 0, 0, -1}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
           0, -1}, {0, 0, 1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, 1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, DirectedEdge[{{1, 0, 0, 0}, {0, 
             Complex[0, -1], 0, 0}, {0, 0, 0, 1}, {0, 0, 
             Complex[0, 1], 0}}, {{1, 0, 0, 0}, {0, 1, 0, 0}, {0, 0, 0, 1}, {
           0, 0, -1, 0}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
l6VrnhkOw7vJQkEBOSZOOmo63ZEZAuM4kQnbeQZSLng8PtU/AGZfxitWVTPQ
cn+xUU5WP6QmxS3RjmEg9pttdX7VB2mnX4mqPCQhWjpsybpCxee71r86QfiN
CfdzWqVOVNTV4x2mFC+A53DJu8arVDRNtHOoX7cAYd++Xmt3peK2Oh2nx17z
sI4hHNxyl4oRowvPPVt5kP1xu0/RcyomF/w7vxR4MO7wzy7sPRW1XTSvvw+d
g08GJ1bqZlOx61Hj7d3tHLi0msbkSdFRs1tHRVGDA+P7/Fbe3EbHbwsl9+s+
jEFuWGxfqj4dA2VT218QfXs2T949/BodR9++KSx0G4XUozVFq1/R8V24YX4u
sW/2lkYv1+fT8bu87LJaixEIaD/7NmiUjjbvtNRTvg7DRZ+xpwar+LF1/KBk
dAUVT5XEXPDvHoGx75pRG0qo2JaV9kXDbBQSQgRuvyqi4nSlvs2BxlGYP33i
Ia+YigmcMxoaJ8dg7SlRkg5R76dgv4hUOgYHNnKP3Kun4rJPwWkKWhxoC2xY
F9tBxaXHVrl5ZXMg7cL5gMQRKrZTelZ9384Fx1726n8ZNBSMChL+8GMGlhUo
2f4ooiFbU2/KTW0WetRT5JxaaEhR1jOPi58Fz5kGjS4uDQ3V6rz7VsxB094a
icWCdGy/V5I+8WQORszO6vSto6OVVFniYx6hJwdXLpzWoKODnvMtRxse5Mpt
zjKwomPBnrRGkzIe2OXt3IIxNGyzCe/PuEXos8nw0jP5NMymkt47984De51d
bXMzDQv/M8rxPT4P7v8NGaYR83uwPB6fTuPBr9VLYpvpdPztGfljrwwPVGOv
Ch9YQsfTt19v9/eYg99JFFLbCjoulbmbkNgxC0uHl6gmrqXjYdXGt5MHiPU0
Wkq0XaAjTc7prsutMdgW/N+9pkt0TLWLHTvUPAq3Le448BGx6N23Sxb2jkJI
mriegS0dPf9k4VToCEj0TA/VmtJxx4/VrwLII9Bj8UzvEXFOWEqlLWcLhiDx
3mTWrQN03PtSof4ooVtvvD0zPikT4z1Z6P50egB6fGtadqSMwj2JvKpXrXWQ
ITX7alqXOF/WDtUC4fVwtC/uXNPQGKzRZrYf298AT4S+vfd6zIHCYaEe2q8G
6DpHmvQj+CH1WVJ/68ZGSNC26o8o54J0xdTWSMdGiMIjfibO46Dxfv11+eBG
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
m+QR/D8mzNba1OEIQDIIVTg6nPw/NNASxA==
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[0.02398389378071558], 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{1, 2}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{1, 3}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {1.6208741807626343`, 2.9891750395052257`}, 4}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{2, 11}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{2, 12}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {0.5923464535313808, 1.3471559508866937`}, 13}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{3, 12}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{3, 14}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           3, {2.0519990439129887`, 3.0057975829907133`}, 15}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           4, {1.6298014239713263`, 2.614167038159605}, 1}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{4, 15}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{4, 16}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{5, 3}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{5, 6}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           5, {0.5998691167960951, 2.205179067267332}, 7}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{6, 14}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{6, 17}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           6, {0.652568205324745, 1.7633811202635075`}, 18}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           7, {0.1712179764474839, 2.2596618327819566`}, 5}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{7, 18}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{7, 19}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{8, 7}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{8, 9}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           8, {0.27440892622744634`, 1.7904349475776096`}, 10}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{9, 19}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{9, 20}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           9, {1.9942762394500724`, 0.8506287916092599}, 21}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{10, 1}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{10, 5}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           10, {0.6317636623847603, 1.809503880840249}, 8}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{11, 10}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{11, 22}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           11, {2.0193665475301916`, 3.0139320886482106`}, 23}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{12, 22}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{12, 24}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           12, {0.9475370094534356, 1.660411338828812}, 25}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           13, {0.15234218862166463`, 1.4250480190473427`}, 2}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{13, 25}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{13, 26}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{14, 24}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{14, 27}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           14, {2.2119165202339706`, 3.4006213182593057`}, 28}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           15, {1.9483543907511411`, 2.63061150962397}, 3}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{15, 28}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{15, 29}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{16, 29}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{16, 30}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           16, {3.271226203477163, 1.7127175940536778`}, 31}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{17, 10}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{17, 27}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           17, {0.25498613910935697`, 1.68825728353196}, 32}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           18, {0.14590639085861046`, 1.829187216065114}, 6}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{18, 32}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{18, 33}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{19, 33}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{19, 34}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           19, {1.331274129564313, 0.8538962918508145}, 35}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           20, {0.5119550075558822, 2.0976397689704087`}, 24}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{20, 34}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{20, 36}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           21, {1.9088445760204626`, 0.42775938513548967`}, 9}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{21, 31}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{21, 35}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{22, 5}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{22, 37}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           22, {1.9856387986380781`, 3.61746007675947}, 38}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           23, {2.0635167972879214`, 2.553526256742043}, 11}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{23, 38}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{23, 39}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           24, {0.9330707471903291, 2.1152745326872036`}, 20}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{24, 37}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{24, 40}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           25, {0.5168626921563149, 1.7550400316032477`}, 12}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{25, 20}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{25, 41}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{26, 18}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{26, 41}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           26, {1.8633432824876583`, 0.4525995713726595}, 42}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{27, 1}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{27, 40}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           27, {1.5796641419291944`, 3.5464268120364135`}, 43}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           28, {2.1616914679337174`, 2.9375270841900525`}, 14}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{28, 43}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{28, 44}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{29, 44}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{29, 45}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           29, {2.90718847073682, 1.409747738119854}, 46}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           30, {1.6023378333236966`, 3.0607428978725024`}, 37}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{30, 45}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{30, 47}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           31, {2.8519673603662006`, 1.6511058339380293`}, 16}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{31, 42}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{31, 46}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{32, 8}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           32, {-0.20769066103164596`, 1.7038118910389206`}, 17}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{32, 48}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{33, 13}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{33, 48}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           33, {1.3879667246230638`, 0.23500531203033534`}, 49}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{34, 13}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           34, {-0.09669744857064375, 2.012395816610758}, 40}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{34, 50}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           35, {1.305435920297161, 0.44796466231093224`}, 19}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{35, 46}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{35, 49}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{36, 8}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{36, 50}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           36, {1.7766152058264364`, 0.4950212584260663}, 51}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{37, 6}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           37, {1.721795068111843, 3.452818443867773}, 30}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{37, 52}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           38, {1.9923817929686527`, 3.194702786307788}, 22}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{38, 30}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{38, 53}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{39, 28}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{39, 53}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           39, {3.704453471778998, 1.6374160127817812`}, 54}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{40, 2}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           40, {0.31818555719422803`, 2.011078997075539}, 34}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{40, 52}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{41, 32}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{41, 36}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           41, {1.3204047438318778`, 0.5121461002995231}, 55}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           42, {1.8657334120411866`, -0.03154376254061257}, 26}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{42, 54}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{42, 55}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{43, 4}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           43, {1.597659364697899, 3.0557644302927907`}, 27}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{43, 56}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{44, 23}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{44, 56}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           44, {3.4028219329581204`, 1.3524227866861669`}, 57}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{45, 23}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           45, {1.4757752725238944`, 2.5498147044588677`}, 52}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{45, 58}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           46, {2.570774357285275, 1.491730934462376}, 29}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{46, 55}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{46, 57}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{47, 4}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{47, 58}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           47, {2.9153320183478435`, 1.437963150521007}, 59}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{48, 9}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{48, 25}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           48, {1.6636920756950082`, 0.5607410066875349}, 60}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           49, {1.376228107577535, -0.1993127685257143}, 33}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{49, 57}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{49, 60}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{50, 7}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{50, 26}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           50, {1.701424543535082, 0.9665550880522984}, 61}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           51, {1.6242947102710235`, 0.11482344905537416`}, 36}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{51, 59}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{51, 61}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{52, 11}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{52, 17}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           52, {1.6153553671745595`, 2.9989406208762937`}, 45}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{53, 43}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{53, 47}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           53, {3.055226421088907, 1.85017392581282}, 62}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{54, 21}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           54, {3.267326240902683, 1.679778070678571}, 39}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{54, 62}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           55, {1.3370411142183172`, 0.08928220838927801}, 41}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{55, 51}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{55, 62}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{56, 16}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{56, 38}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           56, {3.37654275375534, 1.9596434683994388`}, 63}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           57, {2.931333992383618, 1.4674144782654865`}, 44}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{57, 51}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{57, 63}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{58, 15}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{58, 39}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           58, {3.392036984670586, 1.3225954790672705`}, 64}], 
           0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           59, {2.4641861186514165`, 1.4101837086119187`}, 47}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{59, 49}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{59, 64}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{60, 21}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           60, {1.6576605425539668`, 0.0982468561968532}, 48}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{60, 63}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{61, 42}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           61, {1.620122993731186, 0.5301032481986718}, 50}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{61, 64}, 0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{62, 35}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           62, {2.6094554086326274`, 1.9507718138786696`}, 53}], 
           0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{62, 59}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{63, 31}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           63, {2.9093157031650145`, 2.0162954031722626`}, 56}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{63, 61}, 0.0340599408633096]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{64, 54}, 0.0340599408633096]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           64, {2.988945137328335, 1.2934788410709983`}, 58}], 
           0.0340599408633096]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[{64, 60}, 0.0340599408633096]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.0340599408633096], DiskBox[2, 0.0340599408633096], 
         DiskBox[3, 0.0340599408633096], DiskBox[4, 0.0340599408633096], 
         DiskBox[5, 0.0340599408633096], DiskBox[6, 0.0340599408633096], 
         DiskBox[7, 0.0340599408633096], DiskBox[8, 0.0340599408633096], 
         DiskBox[9, 0.0340599408633096], DiskBox[10, 0.0340599408633096], 
         DiskBox[11, 0.0340599408633096], DiskBox[12, 0.0340599408633096], 
         DiskBox[13, 0.0340599408633096], DiskBox[14, 0.0340599408633096], 
         DiskBox[15, 0.0340599408633096], DiskBox[16, 0.0340599408633096], 
         DiskBox[17, 0.0340599408633096], DiskBox[18, 0.0340599408633096], 
         DiskBox[19, 0.0340599408633096], DiskBox[20, 0.0340599408633096], 
         DiskBox[21, 0.0340599408633096], DiskBox[22, 0.0340599408633096], 
         DiskBox[23, 0.0340599408633096], DiskBox[24, 0.0340599408633096], 
         DiskBox[25, 0.0340599408633096], DiskBox[26, 0.0340599408633096], 
         DiskBox[27, 0.0340599408633096], DiskBox[28, 0.0340599408633096], 
         DiskBox[29, 0.0340599408633096], DiskBox[30, 0.0340599408633096], 
         DiskBox[31, 0.0340599408633096], DiskBox[32, 0.0340599408633096], 
         DiskBox[33, 0.0340599408633096], DiskBox[34, 0.0340599408633096], 
         DiskBox[35, 0.0340599408633096], DiskBox[36, 0.0340599408633096], 
         DiskBox[37, 0.0340599408633096], DiskBox[38, 0.0340599408633096], 
         DiskBox[39, 0.0340599408633096], DiskBox[40, 0.0340599408633096], 
         DiskBox[41, 0.0340599408633096], DiskBox[42, 0.0340599408633096], 
         DiskBox[43, 0.0340599408633096], DiskBox[44, 0.0340599408633096], 
         DiskBox[45, 0.0340599408633096], DiskBox[46, 0.0340599408633096], 
         DiskBox[47, 0.0340599408633096], DiskBox[48, 0.0340599408633096], 
         DiskBox[49, 0.0340599408633096], DiskBox[50, 0.0340599408633096], 
         DiskBox[51, 0.0340599408633096], DiskBox[52, 0.0340599408633096], 
         DiskBox[53, 0.0340599408633096], DiskBox[54, 0.0340599408633096], 
         DiskBox[55, 0.0340599408633096], DiskBox[56, 0.0340599408633096], 
         DiskBox[57, 0.0340599408633096], DiskBox[58, 0.0340599408633096], 
         DiskBox[59, 0.0340599408633096], DiskBox[60, 0.0340599408633096], 
         DiskBox[61, 0.0340599408633096], DiskBox[62, 0.0340599408633096], 
         DiskBox[63, 0.0340599408633096], DiskBox[64, 0.0340599408633096]}}]],
     
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8945673757784433`*^9, 3.89456742306848*^9}},
 CellLabel->
  "Out[456]=",ExpressionUUID->"8df48a58-e950-45fd-a2f8-d93d239379d8"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
       0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
         Complex[0, 1]}, {0, 0, 
         Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 
       0, -1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
       1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
         Complex[0, -1], 0}, {0, 0, 0, 
         Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 
       0, -1, 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
         Complex[0, -1]}, {0, 0, 
         Complex[0, -1], 0}}}, {{{8, 4}, {8, 6}, {3, 7}, {3, 1}, {4, 3}, {4, 
       5}, {7, 8}, {7, 2}, {6, 5}, {6, 5}, {6, 8}, {1, 2}, {1, 2}, {1, 3}, {5,
        1}, {5, 1}, {5, 4}, {2, 6}, {2, 6}, {2, 7}}, Null, {2, 3, 2, 3, 2, 3, 
       2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3}}, {
      EdgeStyle -> {DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
           1}, {0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, -1}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 0}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0,
            0, 0, -1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 
           1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {
           0, 0, 0, 1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
           0, -1}, {0, 0, -1, 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0,
            0, 0, -1}}, 1] -> {
           Directive[
            GrayLevel[0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, -1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, -1]}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {
           0, 0, 0, 1}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, 1]}}, 3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 
           0, -1}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 
             Complex[0, -1], 0}, {0, 0, 0, 
             Complex[0, -1]}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 
             Complex[0, 1]}, {0, 0, 
             Complex[0, -1], 0}}, 2] -> {
           Directive[
            RGBColor[1, 0, 0], 
            Thickness[Large]]}, 
         DirectedEdge[{{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, 0, 1}, {0, 0, -1, 
           0}}, {{1, 0, 0, 0}, {0, -1, 0, 0}, {0, 0, -1, 0}, {0, 0, 0, 1}}, 
           3] -> {
           Directive[
            RGBColor[0.24720000000000014`, 0.63, 1], 
            Thickness[Large]]}}, GraphLayout -> {"Dimension" -> 2}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJw9l3k01Vvcxs8hUhlKlBJKlNwGiUjp+YWKkkqSBiWlVC4alEqUEsWVDLlJ
hhCpZIhQHFMZohDKnPkcZ0Rnxn3Pu9a73v3PXt/1XfuPvdfneb7PXubqZe8m
RSKR5Mgk0v/ug73BZldjhCA9HI3455cr/IlZjRH6dGye1NHp7hpFDNdYes7+
IZD+b6lQbGeqRfEgM7JljSptFIkXpYfUF0oRHcE3SoMFozCYTm3PDBBCvGHz
Z4V+0f+fK3k13mFSO4pM33WtvSuG8KZK7Hi0U4RUWUXTrc18LJl3ttJgaTb2
3fZhvDnJR+MC+7XvNr1HcvfD7af/8HCMWHQrPKMQK35V8FMf8lC1dJSy9nwJ
DvOCE9/q8LDxYPfdXvNykC7oxRdXcFER/ThEi1mJcOuFDBk3Lm4rJQYR5V8Q
bfhkdvUcLhY4lH2KKawFYyiaNrKVA7Ulpr5HdPtgpJ9/NL2FDZt6rmcYvQ+C
bVGHTI3ZuHo0PT+tqB/Kf0Wv7ktkIUvVYfvqRwMgPmftEKmw8HWBbU7yhUFE
ub4caI1mYmuz1KW7dkPI3nK4n6LFRHn9IcPdJsPwftASM5XPgNkXLS0v3RF4
bH7xk/JdAO8ZOdFG9qWo7zuR0xMnwBJ336lXfRXotCvKPuAigIF9/XTNvS+4
p2EcsG2pAFykk/fNrcOz8xby3zr48LQKztENbIBeb8VV7Qg+UhZoCLQ8GjGb
nvPnPMEHyfh2kL1cM0zj+IVtdB5cYsSXCqJ/IGIPL5avOY6KpiCLiDuDeGLi
U1D4eQxUbbsINwxBV/W07Az3McTeefz97z9D+PpghvQ82THcfFzaaJ40jOn0
2sxFSRy8e1HY7mUxgrsvyM5HNnLwqVS5P6VjBOn/rfFYHskGM4X+NcCdCtLE
ZAsph4XUGTZP39GpcNJw/WwpJcC+Ac8tMnFJlL12n1ZdfcbHv3oPtO3qUilf
w/ZE6G/gQ01GtNrgaAalZa5HUUItD07v/DrDd72mUCpnLZ93gofbhg12b5+8
pSzXfz9QNsGFHF9x37qt7yjJ45uCmMFcUHf7KSkszaZs3Cnf26bORb2v7t3R
PdkU3Z8r9Zk7WFhixFXZ9DCbohM7YVvkyYSBP9Nj4HQ25VLiob7pJwzUaGwJ
6fv1jmL8qDvZvIyO7J69bfsssihDRHD+n9FR6G096Ccz8w0ldCzo9IuFo6DG
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
Kcb/APSAY+g=
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {1.0863045747562974`, 0.29754297523593637`}, 2}], 
           0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {1.361631135155406, 0.5442184679888897}, 2}], 
           0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           1, {1.1329446258572313`, -0.15224775486250774`}, 3}], 
           0.024696795012341816`]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {1.0830574600347505`, 1.3822876873931884`}, 6}], 
           0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {1.3595573399362648`, 1.1373621434529098`}, 6}], 
           0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           2, {0.4248673562315667, 0.698660526473554}, 7}], 
           0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           3, {1.132188025382957, 0.15454828100104911`}, 1}], 
           0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{3, 7}, 0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{4, 3}, 0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           4, {1.8357875469556602`, 0.9817311442200994}, 5}], 
           0.024696795012341816`]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           5, {2.0683553265133052`, 0.3136612306553106}, 1}], 
           0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           5, {1.7919180516713777`, 0.5314774607936984}, 1}], 
           0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           5, {1.8364077137430568`, 0.702059501745339}, 4}], 
           0.024696795012341816`]}, 
         {GrayLevel[0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           6, {2.0651708168513765`, 1.3712966290106572`}, 5}], 
           0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           6, {1.7897816513926676`, 1.151730450059604}, 5}], 
           0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           6, {1.1276009612405837`, 1.5260019002000116`}, 8}], 
           0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           7, {0.4240786489417207, 0.9778631572911874}, 2}], 
           0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{7, 8}, 0.024696795012341816`]}, 
         {RGBColor[1, 0, 0], Thickness[Large], 
          ArrowBox[{8, 4}, 0.024696795012341816`]}, 
         {RGBColor[0.24720000000000014`, 0.63, 1], Thickness[Large], 
          ArrowBox[BezierCurveBox[{
           8, {1.1270632372072742`, 1.8327409188362744`}, 6}], 
           0.024696795012341816`]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.024696795012341816], DiskBox[2, 0.024696795012341816], 
         DiskBox[3, 0.024696795012341816], DiskBox[4, 0.024696795012341816], 
         DiskBox[5, 0.024696795012341816], DiskBox[6, 0.024696795012341816], 
         DiskBox[7, 0.024696795012341816], 
         DiskBox[8, 0.024696795012341816]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->{
   "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.8945673757784433`*^9, 3.894567423202284*^9}},
 CellLabel->
  "Out[457]=",ExpressionUUID->"914cc70e-d30a-4c56-b2f9-343f9f07a717"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1440, 768},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"13.1 for Mac OS X x86 (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"d2d91154-abd2-4196-9106-dcf08791b425"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 281, 4, 69, "Chapter",ExpressionUUID->"c606f1d7-66fb-41cf-a8db-e253a7820f75"],
Cell[CellGroupData[{
Cell[886, 30, 423, 6, 67, "Section",ExpressionUUID->"d82ff012-e3c2-4816-9bdf-8ea12890d4e1"],
Cell[CellGroupData[{
Cell[1334, 40, 164, 3, 54, "Subsection",ExpressionUUID->"0f925df7-6361-4c89-a796-65d28d95043f"],
Cell[1501, 45, 18769, 428, 1144, "Input",ExpressionUUID->"15a8188b-56a5-4f84-898a-e70ce06faed0"]
}, Closed]],
Cell[CellGroupData[{
Cell[20307, 478, 224, 4, 38, "Subsection",ExpressionUUID->"a00750ed-b1f2-45d6-be67-e18d000e5624"],
Cell[CellGroupData[{
Cell[20556, 486, 182, 3, 45, "Subsubsection",ExpressionUUID->"436dbfe6-b5dd-46d9-ab33-143d534aaa46"],
Cell[20741, 491, 19629, 471, 1143, "Input",ExpressionUUID->"219f573a-722c-472f-8fc0-6f22709c765e"]
}, Closed]],
Cell[CellGroupData[{
Cell[40407, 967, 190, 3, 37, "Subsubsection",ExpressionUUID->"c20a638b-2258-4cfa-8ba2-46520fe93ecf"],
Cell[40600, 972, 4110, 95, 178, "Input",ExpressionUUID->"bed796c4-2379-43d2-b817-48054316e375"],
Cell[44713, 1069, 5826, 130, 199, "Input",ExpressionUUID->"a1296da3-3411-4bc7-8652-e52575ef3be8"],
Cell[50542, 1201, 965, 24, 52, "Input",ExpressionUUID->"adf5e79d-bb00-430c-b87f-5b253529d78b"],
Cell[51510, 1227, 1455, 29, 73, "Input",ExpressionUUID->"f62c511d-8274-4af6-af6f-af3deb31ee28"],
Cell[52968, 1258, 1300, 33, 73, "Input",ExpressionUUID->"6fc91238-43cd-4091-bb26-f86ab6f9d4c2"],
Cell[54271, 1293, 1241, 27, 52, "Input",ExpressionUUID->"4f2b9ba8-574a-48c7-9a7b-a29857de3c65"],
Cell[55515, 1322, 7080, 161, 412, "Input",ExpressionUUID->"8e91bba0-cf65-4985-8afc-77cc2de65d2e"]
}, Closed]],
Cell[CellGroupData[{
Cell[62632, 1488, 234, 4, 37, "Subsubsection",ExpressionUUID->"5116725d-5583-4ea3-aa21-1135a0a8c497"],
Cell[62869, 1494, 468, 8, 24, "Input",ExpressionUUID->"47eeaa71-1f56-4ff9-bf4b-c282d9cc03a3"],
Cell[63340, 1504, 1154, 30, 41, "Input",ExpressionUUID->"5ae25760-c2d0-4c44-910d-2904a539d480"],
Cell[64497, 1536, 1172, 33, 41, "Input",ExpressionUUID->"703af65b-1935-4710-8bb1-578389f12769"],
Cell[65672, 1571, 17067, 411, 665, "Input",ExpressionUUID->"dacbe514-984d-461f-bf2d-f5805c27ada7"],
Cell[82742, 1984, 1170, 37, 40, "Input",ExpressionUUID->"9e62519b-1d42-4031-9016-796ca41e3b00"]
}, Closed]],
Cell[CellGroupData[{
Cell[83949, 2026, 177, 3, 37, "Subsubsection",ExpressionUUID->"83e1788f-7c2e-44d0-9ad5-5a078acd3335"],
Cell[84129, 2031, 7153, 151, 259, "Input",ExpressionUUID->"f3d48576-90a2-4f22-a1b5-20e117351d47"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91331, 2188, 250, 4, 38, "Subsection",ExpressionUUID->"c9c8a928-b451-486d-8da8-e9142c9e8925"],
Cell[91584, 2194, 597, 11, 22, "Input",ExpressionUUID->"68e7732d-6b83-4be5-b0aa-c9c5a6ea4906"],
Cell[CellGroupData[{
Cell[92206, 2209, 167, 3, 33, "Subsubsection",ExpressionUUID->"0b6d7717-12d4-4529-9551-3560f8aa344b"],
Cell[92376, 2214, 38892, 889, 2022, "Input",ExpressionUUID->"f975f4aa-2348-46a9-826b-93aa2a6afd84"]
}, Closed]],
Cell[CellGroupData[{
Cell[131305, 3108, 159, 3, 27, "Subsubsection",ExpressionUUID->"93f7e047-08b8-48de-882b-ccc6542ae214"],
Cell[131467, 3113, 18250, 460, 904, "Input",ExpressionUUID->"7073d8f3-0950-4dd3-b206-55c92f701c10"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[149766, 3579, 172, 3, 38, "Subsection",ExpressionUUID->"ee5dbfa3-21b3-4aad-9478-c18470c07cbd"],
Cell[149941, 3584, 467, 8, 22, "Input",ExpressionUUID->"8b1e009b-b681-4dc3-a92f-4712150e6da0"],
Cell[150411, 3594, 24613, 555, 747, "Input",ExpressionUUID->"fd3fceb4-9692-43a9-96da-3f9d19befd4f"]
}, Closed]],
Cell[CellGroupData[{
Cell[175061, 4154, 176, 3, 38, "Subsection",ExpressionUUID->"cf8d8194-1802-4017-950d-ac7730fd1d16"],
Cell[175240, 4159, 464, 9, 58, "Text",ExpressionUUID->"2f595d52-435d-449b-8745-e14aee3de32b"],
Cell[175707, 4170, 4603, 98, 262, "Input",ExpressionUUID->"90642a79-4e87-4244-a5d8-09a6e102bcd2"],
Cell[180313, 4270, 171, 2, 30, "Input",ExpressionUUID->"37a348ba-7490-4a25-ac1d-ee973437a731"],
Cell[180487, 4274, 3787, 78, 220, "Input",ExpressionUUID->"988f79c1-48e0-4a92-b67c-38dd98501289"],
Cell[184277, 4354, 814, 13, 81, "Text",ExpressionUUID->"9c4dd12a-d2af-4357-8ad7-230c8dc229e4"],
Cell[185094, 4369, 7259, 158, 325, "Input",ExpressionUUID->"822b6aeb-a7cb-4fb1-9eb4-c0b02fb126b1"]
}, Closed]],
Cell[CellGroupData[{
Cell[192390, 4532, 180, 3, 38, "Subsection",ExpressionUUID->"7598da83-f7df-4c41-8d90-5fb0b9ca796b"],
Cell[192573, 4537, 13609, 291, 745, "Input",ExpressionUUID->"587dd261-aeda-43a3-bdc8-7d984f3bdb69"],
Cell[206185, 4830, 1987, 48, 157, "Input",ExpressionUUID->"b0bbddd0-ee9f-482c-af7f-4beec212d2fc"],
Cell[208175, 4880, 20049, 456, 1165, "Input",ExpressionUUID->"3d371c55-68cf-49da-b6a8-a6087e1688b8"],
Cell[228227, 5338, 18041, 341, 619, "Input",ExpressionUUID->"41133d2b-cacf-4af2-883e-7e6516d376a0"],
Cell[246271, 5681, 171, 2, 30, "Input",ExpressionUUID->"862b059d-a57f-4ab5-bc5f-9d65631fa5e4"],
Cell[246445, 5685, 6538, 155, 325, "Input",ExpressionUUID->"32ae0cc5-b015-4587-b440-7a1ff6f265da"],
Cell[252986, 5842, 9641, 200, 535, "Input",ExpressionUUID->"75fef2fa-2804-4dba-8e99-8ccf05c6d8cf"],
Cell[262630, 6044, 3423, 86, 178, "Input",ExpressionUUID->"533343f1-bb17-4276-bc79-1bc1ad7b6838"],
Cell[266056, 6132, 1715, 41, 94, "Input",ExpressionUUID->"8f1972d5-5ac4-45a0-9cb3-4be756744828"],
Cell[267774, 6175, 2734, 69, 94, "Input",ExpressionUUID->"31ccffe6-1e56-4df3-a7c6-aa06e6043e62"],
Cell[270511, 6246, 1863, 51, 73, "Input",ExpressionUUID->"c48063ba-f950-41f1-a7e3-d097c9c4dbac"],
Cell[272377, 6299, 16436, 423, 598, "Input",ExpressionUUID->"907c6c89-d03c-4688-98ce-994c0b2946a1"],
Cell[288816, 6724, 80, 0, 45, "Subsubsection",ExpressionUUID->"e093616c-0caa-45f2-a387-57b4ac0294b3"]
}, Closed]],
Cell[CellGroupData[{
Cell[288933, 6729, 220, 4, 38, "Subsection",ExpressionUUID->"803f02fb-73e9-42ed-83bc-aee2f8219b81"],
Cell[CellGroupData[{
Cell[289178, 6737, 192, 3, 45, "Subsubsection",ExpressionUUID->"bcd41635-6226-40c7-98c4-65306a271c59"],
Cell[289373, 6742, 8808, 214, 724, "Input",ExpressionUUID->"d50dbc8c-83b4-47bc-b273-26b3f2fbba0c"]
}, Closed]],
Cell[CellGroupData[{
Cell[298218, 6961, 170, 3, 37, "Subsubsection",ExpressionUUID->"ff30da1f-e9ae-41e4-a832-5206b880471f"],
Cell[298391, 6966, 3076, 75, 241, "Input",ExpressionUUID->"5df18fc1-cd09-4716-bd7e-a0ffcb8dc690"]
}, Closed]],
Cell[CellGroupData[{
Cell[301504, 7046, 210, 4, 37, "Subsubsection",ExpressionUUID->"e951cfae-2068-452e-9429-7d43fbf51c7a"],
Cell[301717, 7052, 12531, 291, 640, "Input",ExpressionUUID->"44d298f9-9e92-4a8d-85df-61bd56186c56"]
}, Closed]],
Cell[CellGroupData[{
Cell[314285, 7348, 177, 3, 37, "Subsubsection",ExpressionUUID->"9f80bd7e-a169-425e-9d18-d0b0884df8ce"],
Cell[314465, 7353, 338, 9, 30, "Input",ExpressionUUID->"26b96ff5-47b5-4983-87d4-2a45bf2a75c7"],
Cell[314806, 7364, 7263, 141, 430, "Input",ExpressionUUID->"ae2f596b-5300-4326-b935-24a562677e0c"],
Cell[322072, 7507, 6863, 155, 577, "Input",ExpressionUUID->"ae61d512-4652-464e-b141-61145bdbc57e"],
Cell[328938, 7664, 270, 6, 30, "Input",ExpressionUUID->"e4b14693-82a7-4810-a682-8a47654dea09"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329245, 7675, 188, 3, 45, "Subsubsection",ExpressionUUID->"fc5c14c4-fe8d-49f8-a7f5-93c7c7936d6f"],
Cell[329436, 7680, 210, 5, 30, "Input",ExpressionUUID->"0a0ee3d7-dc24-4660-b650-ef7b0f89d4bd"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[329695, 7691, 174, 3, 38, "Subsection",ExpressionUUID->"e69605e6-f161-493b-8139-40900592ca95"],
Cell[329872, 7696, 266, 6, 30, "Input",ExpressionUUID->"d0d26d3d-1347-4414-922f-7c2f62113970"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[330199, 7709, 164, 3, 69, "Chapter",ExpressionUUID->"4bd4b3e4-859a-4747-9be8-1b3cd1afd944"],
Cell[330366, 7714, 630, 10, 97, "Text",ExpressionUUID->"54f838fc-09f4-4201-9b43-d4a83c604c3b"],
Cell[CellGroupData[{
Cell[331021, 7728, 275, 6, 30, "Input",ExpressionUUID->"0e942165-cbea-4a3c-a9d5-df37401c325f"],
Cell[331299, 7736, 1102, 39, 137, "Output",ExpressionUUID->"d79d0e62-37b2-427b-883e-d0609db3db18"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332438, 7780, 268, 6, 30, "Input",ExpressionUUID->"f33a93e7-ba00-44be-957d-5fa6f4fad999"],
Cell[332709, 7788, 635, 19, 63, "Output",ExpressionUUID->"40de0605-6866-4776-8d0f-afb6341931a5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333381, 7812, 317, 8, 30, "Input",ExpressionUUID->"7d2a110f-fa24-4048-b11f-6f70c6bf38bc"],
Cell[333701, 7822, 963, 25, 165, "Output",ExpressionUUID->"3ba48e6d-9d8b-40f3-96fc-4d137c59ae2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334701, 7852, 263, 6, 30, "Input",ExpressionUUID->"a08416d3-ae01-40f7-8bf1-25a8598b6ee6"],
Cell[334967, 7860, 2115, 49, 301, "Output",ExpressionUUID->"905b6e89-047c-4731-a0a8-2692e59a6f8d"]
}, Open  ]],
Cell[337097, 7912, 498, 9, 74, "Text",ExpressionUUID->"950bd637-6709-4b7a-b7c1-cf2d9ad600c2"],
Cell[CellGroupData[{
Cell[337620, 7925, 529, 14, 30, "Input",ExpressionUUID->"0660a21a-2f5f-43e6-8cf5-297b39307e57"],
Cell[338152, 7941, 3078, 104, 98, "Output",ExpressionUUID->"62a35105-5558-4086-abf3-ed16f938f12b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341267, 8050, 608, 16, 52, "Input",ExpressionUUID->"7f0a7d29-9351-4ded-bac5-d32348b49ce6"],
Cell[341878, 8068, 177, 3, 34, "Output",ExpressionUUID->"225e7f62-19e7-4c66-b4ee-d51088ab8d1a"]
}, Open  ]],
Cell[342070, 8074, 587, 14, 51, "Text",ExpressionUUID->"94e6cd47-034e-4dd8-b32f-c84a84c714ae"],
Cell[CellGroupData[{
Cell[342682, 8092, 577, 15, 52, "Input",ExpressionUUID->"4e568260-7fb4-4c18-9205-8812fb5ad798"],
Cell[343262, 8109, 154, 3, 34, "Output",ExpressionUUID->"bc4f68a1-967d-4c64-b5a2-4511032bcd16"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[343465, 8118, 207, 4, 69, "Chapter",ExpressionUUID->"357ff9c2-c61c-42db-a35b-68d6243048d4"],
Cell[343675, 8124, 514, 9, 51, "Text",ExpressionUUID->"623fd53f-50c8-41d8-ad7f-ad7a8b61ebc0"],
Cell[CellGroupData[{
Cell[344214, 8137, 167, 3, 67, "Section",ExpressionUUID->"97e6355e-b72e-4977-82a6-90b4a24a6321"],
Cell[CellGroupData[{
Cell[344406, 8144, 169, 3, 45, "Subsubsection",ExpressionUUID->"72bd01a0-6bd5-4798-8e53-8a766792fe37"],
Cell[344578, 8149, 506, 9, 74, "Text",ExpressionUUID->"f3958066-6230-4360-b116-2783c3b40f87"],
Cell[CellGroupData[{
Cell[345109, 8162, 828, 22, 30, "Input",ExpressionUUID->"ce0794da-c831-47db-8442-df07bc939588"],
Cell[345940, 8186, 11933, 263, 267, "Output",ExpressionUUID->"38a1e057-1b83-4757-bff6-04ca6a5409df"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357910, 8454, 890, 24, 30, "Input",ExpressionUUID->"352854e6-ce57-4d49-883c-7245e0295f7d"],
Cell[358803, 8480, 393263, 9466, 367, "Output",ExpressionUUID->"70296ccb-6aa7-476e-bbfe-22e31c00a1c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[752103, 17951, 2125, 55, 56, "Input",ExpressionUUID->"38e9696c-fc99-4dab-b445-fd047e4215b0"],
Cell[754231, 18008, 116640, 2351, 393, "Output",ExpressionUUID->"95b1a92a-4f1c-49cc-b86e-f9de1c3de44e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[870920, 20365, 168, 3, 37, "Subsubsection",ExpressionUUID->"e45e63f1-c7fd-4d5b-a3f8-0b8f51603db9"],
Cell[871091, 20370, 391, 8, 51, "Text",ExpressionUUID->"78bc5f59-afd9-443c-b69c-f81ceb135411"],
Cell[CellGroupData[{
Cell[871507, 20382, 404, 10, 30, "Input",ExpressionUUID->"b2a2f5fe-ebf4-4732-a9d7-54670e2238f6"],
Cell[871914, 20394, 178547, 3862, 367, "Output",ExpressionUUID->"98423730-5186-471f-9b2b-25e6013a3553"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1050498, 24261, 403, 10, 30, "Input",ExpressionUUID->"97adbacf-585d-440d-8890-e622ee9a3ea2"],
Cell[1050904, 24273, 4282, 75, 364, "Output",ExpressionUUID->"2e0b1e07-31be-44c0-bdb4-4d57d2261a3e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1055235, 24354, 177, 3, 37, "Subsubsection",ExpressionUUID->"2ade80db-8067-4724-b5b8-c6a2dd56bf25"],
Cell[1055415, 24359, 360, 7, 51, "Text",ExpressionUUID->"16ae4533-497c-41ab-a9ee-25c5f7e150dc"],
Cell[CellGroupData[{
Cell[1055800, 24370, 881, 25, 30, "Input",ExpressionUUID->"74e6a192-6e08-4bb5-a8b4-dcc2e62f64e9"],
Cell[1056684, 24397, 50425, 942, 327, "Output",ExpressionUUID->"09f4a5ca-5112-4a2e-b620-cb546ea77ee5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1107146, 25344, 874, 24, 30, "Input",ExpressionUUID->"41bc04d6-b11c-44a3-920e-971160a4b85c"],
Cell[1108023, 25370, 403798, 9673, 368, "Output",ExpressionUUID->"b23cdbde-9839-48fd-b265-961e11caa809"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1511870, 35049, 174, 3, 37, "Subsubsection",ExpressionUUID->"3e102a88-b5d8-4d16-928a-6d70753bcfc3"],
Cell[1512047, 35054, 650, 15, 51, "Text",ExpressionUUID->"84f23204-e494-489e-b168-945fd00016a5"],
Cell[CellGroupData[{
Cell[1512722, 35073, 748, 21, 30, "Input",ExpressionUUID->"7d8b2a30-d15e-4b80-a740-2f64c7971196"],
Cell[1513473, 35096, 37744, 769, 360, "Output",ExpressionUUID->"bdfc24a5-9a28-4861-be0a-9f543044b4d5"]
}, Open  ]],
Cell[1551232, 35868, 300, 6, 51, "Text",ExpressionUUID->"33ef7d5f-2d27-48a6-980d-af0919cd47f4"],
Cell[CellGroupData[{
Cell[1551557, 35878, 716, 20, 30, "Input",ExpressionUUID->"474a687b-382c-45fc-8704-78e5db4f559e"],
Cell[1552276, 35900, 26944, 569, 335, "Output",ExpressionUUID->"4e5d8129-c58e-425a-918c-a4644e10f748"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1579281, 36476, 170, 3, 67, "Section",ExpressionUUID->"1b229524-d161-49d8-8d56-ce488f8a8bdd"],
Cell[1579454, 36481, 579, 10, 74, "Text",ExpressionUUID->"a356afcf-ed2f-4f50-91bb-6a28410c0b43"],
Cell[CellGroupData[{
Cell[1580058, 36495, 1119, 29, 52, "Input",ExpressionUUID->"6425f17b-bee9-4d2a-aaf6-3c5e5812bd6e"],
Cell[1581180, 36526, 367541, 8696, 367, "Output",ExpressionUUID->"0ad2be4d-9d1d-4fb0-bbf9-6066033749b8"],
Cell[1948724, 45224, 7403, 146, 92, "Output",ExpressionUUID->"691bc33c-cb98-4f57-9e9e-13ff40886096"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1956164, 45375, 1302, 35, 52, "Input",ExpressionUUID->"25abf9e9-16b9-48da-86ad-6ceb77b0dc9e"],
Cell[1957469, 45412, 120232, 2417, 368, "Output",ExpressionUUID->"8df48a58-e950-45fd-a2f8-d93d239379d8"],
Cell[2077704, 47831, 17269, 340, 328, "Output",ExpressionUUID->"914cc70e-d30a-4c56-b2f9-343f9f07a717"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

